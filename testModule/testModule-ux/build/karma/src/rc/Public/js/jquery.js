function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var cov_2f40l1qxdw = function () {
  var path = "C:\\Development\\TestModule\\testModule\\testModule-ux\\src\\rc\\Public\\js\\jquery.js",
    hash = "3b178e9a94fa6c2bce4b87336f32c9276806117b",
    Function = function () {}.constructor,
    global = new Function('return this')(),
    gcv = "__coverage__",
    coverageData = {
      path: "C:\\Development\\TestModule\\testModule\\testModule-ux\\src\\rc\\Public\\js\\jquery.js",
      statementMap: {
        "0": {
          start: {
            line: 1,
            column: 0
          },
          end: {
            line: 6548,
            column: 3
          }
        },
        "1": {
          start: {
            line: 3,
            column: 14
          },
          end: {
            line: 3,
            column: 37
          }
        },
        "2": {
          start: {
            line: 4,
            column: 21
          },
          end: {
            line: 4,
            column: 31
          }
        },
        "3": {
          start: {
            line: 5,
            column: 19
          },
          end: {
            line: 5,
            column: 40
          }
        },
        "4": {
          start: {
            line: 6,
            column: 0
          },
          end: {
            line: 6,
            column: 49
          }
        },
        "5": {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 62
          }
        },
        "6": {
          start: {
            line: 12,
            column: 0
          },
          end: {
            line: 12,
            column: 46
          }
        },
        "7": {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 28
          }
        },
        "8": {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 69
          }
        },
        "9": {
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 17,
            column: 46
          }
        },
        "10": {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 29
          }
        },
        "11": {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 185
          }
        },
        "12": {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        "13": {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 41
          }
        },
        "14": {
          start: {
            line: 24,
            column: 21
          },
          end: {
            line: 24,
            column: 42
          }
        },
        "15": {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 25,
            column: 38
          }
        },
        "16": {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 26,
            column: 63
          }
        },
        "17": {
          start: {
            line: 27,
            column: 21
          },
          end: {
            line: 27,
            column: 55
          }
        },
        "18": {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        "19": {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 89
          }
        },
        "20": {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        "21": {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 32,
            column: 62
          }
        },
        "22": {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 33,
            column: 82
          }
        },
        "23": {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 64
          }
        },
        "24": {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 66
          }
        },
        "25": {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 35
          }
        },
        "26": {
          start: {
            line: 46,
            column: 18
          },
          end: {
            line: 46,
            column: 62
          }
        },
        "27": {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 55
          }
        },
        "28": {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 37
          }
        },
        "29": {
          start: {
            line: 52,
            column: 0
          },
          end: {
            line: 52,
            column: 19
          }
        },
        "30": {
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 55,
            column: 28
          }
        },
        "31": {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 69
          }
        },
        "32": {
          start: {
            line: 57,
            column: 22
          },
          end: {
            line: 57,
            column: 46
          }
        },
        "33": {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 58,
            column: 29
          }
        },
        "34": {
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 72,
            column: 5
          }
        },
        "35": {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        "36": {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        "37": {
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 77,
            column: 51
          }
        },
        "38": {
          start: {
            line: 78,
            column: 25
          },
          end: {
            line: 78,
            column: 46
          }
        },
        "39": {
          start: {
            line: 80,
            column: 27
          },
          end: {
            line: 80,
            column: 76
          }
        },
        "40": {
          start: {
            line: 81,
            column: 25
          },
          end: {
            line: 81,
            column: 59
          }
        },
        "41": {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 82,
            column: 51
          }
        },
        "42": {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 73
          }
        },
        "43": {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 59
          }
        },
        "44": {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        "45": {
          start: {
            line: 95,
            column: 26
          },
          end: {
            line: 95,
            column: 85
          }
        },
        "46": {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 66
          }
        },
        "47": {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 15
          }
        },
        "48": {
          start: {
            line: 103,
            column: 17
          },
          end: {
            line: 103,
            column: 35
          }
        },
        "49": {
          start: {
            line: 104,
            column: 18
          },
          end: {
            line: 104,
            column: 62
          }
        },
        "50": {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 55
          }
        },
        "51": {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 37
          }
        },
        "52": {
          start: {
            line: 110,
            column: 0
          },
          end: {
            line: 110,
            column: 17
          }
        },
        "53": {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        "54": {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        "55": {
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 123,
            column: 40
          }
        },
        "56": {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 124,
            column: 41
          }
        },
        "57": {
          start: {
            line: 126,
            column: 16
          },
          end: {
            line: 126,
            column: 40
          }
        },
        "58": {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 40
          }
        },
        "59": {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 130,
            column: 27
          }
        },
        "60": {
          start: {
            line: 309,
            column: 18
          },
          end: {
            line: 309,
            column: 49
          }
        },
        "61": {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 315,
            column: 6
          }
        },
        "62": {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 316,
            column: 33
          }
        },
        "63": {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 37
          }
        },
        "64": {
          start: {
            line: 320,
            column: 22
          },
          end: {
            line: 320,
            column: 24
          }
        },
        "65": {
          start: {
            line: 321,
            column: 19
          },
          end: {
            line: 321,
            column: 49
          }
        },
        "66": {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 353,
            column: 5
          }
        },
        "67": {
          start: {
            line: 325,
            column: 26
          },
          end: {
            line: 325,
            column: 180
          }
        },
        "68": {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 326,
            column: 62
          }
        },
        "69": {
          start: {
            line: 327,
            column: 21
          },
          end: {
            line: 327,
            column: 43
          }
        },
        "70": {
          start: {
            line: 330,
            column: 23
          },
          end: {
            line: 330,
            column: 38
          }
        },
        "71": {
          start: {
            line: 331,
            column: 23
          },
          end: {
            line: 331,
            column: 63
          }
        },
        "72": {
          start: {
            line: 334,
            column: 21
          },
          end: {
            line: 334,
            column: 56
          }
        },
        "73": {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 352,
            column: 9
          }
        },
        "74": {
          start: {
            line: 338,
            column: 24
          },
          end: {
            line: 338,
            column: 31
          }
        },
        "75": {
          start: {
            line: 339,
            column: 25
          },
          end: {
            line: 339,
            column: 60
          }
        },
        "76": {
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 351,
            column: 13
          }
        },
        "77": {
          start: {
            line: 342,
            column: 34
          },
          end: {
            line: 342,
            column: 58
          }
        },
        "78": {
          start: {
            line: 343,
            column: 16
          },
          end: {
            line: 350,
            column: 17
          }
        },
        "79": {
          start: {
            line: 344,
            column: 34
          },
          end: {
            line: 344,
            column: 55
          }
        },
        "80": {
          start: {
            line: 345,
            column: 20
          },
          end: {
            line: 349,
            column: 21
          }
        },
        "81": {
          start: {
            line: 346,
            column: 24
          },
          end: {
            line: 346,
            column: 60
          }
        },
        "82": {
          start: {
            line: 348,
            column: 24
          },
          end: {
            line: 348,
            column: 74
          }
        },
        "83": {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 362,
            column: 47
          }
        },
        "84": {
          start: {
            line: 364,
            column: 23
          },
          end: {
            line: 364,
            column: 73
          }
        },
        "85": {
          start: {
            line: 364,
            column: 58
          },
          end: {
            line: 364,
            column: 69
          }
        },
        "86": {
          start: {
            line: 366,
            column: 22
          },
          end: {
            line: 366,
            column: 74
          }
        },
        "87": {
          start: {
            line: 366,
            column: 47
          },
          end: {
            line: 366,
            column: 73
          }
        },
        "88": {
          start: {
            line: 369,
            column: 18
          },
          end: {
            line: 466,
            column: 5
          }
        },
        "89": {
          start: {
            line: 399,
            column: 28
          },
          end: {
            line: 399,
            column: 43
          }
        },
        "90": {
          start: {
            line: 408,
            column: 28
          },
          end: {
            line: 408,
            column: 57
          }
        },
        "91": {
          start: {
            line: 418,
            column: 28
          },
          end: {
            line: 418,
            column: 57
          }
        },
        "92": {
          start: {
            line: 445,
            column: 29
          },
          end: {
            line: 445,
            column: 58
          }
        },
        "93": {
          start: {
            line: 446,
            column: 28
          },
          end: {
            line: 446,
            column: 47
          }
        },
        "94": {
          start: {
            line: 447,
            column: 16
          },
          end: {
            line: 447,
            column: 41
          }
        },
        "95": {
          start: {
            line: 449,
            column: 41
          },
          end: {
            line: 453,
            column: 17
          }
        },
        "96": {
          start: {
            line: 455,
            column: 40
          },
          end: {
            line: 455,
            column: 82
          }
        },
        "97": {
          start: {
            line: 457,
            column: 16
          },
          end: {
            line: 459,
            column: 24
          }
        },
        "98": {
          start: {
            line: 469,
            column: 26
          },
          end: {
            line: 469,
            column: 86
          }
        },
        "99": {
          start: {
            line: 470,
            column: 4
          },
          end: {
            line: 470,
            column: 27
          }
        },
        "100": {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 474,
            column: 29
          }
        },
        "101": {
          start: {
            line: 477,
            column: 8
          },
          end: {
            line: 626,
            column: 11
          }
        },
        "102": {
          start: {
            line: 479,
            column: 26
          },
          end: {
            line: 479,
            column: 36
          }
        },
        "103": {
          start: {
            line: 480,
            column: 33
          },
          end: {
            line: 480,
            column: 49
          }
        },
        "104": {
          start: {
            line: 481,
            column: 30
          },
          end: {
            line: 481,
            column: 80
          }
        },
        "105": {
          start: {
            line: 482,
            column: 28
          },
          end: {
            line: 482,
            column: 74
          }
        },
        "106": {
          start: {
            line: 484,
            column: 29
          },
          end: {
            line: 484,
            column: 158
          }
        },
        "107": {
          start: {
            line: 485,
            column: 27
          },
          end: {
            line: 485,
            column: 150
          }
        },
        "108": {
          start: {
            line: 487,
            column: 27
          },
          end: {
            line: 487,
            column: 57
          }
        },
        "109": {
          start: {
            line: 488,
            column: 30
          },
          end: {
            line: 488,
            column: 32
          }
        },
        "110": {
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 541,
            column: 13
          }
        },
        "111": {
          start: {
            line: 492,
            column: 35
          },
          end: {
            line: 492,
            column: 190
          }
        },
        "112": {
          start: {
            line: 493,
            column: 16
          },
          end: {
            line: 493,
            column: 40
          }
        },
        "113": {
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 540,
            column: 17
          }
        },
        "114": {
          start: {
            line: 495,
            column: 37
          },
          end: {
            line: 495,
            column: 60
          }
        },
        "115": {
          start: {
            line: 496,
            column: 20
          },
          end: {
            line: 496,
            column: 42
          }
        },
        "116": {
          start: {
            line: 497,
            column: 20
          },
          end: {
            line: 500,
            column: 21
          }
        },
        "117": {
          start: {
            line: 498,
            column: 24
          },
          end: {
            line: 498,
            column: 119
          }
        },
        "118": {
          start: {
            line: 499,
            column: 24
          },
          end: {
            line: 499,
            column: 33
          }
        },
        "119": {
          start: {
            line: 502,
            column: 33
          },
          end: {
            line: 502,
            column: 54
          }
        },
        "120": {
          start: {
            line: 503,
            column: 35
          },
          end: {
            line: 503,
            column: 50
          }
        },
        "121": {
          start: {
            line: 504,
            column: 35
          },
          end: {
            line: 504,
            column: 75
          }
        },
        "122": {
          start: {
            line: 505,
            column: 33
          },
          end: {
            line: 505,
            column: 67
          }
        },
        "123": {
          start: {
            line: 507,
            column: 20
          },
          end: {
            line: 537,
            column: 21
          }
        },
        "124": {
          start: {
            line: 508,
            column: 36
          },
          end: {
            line: 508,
            column: 43
          }
        },
        "125": {
          start: {
            line: 509,
            column: 40
          },
          end: {
            line: 509,
            column: 78
          }
        },
        "126": {
          start: {
            line: 510,
            column: 37
          },
          end: {
            line: 510,
            column: 72
          }
        },
        "127": {
          start: {
            line: 512,
            column: 24
          },
          end: {
            line: 536,
            column: 25
          }
        },
        "128": {
          start: {
            line: 513,
            column: 45
          },
          end: {
            line: 513,
            column: 72
          }
        },
        "129": {
          start: {
            line: 514,
            column: 46
          },
          end: {
            line: 514,
            column: 70
          }
        },
        "130": {
          start: {
            line: 516,
            column: 28
          },
          end: {
            line: 535,
            column: 29
          }
        },
        "131": {
          start: {
            line: 517,
            column: 46
          },
          end: {
            line: 517,
            column: 78
          }
        },
        "132": {
          start: {
            line: 518,
            column: 45
          },
          end: {
            line: 518,
            column: 63
          }
        },
        "133": {
          start: {
            line: 519,
            column: 54
          },
          end: {
            line: 522,
            column: 34
          }
        },
        "134": {
          start: {
            line: 523,
            column: 48
          },
          end: {
            line: 523,
            column: 67
          }
        },
        "135": {
          start: {
            line: 525,
            column: 54
          },
          end: {
            line: 525,
            column: 118
          }
        },
        "136": {
          start: {
            line: 525,
            column: 80
          },
          end: {
            line: 525,
            column: 117
          }
        },
        "137": {
          start: {
            line: 527,
            column: 32
          },
          end: {
            line: 534,
            column: 33
          }
        },
        "138": {
          start: {
            line: 528,
            column: 36
          },
          end: {
            line: 528,
            column: 77
          }
        },
        "139": {
          start: {
            line: 530,
            column: 36
          },
          end: {
            line: 533,
            column: 39
          }
        },
        "140": {
          start: {
            line: 539,
            column: 20
          },
          end: {
            line: 539,
            column: 88
          }
        },
        "141": {
          start: {
            line: 544,
            column: 12
          },
          end: {
            line: 544,
            column: 49
          }
        },
        "142": {
          start: {
            line: 548,
            column: 12
          },
          end: {
            line: 548,
            column: 74
          }
        },
        "143": {
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 549,
            column: 44
          }
        },
        "144": {
          start: {
            line: 552,
            column: 12
          },
          end: {
            line: 552,
            column: 45
          }
        },
        "145": {
          start: {
            line: 553,
            column: 12
          },
          end: {
            line: 565,
            column: 15
          }
        },
        "146": {
          start: {
            line: 554,
            column: 16
          },
          end: {
            line: 554,
            column: 58
          }
        },
        "147": {
          start: {
            line: 555,
            column: 16
          },
          end: {
            line: 555,
            column: 67
          }
        },
        "148": {
          start: {
            line: 558,
            column: 38
          },
          end: {
            line: 562,
            column: 18
          }
        },
        "149": {
          start: {
            line: 563,
            column: 16
          },
          end: {
            line: 563,
            column: 42
          }
        },
        "150": {
          start: {
            line: 564,
            column: 16
          },
          end: {
            line: 564,
            column: 69
          }
        },
        "151": {
          start: {
            line: 569,
            column: 31
          },
          end: {
            line: 569,
            column: 85
          }
        },
        "152": {
          start: {
            line: 570,
            column: 12
          },
          end: {
            line: 570,
            column: 54
          }
        },
        "153": {
          start: {
            line: 571,
            column: 12
          },
          end: {
            line: 571,
            column: 55
          }
        },
        "154": {
          start: {
            line: 575,
            column: 12
          },
          end: {
            line: 575,
            column: 78
          }
        },
        "155": {
          start: {
            line: 576,
            column: 12
          },
          end: {
            line: 576,
            column: 76
          }
        },
        "156": {
          start: {
            line: 578,
            column: 28
          },
          end: {
            line: 578,
            column: 79
          }
        },
        "157": {
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 579,
            column: 36
          }
        },
        "158": {
          start: {
            line: 583,
            column: 29
          },
          end: {
            line: 583,
            column: 82
          }
        },
        "159": {
          start: {
            line: 584,
            column: 16
          },
          end: {
            line: 584,
            column: 54
          }
        },
        "160": {
          start: {
            line: 585,
            column: 16
          },
          end: {
            line: 585,
            column: 53
          }
        },
        "161": {
          start: {
            line: 586,
            column: 16
          },
          end: {
            line: 586,
            column: 35
          }
        },
        "162": {
          start: {
            line: 587,
            column: 16
          },
          end: {
            line: 587,
            column: 39
          }
        },
        "163": {
          start: {
            line: 588,
            column: 16
          },
          end: {
            line: 588,
            column: 39
          }
        },
        "164": {
          start: {
            line: 589,
            column: 16
          },
          end: {
            line: 589,
            column: 38
          }
        },
        "165": {
          start: {
            line: 592,
            column: 29
          },
          end: {
            line: 592,
            column: 72
          }
        },
        "166": {
          start: {
            line: 593,
            column: 16
          },
          end: {
            line: 593,
            column: 48
          }
        },
        "167": {
          start: {
            line: 595,
            column: 16
          },
          end: {
            line: 601,
            column: 19
          }
        },
        "168": {
          start: {
            line: 597,
            column: 20
          },
          end: {
            line: 599,
            column: 21
          }
        },
        "169": {
          start: {
            line: 598,
            column: 24
          },
          end: {
            line: 598,
            column: 56
          }
        },
        "170": {
          start: {
            line: 600,
            column: 20
          },
          end: {
            line: 600,
            column: 41
          }
        },
        "171": {
          start: {
            line: 603,
            column: 16
          },
          end: {
            line: 603,
            column: 30
          }
        },
        "172": {
          start: {
            line: 606,
            column: 12
          },
          end: {
            line: 606,
            column: 58
          }
        },
        "173": {
          start: {
            line: 607,
            column: 12
          },
          end: {
            line: 607,
            column: 50
          }
        },
        "174": {
          start: {
            line: 608,
            column: 12
          },
          end: {
            line: 608,
            column: 52
          }
        },
        "175": {
          start: {
            line: 609,
            column: 12
          },
          end: {
            line: 609,
            column: 63
          }
        },
        "176": {
          start: {
            line: 611,
            column: 12
          },
          end: {
            line: 611,
            column: 76
          }
        },
        "177": {
          start: {
            line: 612,
            column: 12
          },
          end: {
            line: 612,
            column: 76
          }
        },
        "178": {
          start: {
            line: 613,
            column: 12
          },
          end: {
            line: 613,
            column: 76
          }
        },
        "179": {
          start: {
            line: 620,
            column: 12
          },
          end: {
            line: 620,
            column: 63
          }
        },
        "180": {
          start: {
            line: 621,
            column: 12
          },
          end: {
            line: 621,
            column: 55
          }
        },
        "181": {
          start: {
            line: 623,
            column: 12
          },
          end: {
            line: 623,
            column: 60
          }
        },
        "182": {
          start: {
            line: 624,
            column: 12
          },
          end: {
            line: 624,
            column: 47
          }
        },
        "183": {
          start: {
            line: 777,
            column: 4
          },
          end: {
            line: 918,
            column: 7
          }
        },
        "184": {
          start: {
            line: 778,
            column: 29
          },
          end: {
            line: 778,
            column: 50
          }
        },
        "185": {
          start: {
            line: 779,
            column: 27
          },
          end: {
            line: 779,
            column: 46
          }
        },
        "186": {
          start: {
            line: 781,
            column: 20
          },
          end: {
            line: 781,
            column: 73
          }
        },
        "187": {
          start: {
            line: 782,
            column: 4
          },
          end: {
            line: 785,
            column: 5
          }
        },
        "188": {
          start: {
            line: 784,
            column: 8
          },
          end: {
            line: 784,
            column: 15
          }
        },
        "189": {
          start: {
            line: 786,
            column: 23
          },
          end: {
            line: 786,
            column: 53
          }
        },
        "190": {
          start: {
            line: 787,
            column: 26
          },
          end: {
            line: 787,
            column: 28
          }
        },
        "191": {
          start: {
            line: 790,
            column: 8
          },
          end: {
            line: 840,
            column: 9
          }
        },
        "192": {
          start: {
            line: 791,
            column: 31
          },
          end: {
            line: 791,
            column: 204
          }
        },
        "193": {
          start: {
            line: 792,
            column: 12
          },
          end: {
            line: 792,
            column: 36
          }
        },
        "194": {
          start: {
            line: 794,
            column: 12
          },
          end: {
            line: 839,
            column: 13
          }
        },
        "195": {
          start: {
            line: 795,
            column: 33
          },
          end: {
            line: 795,
            column: 56
          }
        },
        "196": {
          start: {
            line: 796,
            column: 16
          },
          end: {
            line: 799,
            column: 17
          }
        },
        "197": {
          start: {
            line: 797,
            column: 20
          },
          end: {
            line: 797,
            column: 115
          }
        },
        "198": {
          start: {
            line: 798,
            column: 20
          },
          end: {
            line: 798,
            column: 29
          }
        },
        "199": {
          start: {
            line: 801,
            column: 29
          },
          end: {
            line: 801,
            column: 50
          }
        },
        "200": {
          start: {
            line: 802,
            column: 31
          },
          end: {
            line: 802,
            column: 46
          }
        },
        "201": {
          start: {
            line: 803,
            column: 31
          },
          end: {
            line: 803,
            column: 71
          }
        },
        "202": {
          start: {
            line: 804,
            column: 29
          },
          end: {
            line: 804,
            column: 63
          }
        },
        "203": {
          start: {
            line: 806,
            column: 16
          },
          end: {
            line: 836,
            column: 17
          }
        },
        "204": {
          start: {
            line: 807,
            column: 32
          },
          end: {
            line: 807,
            column: 39
          }
        },
        "205": {
          start: {
            line: 808,
            column: 36
          },
          end: {
            line: 808,
            column: 74
          }
        },
        "206": {
          start: {
            line: 809,
            column: 33
          },
          end: {
            line: 809,
            column: 68
          }
        },
        "207": {
          start: {
            line: 811,
            column: 20
          },
          end: {
            line: 835,
            column: 21
          }
        },
        "208": {
          start: {
            line: 812,
            column: 41
          },
          end: {
            line: 812,
            column: 68
          }
        },
        "209": {
          start: {
            line: 813,
            column: 42
          },
          end: {
            line: 813,
            column: 66
          }
        },
        "210": {
          start: {
            line: 815,
            column: 24
          },
          end: {
            line: 834,
            column: 25
          }
        },
        "211": {
          start: {
            line: 816,
            column: 42
          },
          end: {
            line: 816,
            column: 74
          }
        },
        "212": {
          start: {
            line: 817,
            column: 41
          },
          end: {
            line: 817,
            column: 59
          }
        },
        "213": {
          start: {
            line: 818,
            column: 50
          },
          end: {
            line: 821,
            column: 30
          }
        },
        "214": {
          start: {
            line: 822,
            column: 44
          },
          end: {
            line: 822,
            column: 63
          }
        },
        "215": {
          start: {
            line: 824,
            column: 50
          },
          end: {
            line: 824,
            column: 114
          }
        },
        "216": {
          start: {
            line: 824,
            column: 76
          },
          end: {
            line: 824,
            column: 113
          }
        },
        "217": {
          start: {
            line: 826,
            column: 28
          },
          end: {
            line: 833,
            column: 29
          }
        },
        "218": {
          start: {
            line: 827,
            column: 32
          },
          end: {
            line: 827,
            column: 73
          }
        },
        "219": {
          start: {
            line: 829,
            column: 32
          },
          end: {
            line: 832,
            column: 35
          }
        },
        "220": {
          start: {
            line: 838,
            column: 16
          },
          end: {
            line: 838,
            column: 84
          }
        },
        "221": {
          start: {
            line: 842,
            column: 8
          },
          end: {
            line: 842,
            column: 75
          }
        },
        "222": {
          start: {
            line: 846,
            column: 8
          },
          end: {
            line: 846,
            column: 45
          }
        },
        "223": {
          start: {
            line: 850,
            column: 28
          },
          end: {
            line: 850,
            column: 73
          }
        },
        "224": {
          start: {
            line: 851,
            column: 8
          },
          end: {
            line: 851,
            column: 40
          }
        },
        "225": {
          start: {
            line: 854,
            column: 8
          },
          end: {
            line: 854,
            column: 41
          }
        },
        "226": {
          start: {
            line: 855,
            column: 8
          },
          end: {
            line: 867,
            column: 15
          }
        },
        "227": {
          start: {
            line: 856,
            column: 16
          },
          end: {
            line: 856,
            column: 58
          }
        },
        "228": {
          start: {
            line: 857,
            column: 16
          },
          end: {
            line: 857,
            column: 67
          }
        },
        "229": {
          start: {
            line: 860,
            column: 38
          },
          end: {
            line: 864,
            column: 18
          }
        },
        "230": {
          start: {
            line: 865,
            column: 16
          },
          end: {
            line: 865,
            column: 42
          }
        },
        "231": {
          start: {
            line: 866,
            column: 16
          },
          end: {
            line: 866,
            column: 69
          }
        },
        "232": {
          start: {
            line: 870,
            column: 27
          },
          end: {
            line: 870,
            column: 81
          }
        },
        "233": {
          start: {
            line: 871,
            column: 8
          },
          end: {
            line: 871,
            column: 50
          }
        },
        "234": {
          start: {
            line: 872,
            column: 8
          },
          end: {
            line: 872,
            column: 51
          }
        },
        "235": {
          start: {
            line: 873,
            column: 8
          },
          end: {
            line: 873,
            column: 74
          }
        },
        "236": {
          start: {
            line: 874,
            column: 8
          },
          end: {
            line: 874,
            column: 72
          }
        },
        "237": {
          start: {
            line: 876,
            column: 24
          },
          end: {
            line: 876,
            column: 75
          }
        },
        "238": {
          start: {
            line: 877,
            column: 8
          },
          end: {
            line: 877,
            column: 32
          }
        },
        "239": {
          start: {
            line: 881,
            column: 25
          },
          end: {
            line: 881,
            column: 78
          }
        },
        "240": {
          start: {
            line: 882,
            column: 12
          },
          end: {
            line: 882,
            column: 50
          }
        },
        "241": {
          start: {
            line: 883,
            column: 12
          },
          end: {
            line: 883,
            column: 49
          }
        },
        "242": {
          start: {
            line: 884,
            column: 12
          },
          end: {
            line: 884,
            column: 31
          }
        },
        "243": {
          start: {
            line: 885,
            column: 12
          },
          end: {
            line: 885,
            column: 35
          }
        },
        "244": {
          start: {
            line: 886,
            column: 12
          },
          end: {
            line: 886,
            column: 35
          }
        },
        "245": {
          start: {
            line: 887,
            column: 12
          },
          end: {
            line: 887,
            column: 34
          }
        },
        "246": {
          start: {
            line: 889,
            column: 25
          },
          end: {
            line: 889,
            column: 68
          }
        },
        "247": {
          start: {
            line: 890,
            column: 12
          },
          end: {
            line: 890,
            column: 44
          }
        },
        "248": {
          start: {
            line: 892,
            column: 12
          },
          end: {
            line: 897,
            column: 15
          }
        },
        "249": {
          start: {
            line: 893,
            column: 16
          },
          end: {
            line: 895,
            column: 17
          }
        },
        "250": {
          start: {
            line: 894,
            column: 20
          },
          end: {
            line: 894,
            column: 52
          }
        },
        "251": {
          start: {
            line: 896,
            column: 16
          },
          end: {
            line: 896,
            column: 37
          }
        },
        "252": {
          start: {
            line: 899,
            column: 12
          },
          end: {
            line: 899,
            column: 26
          }
        },
        "253": {
          start: {
            line: 902,
            column: 8
          },
          end: {
            line: 902,
            column: 54
          }
        },
        "254": {
          start: {
            line: 903,
            column: 8
          },
          end: {
            line: 903,
            column: 46
          }
        },
        "255": {
          start: {
            line: 904,
            column: 8
          },
          end: {
            line: 904,
            column: 48
          }
        },
        "256": {
          start: {
            line: 905,
            column: 8
          },
          end: {
            line: 905,
            column: 59
          }
        },
        "257": {
          start: {
            line: 908,
            column: 8
          },
          end: {
            line: 908,
            column: 68
          }
        },
        "258": {
          start: {
            line: 909,
            column: 8
          },
          end: {
            line: 909,
            column: 68
          }
        },
        "259": {
          start: {
            line: 910,
            column: 8
          },
          end: {
            line: 910,
            column: 68
          }
        },
        "260": {
          start: {
            line: 912,
            column: 8
          },
          end: {
            line: 912,
            column: 59
          }
        },
        "261": {
          start: {
            line: 913,
            column: 8
          },
          end: {
            line: 913,
            column: 51
          }
        },
        "262": {
          start: {
            line: 915,
            column: 8
          },
          end: {
            line: 915,
            column: 56
          }
        },
        "263": {
          start: {
            line: 916,
            column: 8
          },
          end: {
            line: 916,
            column: 43
          }
        },
        "264": {
          start: {
            line: 923,
            column: 26
          },
          end: {
            line: 923,
            column: 38
          }
        },
        "265": {
          start: {
            line: 924,
            column: 33
          },
          end: {
            line: 924,
            column: 51
          }
        },
        "266": {
          start: {
            line: 925,
            column: 8
          },
          end: {
            line: 925,
            column: 47
          }
        },
        "267": {
          start: {
            line: 927,
            column: 8
          },
          end: {
            line: 964,
            column: 9
          }
        },
        "268": {
          start: {
            line: 928,
            column: 30
          },
          end: {
            line: 932,
            column: 13
          }
        },
        "269": {
          start: {
            line: 934,
            column: 12
          },
          end: {
            line: 963,
            column: 13
          }
        },
        "270": {
          start: {
            line: 935,
            column: 16
          },
          end: {
            line: 962,
            column: 17
          }
        },
        "271": {
          start: {
            line: 936,
            column: 37
          },
          end: {
            line: 936,
            column: 62
          }
        },
        "272": {
          start: {
            line: 937,
            column: 20
          },
          end: {
            line: 937,
            column: 96
          }
        },
        "273": {
          start: {
            line: 937,
            column: 38
          },
          end: {
            line: 937,
            column: 96
          }
        },
        "274": {
          start: {
            line: 939,
            column: 33
          },
          end: {
            line: 939,
            column: 54
          }
        },
        "275": {
          start: {
            line: 940,
            column: 35
          },
          end: {
            line: 940,
            column: 50
          }
        },
        "276": {
          start: {
            line: 941,
            column: 32
          },
          end: {
            line: 941,
            column: 79
          }
        },
        "277": {
          start: {
            line: 943,
            column: 36
          },
          end: {
            line: 943,
            column: 68
          }
        },
        "278": {
          start: {
            line: 944,
            column: 20
          },
          end: {
            line: 958,
            column: 21
          }
        },
        "279": {
          start: {
            line: 946,
            column: 40
          },
          end: {
            line: 946,
            column: 81
          }
        },
        "280": {
          start: {
            line: 947,
            column: 42
          },
          end: {
            line: 947,
            column: 80
          }
        },
        "281": {
          start: {
            line: 950,
            column: 24
          },
          end: {
            line: 957,
            column: 25
          }
        },
        "282": {
          start: {
            line: 951,
            column: 48
          },
          end: {
            line: 951,
            column: 65
          }
        },
        "283": {
          start: {
            line: 952,
            column: 53
          },
          end: {
            line: 952,
            column: 188
          }
        },
        "284": {
          start: {
            line: 954,
            column: 28
          },
          end: {
            line: 956,
            column: 29
          }
        },
        "285": {
          start: {
            line: 955,
            column: 32
          },
          end: {
            line: 955,
            column: 84
          }
        },
        "286": {
          start: {
            line: 960,
            column: 20
          },
          end: {
            line: 960,
            column: 84
          }
        },
        "287": {
          start: {
            line: 961,
            column: 20
          },
          end: {
            line: 961,
            column: 44
          }
        },
        "288": {
          start: {
            line: 966,
            column: 8
          },
          end: {
            line: 995,
            column: 9
          }
        },
        "289": {
          start: {
            line: 967,
            column: 34
          },
          end: {
            line: 967,
            column: 76
          }
        },
        "290": {
          start: {
            line: 968,
            column: 12
          },
          end: {
            line: 970,
            column: 13
          }
        },
        "291": {
          start: {
            line: 969,
            column: 16
          },
          end: {
            line: 969,
            column: 39
          }
        },
        "292": {
          start: {
            line: 971,
            column: 33
          },
          end: {
            line: 989,
            column: 13
          }
        },
        "293": {
          start: {
            line: 984,
            column: 45
          },
          end: {
            line: 984,
            column: 65
          }
        },
        "294": {
          start: {
            line: 991,
            column: 12
          },
          end: {
            line: 991,
            column: 94
          }
        },
        "295": {
          start: {
            line: 992,
            column: 12
          },
          end: {
            line: 992,
            column: 35
          }
        },
        "296": {
          start: {
            line: 994,
            column: 12
          },
          end: {
            line: 994,
            column: 87
          }
        },
        "297": {
          start: {
            line: 1016,
            column: 4
          },
          end: {
            line: 1020,
            column: 7
          }
        },
        "298": {
          start: {
            line: 1018,
            column: 8
          },
          end: {
            line: 1018,
            column: 43
          }
        },
        "299": {
          start: {
            line: 1022,
            column: 4
          },
          end: {
            line: 1026,
            column: 7
          }
        },
        "300": {
          start: {
            line: 1023,
            column: 8
          },
          end: {
            line: 1023,
            column: 26
          }
        },
        "301": {
          start: {
            line: 1024,
            column: 8
          },
          end: {
            line: 1024,
            column: 51
          }
        },
        "302": {
          start: {
            line: 1028,
            column: 4
          },
          end: {
            line: 1032,
            column: 7
          }
        },
        "303": {
          start: {
            line: 1029,
            column: 8
          },
          end: {
            line: 1029,
            column: 26
          }
        },
        "304": {
          start: {
            line: 1030,
            column: 8
          },
          end: {
            line: 1030,
            column: 39
          }
        },
        "305": {
          start: {
            line: 1034,
            column: 4
          },
          end: {
            line: 1038,
            column: 7
          }
        },
        "306": {
          start: {
            line: 1035,
            column: 8
          },
          end: {
            line: 1035,
            column: 26
          }
        },
        "307": {
          start: {
            line: 1036,
            column: 8
          },
          end: {
            line: 1036,
            column: 46
          }
        },
        "308": {
          start: {
            line: 1043,
            column: 21
          },
          end: {
            line: 1043,
            column: 25
          }
        },
        "309": {
          start: {
            line: 1047,
            column: 8
          },
          end: {
            line: 1054,
            column: 9
          }
        },
        "310": {
          start: {
            line: 1048,
            column: 12
          },
          end: {
            line: 1052,
            column: 13
          }
        },
        "311": {
          start: {
            line: 1049,
            column: 16
          },
          end: {
            line: 1049,
            column: 37
          }
        },
        "312": {
          start: {
            line: 1050,
            column: 19
          },
          end: {
            line: 1052,
            column: 13
          }
        },
        "313": {
          start: {
            line: 1051,
            column: 16
          },
          end: {
            line: 1051,
            column: 37
          }
        },
        "314": {
          start: {
            line: 1053,
            column: 12
          },
          end: {
            line: 1053,
            column: 30
          }
        },
        "315": {
          start: {
            line: 1055,
            column: 8
          },
          end: {
            line: 1055,
            column: 27
          }
        },
        "316": {
          start: {
            line: 1158,
            column: 26
          },
          end: {
            line: 1158,
            column: 28
          }
        },
        "317": {
          start: {
            line: 1159,
            column: 23
          },
          end: {
            line: 1159,
            column: 47
          }
        },
        "318": {
          start: {
            line: 1162,
            column: 8
          },
          end: {
            line: 1190,
            column: 9
          }
        },
        "319": {
          start: {
            line: 1163,
            column: 12
          },
          end: {
            line: 1189,
            column: 13
          }
        },
        "320": {
          start: {
            line: 1164,
            column: 33
          },
          end: {
            line: 1164,
            column: 181
          }
        },
        "321": {
          start: {
            line: 1165,
            column: 16
          },
          end: {
            line: 1165,
            column: 69
          }
        },
        "322": {
          start: {
            line: 1166,
            column: 16
          },
          end: {
            line: 1169,
            column: 17
          }
        },
        "323": {
          start: {
            line: 1167,
            column: 20
          },
          end: {
            line: 1167,
            column: 95
          }
        },
        "324": {
          start: {
            line: 1168,
            column: 20
          },
          end: {
            line: 1168,
            column: 29
          }
        },
        "325": {
          start: {
            line: 1170,
            column: 29
          },
          end: {
            line: 1170,
            column: 50
          }
        },
        "326": {
          start: {
            line: 1173,
            column: 31
          },
          end: {
            line: 1173,
            column: 46
          }
        },
        "327": {
          start: {
            line: 1174,
            column: 31
          },
          end: {
            line: 1174,
            column: 71
          }
        },
        "328": {
          start: {
            line: 1177,
            column: 29
          },
          end: {
            line: 1177,
            column: 57
          }
        },
        "329": {
          start: {
            line: 1178,
            column: 16
          },
          end: {
            line: 1186,
            column: 17
          }
        },
        "330": {
          start: {
            line: 1179,
            column: 38
          },
          end: {
            line: 1179,
            column: 62
          }
        },
        "331": {
          start: {
            line: 1180,
            column: 20
          },
          end: {
            line: 1185,
            column: 21
          }
        },
        "332": {
          start: {
            line: 1181,
            column: 24
          },
          end: {
            line: 1184,
            column: 27
          }
        },
        "333": {
          start: {
            line: 1188,
            column: 16
          },
          end: {
            line: 1188,
            column: 74
          }
        },
        "334": {
          start: {
            line: 1191,
            column: 13
          },
          end: {
            line: 1260,
            column: 11
          }
        },
        "335": {
          start: {
            line: 1194,
            column: 12
          },
          end: {
            line: 1194,
            column: 49
          }
        },
        "336": {
          start: {
            line: 1197,
            column: 12
          },
          end: {
            line: 1197,
            column: 73
          }
        },
        "337": {
          start: {
            line: 1200,
            column: 12
          },
          end: {
            line: 1200,
            column: 42
          }
        },
        "338": {
          start: {
            line: 1212,
            column: 28
          },
          end: {
            line: 1212,
            column: 77
          }
        },
        "339": {
          start: {
            line: 1213,
            column: 12
          },
          end: {
            line: 1213,
            column: 49
          }
        },
        "340": {
          start: {
            line: 1214,
            column: 12
          },
          end: {
            line: 1214,
            column: 55
          }
        },
        "341": {
          start: {
            line: 1217,
            column: 12
          },
          end: {
            line: 1217,
            column: 76
          }
        },
        "342": {
          start: {
            line: 1218,
            column: 12
          },
          end: {
            line: 1218,
            column: 56
          }
        },
        "343": {
          start: {
            line: 1221,
            column: 12
          },
          end: {
            line: 1224,
            column: 14
          }
        },
        "344": {
          start: {
            line: 1226,
            column: 12
          },
          end: {
            line: 1226,
            column: 53
          }
        },
        "345": {
          start: {
            line: 1227,
            column: 12
          },
          end: {
            line: 1227,
            column: 42
          }
        },
        "346": {
          start: {
            line: 1228,
            column: 12
          },
          end: {
            line: 1228,
            column: 84
          }
        },
        "347": {
          start: {
            line: 1229,
            column: 12
          },
          end: {
            line: 1229,
            column: 68
          }
        },
        "348": {
          start: {
            line: 1230,
            column: 12
          },
          end: {
            line: 1230,
            column: 70
          }
        },
        "349": {
          start: {
            line: 1233,
            column: 12
          },
          end: {
            line: 1233,
            column: 57
          }
        },
        "350": {
          start: {
            line: 1234,
            column: 12
          },
          end: {
            line: 1234,
            column: 59
          }
        },
        "351": {
          start: {
            line: 1235,
            column: 12
          },
          end: {
            line: 1235,
            column: 62
          }
        },
        "352": {
          start: {
            line: 1236,
            column: 12
          },
          end: {
            line: 1236,
            column: 76
          }
        },
        "353": {
          start: {
            line: 1237,
            column: 12
          },
          end: {
            line: 1237,
            column: 55
          }
        },
        "354": {
          start: {
            line: 1240,
            column: 12
          },
          end: {
            line: 1240,
            column: 55
          }
        },
        "355": {
          start: {
            line: 1241,
            column: 12
          },
          end: {
            line: 1241,
            column: 47
          }
        },
        "356": {
          start: {
            line: 1242,
            column: 12
          },
          end: {
            line: 1242,
            column: 52
          }
        },
        "357": {
          start: {
            line: 1243,
            column: 12
          },
          end: {
            line: 1243,
            column: 54
          }
        },
        "358": {
          start: {
            line: 1244,
            column: 12
          },
          end: {
            line: 1244,
            column: 74
          }
        },
        "359": {
          start: {
            line: 1247,
            column: 12
          },
          end: {
            line: 1247,
            column: 77
          }
        },
        "360": {
          start: {
            line: 1248,
            column: 12
          },
          end: {
            line: 1248,
            column: 78
          }
        },
        "361": {
          start: {
            line: 1249,
            column: 12
          },
          end: {
            line: 1249,
            column: 61
          }
        },
        "362": {
          start: {
            line: 1250,
            column: 12
          },
          end: {
            line: 1250,
            column: 66
          }
        },
        "363": {
          start: {
            line: 1253,
            column: 12
          },
          end: {
            line: 1253,
            column: 74
          }
        },
        "364": {
          start: {
            line: 1254,
            column: 12
          },
          end: {
            line: 1254,
            column: 73
          }
        },
        "365": {
          start: {
            line: 1256,
            column: 12
          },
          end: {
            line: 1256,
            column: 69
          }
        },
        "366": {
          start: {
            line: 1258,
            column: 12
          },
          end: {
            line: 1258,
            column: 44
          }
        },
        "367": {
          start: {
            line: 1264,
            column: 0
          },
          end: {
            line: 1264,
            column: 29
          }
        },
        "368": {
          start: {
            line: 1267,
            column: 8
          },
          end: {
            line: 1415,
            column: 11
          }
        },
        "369": {
          start: {
            line: 1269,
            column: 26
          },
          end: {
            line: 1269,
            column: 36
          }
        },
        "370": {
          start: {
            line: 1270,
            column: 33
          },
          end: {
            line: 1270,
            column: 49
          }
        },
        "371": {
          start: {
            line: 1271,
            column: 30
          },
          end: {
            line: 1271,
            column: 80
          }
        },
        "372": {
          start: {
            line: 1272,
            column: 28
          },
          end: {
            line: 1272,
            column: 74
          }
        },
        "373": {
          start: {
            line: 1274,
            column: 29
          },
          end: {
            line: 1274,
            column: 158
          }
        },
        "374": {
          start: {
            line: 1275,
            column: 27
          },
          end: {
            line: 1275,
            column: 150
          }
        },
        "375": {
          start: {
            line: 1277,
            column: 27
          },
          end: {
            line: 1277,
            column: 51
          }
        },
        "376": {
          start: {
            line: 1278,
            column: 30
          },
          end: {
            line: 1278,
            column: 32
          }
        },
        "377": {
          start: {
            line: 1281,
            column: 12
          },
          end: {
            line: 1331,
            column: 13
          }
        },
        "378": {
          start: {
            line: 1282,
            column: 35
          },
          end: {
            line: 1282,
            column: 190
          }
        },
        "379": {
          start: {
            line: 1283,
            column: 16
          },
          end: {
            line: 1283,
            column: 40
          }
        },
        "380": {
          start: {
            line: 1284,
            column: 16
          },
          end: {
            line: 1330,
            column: 17
          }
        },
        "381": {
          start: {
            line: 1285,
            column: 37
          },
          end: {
            line: 1285,
            column: 60
          }
        },
        "382": {
          start: {
            line: 1286,
            column: 20
          },
          end: {
            line: 1286,
            column: 42
          }
        },
        "383": {
          start: {
            line: 1287,
            column: 20
          },
          end: {
            line: 1290,
            column: 21
          }
        },
        "384": {
          start: {
            line: 1288,
            column: 24
          },
          end: {
            line: 1288,
            column: 119
          }
        },
        "385": {
          start: {
            line: 1289,
            column: 24
          },
          end: {
            line: 1289,
            column: 33
          }
        },
        "386": {
          start: {
            line: 1292,
            column: 33
          },
          end: {
            line: 1292,
            column: 54
          }
        },
        "387": {
          start: {
            line: 1293,
            column: 35
          },
          end: {
            line: 1293,
            column: 50
          }
        },
        "388": {
          start: {
            line: 1294,
            column: 35
          },
          end: {
            line: 1294,
            column: 75
          }
        },
        "389": {
          start: {
            line: 1295,
            column: 33
          },
          end: {
            line: 1295,
            column: 67
          }
        },
        "390": {
          start: {
            line: 1297,
            column: 20
          },
          end: {
            line: 1327,
            column: 21
          }
        },
        "391": {
          start: {
            line: 1298,
            column: 36
          },
          end: {
            line: 1298,
            column: 43
          }
        },
        "392": {
          start: {
            line: 1299,
            column: 40
          },
          end: {
            line: 1299,
            column: 78
          }
        },
        "393": {
          start: {
            line: 1300,
            column: 37
          },
          end: {
            line: 1300,
            column: 72
          }
        },
        "394": {
          start: {
            line: 1302,
            column: 24
          },
          end: {
            line: 1326,
            column: 25
          }
        },
        "395": {
          start: {
            line: 1303,
            column: 45
          },
          end: {
            line: 1303,
            column: 72
          }
        },
        "396": {
          start: {
            line: 1304,
            column: 46
          },
          end: {
            line: 1304,
            column: 70
          }
        },
        "397": {
          start: {
            line: 1306,
            column: 28
          },
          end: {
            line: 1325,
            column: 29
          }
        },
        "398": {
          start: {
            line: 1307,
            column: 46
          },
          end: {
            line: 1307,
            column: 78
          }
        },
        "399": {
          start: {
            line: 1308,
            column: 45
          },
          end: {
            line: 1308,
            column: 63
          }
        },
        "400": {
          start: {
            line: 1309,
            column: 54
          },
          end: {
            line: 1312,
            column: 34
          }
        },
        "401": {
          start: {
            line: 1313,
            column: 48
          },
          end: {
            line: 1313,
            column: 67
          }
        },
        "402": {
          start: {
            line: 1315,
            column: 54
          },
          end: {
            line: 1315,
            column: 118
          }
        },
        "403": {
          start: {
            line: 1315,
            column: 80
          },
          end: {
            line: 1315,
            column: 117
          }
        },
        "404": {
          start: {
            line: 1317,
            column: 32
          },
          end: {
            line: 1324,
            column: 33
          }
        },
        "405": {
          start: {
            line: 1318,
            column: 36
          },
          end: {
            line: 1318,
            column: 77
          }
        },
        "406": {
          start: {
            line: 1320,
            column: 36
          },
          end: {
            line: 1323,
            column: 39
          }
        },
        "407": {
          start: {
            line: 1329,
            column: 20
          },
          end: {
            line: 1329,
            column: 88
          }
        },
        "408": {
          start: {
            line: 1334,
            column: 12
          },
          end: {
            line: 1334,
            column: 49
          }
        },
        "409": {
          start: {
            line: 1338,
            column: 12
          },
          end: {
            line: 1338,
            column: 72
          }
        },
        "410": {
          start: {
            line: 1339,
            column: 12
          },
          end: {
            line: 1339,
            column: 41
          }
        },
        "411": {
          start: {
            line: 1342,
            column: 12
          },
          end: {
            line: 1342,
            column: 42
          }
        },
        "412": {
          start: {
            line: 1343,
            column: 12
          },
          end: {
            line: 1355,
            column: 15
          }
        },
        "413": {
          start: {
            line: 1344,
            column: 16
          },
          end: {
            line: 1344,
            column: 58
          }
        },
        "414": {
          start: {
            line: 1345,
            column: 16
          },
          end: {
            line: 1345,
            column: 67
          }
        },
        "415": {
          start: {
            line: 1348,
            column: 38
          },
          end: {
            line: 1352,
            column: 18
          }
        },
        "416": {
          start: {
            line: 1353,
            column: 16
          },
          end: {
            line: 1353,
            column: 42
          }
        },
        "417": {
          start: {
            line: 1354,
            column: 16
          },
          end: {
            line: 1354,
            column: 69
          }
        },
        "418": {
          start: {
            line: 1359,
            column: 31
          },
          end: {
            line: 1359,
            column: 82
          }
        },
        "419": {
          start: {
            line: 1360,
            column: 12
          },
          end: {
            line: 1360,
            column: 54
          }
        },
        "420": {
          start: {
            line: 1361,
            column: 12
          },
          end: {
            line: 1361,
            column: 55
          }
        },
        "421": {
          start: {
            line: 1365,
            column: 12
          },
          end: {
            line: 1365,
            column: 78
          }
        },
        "422": {
          start: {
            line: 1366,
            column: 12
          },
          end: {
            line: 1366,
            column: 76
          }
        },
        "423": {
          start: {
            line: 1368,
            column: 28
          },
          end: {
            line: 1368,
            column: 76
          }
        },
        "424": {
          start: {
            line: 1369,
            column: 12
          },
          end: {
            line: 1369,
            column: 36
          }
        },
        "425": {
          start: {
            line: 1373,
            column: 29
          },
          end: {
            line: 1373,
            column: 79
          }
        },
        "426": {
          start: {
            line: 1374,
            column: 16
          },
          end: {
            line: 1374,
            column: 54
          }
        },
        "427": {
          start: {
            line: 1375,
            column: 16
          },
          end: {
            line: 1375,
            column: 53
          }
        },
        "428": {
          start: {
            line: 1376,
            column: 16
          },
          end: {
            line: 1376,
            column: 35
          }
        },
        "429": {
          start: {
            line: 1377,
            column: 16
          },
          end: {
            line: 1377,
            column: 39
          }
        },
        "430": {
          start: {
            line: 1378,
            column: 16
          },
          end: {
            line: 1378,
            column: 39
          }
        },
        "431": {
          start: {
            line: 1379,
            column: 16
          },
          end: {
            line: 1379,
            column: 38
          }
        },
        "432": {
          start: {
            line: 1382,
            column: 29
          },
          end: {
            line: 1382,
            column: 72
          }
        },
        "433": {
          start: {
            line: 1383,
            column: 16
          },
          end: {
            line: 1383,
            column: 56
          }
        },
        "434": {
          start: {
            line: 1385,
            column: 16
          },
          end: {
            line: 1391,
            column: 19
          }
        },
        "435": {
          start: {
            line: 1387,
            column: 20
          },
          end: {
            line: 1389,
            column: 21
          }
        },
        "436": {
          start: {
            line: 1388,
            column: 24
          },
          end: {
            line: 1388,
            column: 56
          }
        },
        "437": {
          start: {
            line: 1390,
            column: 20
          },
          end: {
            line: 1390,
            column: 41
          }
        },
        "438": {
          start: {
            line: 1393,
            column: 16
          },
          end: {
            line: 1393,
            column: 30
          }
        },
        "439": {
          start: {
            line: 1396,
            column: 12
          },
          end: {
            line: 1396,
            column: 55
          }
        },
        "440": {
          start: {
            line: 1397,
            column: 12
          },
          end: {
            line: 1397,
            column: 47
          }
        },
        "441": {
          start: {
            line: 1398,
            column: 12
          },
          end: {
            line: 1398,
            column: 49
          }
        },
        "442": {
          start: {
            line: 1399,
            column: 12
          },
          end: {
            line: 1399,
            column: 60
          }
        },
        "443": {
          start: {
            line: 1401,
            column: 12
          },
          end: {
            line: 1401,
            column: 75
          }
        },
        "444": {
          start: {
            line: 1402,
            column: 12
          },
          end: {
            line: 1402,
            column: 75
          }
        },
        "445": {
          start: {
            line: 1409,
            column: 12
          },
          end: {
            line: 1409,
            column: 60
          }
        },
        "446": {
          start: {
            line: 1410,
            column: 12
          },
          end: {
            line: 1410,
            column: 52
          }
        },
        "447": {
          start: {
            line: 1412,
            column: 12
          },
          end: {
            line: 1412,
            column: 57
          }
        },
        "448": {
          start: {
            line: 1413,
            column: 12
          },
          end: {
            line: 1413,
            column: 44
          }
        },
        "449": {
          start: {
            line: 1544,
            column: 6
          },
          end: {
            line: 1693,
            column: 11
          }
        },
        "450": {
          start: {
            line: 1546,
            column: 33
          },
          end: {
            line: 1546,
            column: 59
          }
        },
        "451": {
          start: {
            line: 1547,
            column: 31
          },
          end: {
            line: 1547,
            column: 55
          }
        },
        "452": {
          start: {
            line: 1548,
            column: 29
          },
          end: {
            line: 1548,
            column: 82
          }
        },
        "453": {
          start: {
            line: 1549,
            column: 12
          },
          end: {
            line: 1552,
            column: 13
          }
        },
        "454": {
          start: {
            line: 1551,
            column: 16
          },
          end: {
            line: 1551,
            column: 23
          }
        },
        "455": {
          start: {
            line: 1553,
            column: 27
          },
          end: {
            line: 1553,
            column: 51
          }
        },
        "456": {
          start: {
            line: 1554,
            column: 30
          },
          end: {
            line: 1554,
            column: 32
          }
        },
        "457": {
          start: {
            line: 1558,
            column: 12
          },
          end: {
            line: 1610,
            column: 13
          }
        },
        "458": {
          start: {
            line: 1559,
            column: 35
          },
          end: {
            line: 1559,
            column: 202
          }
        },
        "459": {
          start: {
            line: 1560,
            column: 16
          },
          end: {
            line: 1560,
            column: 40
          }
        },
        "460": {
          start: {
            line: 1561,
            column: 16
          },
          end: {
            line: 1609,
            column: 17
          }
        },
        "461": {
          start: {
            line: 1562,
            column: 37
          },
          end: {
            line: 1562,
            column: 60
          }
        },
        "462": {
          start: {
            line: 1563,
            column: 20
          },
          end: {
            line: 1563,
            column: 42
          }
        },
        "463": {
          start: {
            line: 1564,
            column: 20
          },
          end: {
            line: 1567,
            column: 21
          }
        },
        "464": {
          start: {
            line: 1565,
            column: 24
          },
          end: {
            line: 1565,
            column: 119
          }
        },
        "465": {
          start: {
            line: 1566,
            column: 24
          },
          end: {
            line: 1566,
            column: 33
          }
        },
        "466": {
          start: {
            line: 1569,
            column: 29
          },
          end: {
            line: 1569,
            column: 50
          }
        },
        "467": {
          start: {
            line: 1572,
            column: 35
          },
          end: {
            line: 1572,
            column: 50
          }
        },
        "468": {
          start: {
            line: 1573,
            column: 35
          },
          end: {
            line: 1573,
            column: 75
          }
        },
        "469": {
          start: {
            line: 1574,
            column: 33
          },
          end: {
            line: 1574,
            column: 67
          }
        },
        "470": {
          start: {
            line: 1576,
            column: 20
          },
          end: {
            line: 1606,
            column: 21
          }
        },
        "471": {
          start: {
            line: 1577,
            column: 36
          },
          end: {
            line: 1577,
            column: 43
          }
        },
        "472": {
          start: {
            line: 1578,
            column: 40
          },
          end: {
            line: 1578,
            column: 78
          }
        },
        "473": {
          start: {
            line: 1579,
            column: 37
          },
          end: {
            line: 1579,
            column: 72
          }
        },
        "474": {
          start: {
            line: 1581,
            column: 24
          },
          end: {
            line: 1605,
            column: 25
          }
        },
        "475": {
          start: {
            line: 1582,
            column: 45
          },
          end: {
            line: 1582,
            column: 72
          }
        },
        "476": {
          start: {
            line: 1583,
            column: 46
          },
          end: {
            line: 1583,
            column: 70
          }
        },
        "477": {
          start: {
            line: 1585,
            column: 28
          },
          end: {
            line: 1604,
            column: 29
          }
        },
        "478": {
          start: {
            line: 1586,
            column: 46
          },
          end: {
            line: 1586,
            column: 78
          }
        },
        "479": {
          start: {
            line: 1587,
            column: 45
          },
          end: {
            line: 1587,
            column: 63
          }
        },
        "480": {
          start: {
            line: 1588,
            column: 54
          },
          end: {
            line: 1591,
            column: 34
          }
        },
        "481": {
          start: {
            line: 1592,
            column: 48
          },
          end: {
            line: 1592,
            column: 67
          }
        },
        "482": {
          start: {
            line: 1594,
            column: 54
          },
          end: {
            line: 1594,
            column: 118
          }
        },
        "483": {
          start: {
            line: 1594,
            column: 80
          },
          end: {
            line: 1594,
            column: 117
          }
        },
        "484": {
          start: {
            line: 1596,
            column: 32
          },
          end: {
            line: 1603,
            column: 33
          }
        },
        "485": {
          start: {
            line: 1597,
            column: 36
          },
          end: {
            line: 1597,
            column: 77
          }
        },
        "486": {
          start: {
            line: 1599,
            column: 36
          },
          end: {
            line: 1602,
            column: 39
          }
        },
        "487": {
          start: {
            line: 1608,
            column: 20
          },
          end: {
            line: 1608,
            column: 88
          }
        },
        "488": {
          start: {
            line: 1613,
            column: 12
          },
          end: {
            line: 1613,
            column: 49
          }
        },
        "489": {
          start: {
            line: 1617,
            column: 32
          },
          end: {
            line: 1617,
            column: 78
          }
        },
        "490": {
          start: {
            line: 1618,
            column: 12
          },
          end: {
            line: 1618,
            column: 44
          }
        },
        "491": {
          start: {
            line: 1621,
            column: 12
          },
          end: {
            line: 1621,
            column: 45
          }
        },
        "492": {
          start: {
            line: 1622,
            column: 12
          },
          end: {
            line: 1634,
            column: 15
          }
        },
        "493": {
          start: {
            line: 1623,
            column: 16
          },
          end: {
            line: 1623,
            column: 58
          }
        },
        "494": {
          start: {
            line: 1624,
            column: 16
          },
          end: {
            line: 1624,
            column: 67
          }
        },
        "495": {
          start: {
            line: 1627,
            column: 38
          },
          end: {
            line: 1631,
            column: 18
          }
        },
        "496": {
          start: {
            line: 1632,
            column: 16
          },
          end: {
            line: 1632,
            column: 42
          }
        },
        "497": {
          start: {
            line: 1633,
            column: 16
          },
          end: {
            line: 1633,
            column: 69
          }
        },
        "498": {
          start: {
            line: 1638,
            column: 31
          },
          end: {
            line: 1638,
            column: 85
          }
        },
        "499": {
          start: {
            line: 1639,
            column: 12
          },
          end: {
            line: 1639,
            column: 54
          }
        },
        "500": {
          start: {
            line: 1640,
            column: 12
          },
          end: {
            line: 1640,
            column: 55
          }
        },
        "501": {
          start: {
            line: 1644,
            column: 12
          },
          end: {
            line: 1644,
            column: 78
          }
        },
        "502": {
          start: {
            line: 1645,
            column: 12
          },
          end: {
            line: 1645,
            column: 76
          }
        },
        "503": {
          start: {
            line: 1647,
            column: 28
          },
          end: {
            line: 1647,
            column: 79
          }
        },
        "504": {
          start: {
            line: 1648,
            column: 12
          },
          end: {
            line: 1648,
            column: 36
          }
        },
        "505": {
          start: {
            line: 1652,
            column: 29
          },
          end: {
            line: 1652,
            column: 82
          }
        },
        "506": {
          start: {
            line: 1653,
            column: 16
          },
          end: {
            line: 1653,
            column: 54
          }
        },
        "507": {
          start: {
            line: 1654,
            column: 16
          },
          end: {
            line: 1654,
            column: 53
          }
        },
        "508": {
          start: {
            line: 1655,
            column: 16
          },
          end: {
            line: 1655,
            column: 35
          }
        },
        "509": {
          start: {
            line: 1656,
            column: 16
          },
          end: {
            line: 1656,
            column: 39
          }
        },
        "510": {
          start: {
            line: 1657,
            column: 16
          },
          end: {
            line: 1657,
            column: 39
          }
        },
        "511": {
          start: {
            line: 1658,
            column: 16
          },
          end: {
            line: 1658,
            column: 38
          }
        },
        "512": {
          start: {
            line: 1661,
            column: 29
          },
          end: {
            line: 1661,
            column: 72
          }
        },
        "513": {
          start: {
            line: 1662,
            column: 16
          },
          end: {
            line: 1662,
            column: 57
          }
        },
        "514": {
          start: {
            line: 1664,
            column: 16
          },
          end: {
            line: 1670,
            column: 19
          }
        },
        "515": {
          start: {
            line: 1666,
            column: 20
          },
          end: {
            line: 1668,
            column: 21
          }
        },
        "516": {
          start: {
            line: 1667,
            column: 24
          },
          end: {
            line: 1667,
            column: 56
          }
        },
        "517": {
          start: {
            line: 1669,
            column: 20
          },
          end: {
            line: 1669,
            column: 41
          }
        },
        "518": {
          start: {
            line: 1672,
            column: 16
          },
          end: {
            line: 1672,
            column: 30
          }
        },
        "519": {
          start: {
            line: 1674,
            column: 12
          },
          end: {
            line: 1674,
            column: 58
          }
        },
        "520": {
          start: {
            line: 1675,
            column: 12
          },
          end: {
            line: 1675,
            column: 50
          }
        },
        "521": {
          start: {
            line: 1676,
            column: 12
          },
          end: {
            line: 1676,
            column: 52
          }
        },
        "522": {
          start: {
            line: 1677,
            column: 12
          },
          end: {
            line: 1677,
            column: 63
          }
        },
        "523": {
          start: {
            line: 1679,
            column: 12
          },
          end: {
            line: 1679,
            column: 75
          }
        },
        "524": {
          start: {
            line: 1680,
            column: 12
          },
          end: {
            line: 1680,
            column: 75
          }
        },
        "525": {
          start: {
            line: 1687,
            column: 12
          },
          end: {
            line: 1687,
            column: 63
          }
        },
        "526": {
          start: {
            line: 1688,
            column: 12
          },
          end: {
            line: 1688,
            column: 55
          }
        },
        "527": {
          start: {
            line: 1690,
            column: 12
          },
          end: {
            line: 1690,
            column: 60
          }
        },
        "528": {
          start: {
            line: 1691,
            column: 12
          },
          end: {
            line: 1691,
            column: 47
          }
        },
        "529": {
          start: {
            line: 2135,
            column: 30
          },
          end: {
            line: 2135,
            column: 32
          }
        },
        "530": {
          start: {
            line: 2136,
            column: 30
          },
          end: {
            line: 2136,
            column: 32
          }
        },
        "531": {
          start: {
            line: 2137,
            column: 29
          },
          end: {
            line: 2137,
            column: 47
          }
        },
        "532": {
          start: {
            line: 2138,
            column: 8
          },
          end: {
            line: 2138,
            column: 34
          }
        },
        "533": {
          start: {
            line: 2139,
            column: 31
          },
          end: {
            line: 2139,
            column: 48
          }
        },
        "534": {
          start: {
            line: 2140,
            column: 8
          },
          end: {
            line: 2140,
            column: 36
          }
        },
        "535": {
          start: {
            line: 2141,
            column: 0
          },
          end: {
            line: 2185,
            column: 1
          }
        },
        "536": {
          start: {
            line: 2142,
            column: 22
          },
          end: {
            line: 2145,
            column: 5
          }
        },
        "537": {
          start: {
            line: 2147,
            column: 4
          },
          end: {
            line: 2184,
            column: 5
          }
        },
        "538": {
          start: {
            line: 2148,
            column: 8
          },
          end: {
            line: 2183,
            column: 9
          }
        },
        "539": {
          start: {
            line: 2149,
            column: 29
          },
          end: {
            line: 2149,
            column: 54
          }
        },
        "540": {
          start: {
            line: 2150,
            column: 12
          },
          end: {
            line: 2150,
            column: 88
          }
        },
        "541": {
          start: {
            line: 2150,
            column: 30
          },
          end: {
            line: 2150,
            column: 88
          }
        },
        "542": {
          start: {
            line: 2152,
            column: 25
          },
          end: {
            line: 2152,
            column: 46
          }
        },
        "543": {
          start: {
            line: 2153,
            column: 27
          },
          end: {
            line: 2153,
            column: 42
          }
        },
        "544": {
          start: {
            line: 2154,
            column: 24
          },
          end: {
            line: 2154,
            column: 71
          }
        },
        "545": {
          start: {
            line: 2156,
            column: 28
          },
          end: {
            line: 2156,
            column: 60
          }
        },
        "546": {
          start: {
            line: 2157,
            column: 12
          },
          end: {
            line: 2175,
            column: 13
          }
        },
        "547": {
          start: {
            line: 2159,
            column: 32
          },
          end: {
            line: 2159,
            column: 73
          }
        },
        "548": {
          start: {
            line: 2160,
            column: 34
          },
          end: {
            line: 2160,
            column: 72
          }
        },
        "549": {
          start: {
            line: 2163,
            column: 16
          },
          end: {
            line: 2174,
            column: 17
          }
        },
        "550": {
          start: {
            line: 2164,
            column: 40
          },
          end: {
            line: 2164,
            column: 57
          }
        },
        "551": {
          start: {
            line: 2165,
            column: 45
          },
          end: {
            line: 2165,
            column: 180
          }
        },
        "552": {
          start: {
            line: 2167,
            column: 20
          },
          end: {
            line: 2173,
            column: 21
          }
        },
        "553": {
          start: {
            line: 2168,
            column: 24
          },
          end: {
            line: 2172,
            column: 25
          }
        },
        "554": {
          start: {
            line: 2169,
            column: 28
          },
          end: {
            line: 2169,
            column: 81
          }
        },
        "555": {
          start: {
            line: 2170,
            column: 31
          },
          end: {
            line: 2172,
            column: 25
          }
        },
        "556": {
          start: {
            line: 2171,
            column: 28
          },
          end: {
            line: 2171,
            column: 81
          }
        },
        "557": {
          start: {
            line: 2177,
            column: 12
          },
          end: {
            line: 2177,
            column: 76
          }
        },
        "558": {
          start: {
            line: 2178,
            column: 12
          },
          end: {
            line: 2182,
            column: 13
          }
        },
        "559": {
          start: {
            line: 2179,
            column: 16
          },
          end: {
            line: 2179,
            column: 41
          }
        },
        "560": {
          start: {
            line: 2180,
            column: 19
          },
          end: {
            line: 2182,
            column: 13
          }
        },
        "561": {
          start: {
            line: 2181,
            column: 16
          },
          end: {
            line: 2181,
            column: 41
          }
        },
        "562": {
          start: {
            line: 2187,
            column: 0
          },
          end: {
            line: 2288,
            column: 3
          }
        },
        "563": {
          start: {
            line: 2189,
            column: 4
          },
          end: {
            line: 2189,
            column: 41
          }
        },
        "564": {
          start: {
            line: 2193,
            column: 21
          },
          end: {
            line: 2193,
            column: 67
          }
        },
        "565": {
          start: {
            line: 2195,
            column: 4
          },
          end: {
            line: 2195,
            column: 35
          }
        },
        "566": {
          start: {
            line: 2196,
            column: 4
          },
          end: {
            line: 2196,
            column: 31
          }
        },
        "567": {
          start: {
            line: 2199,
            column: 4
          },
          end: {
            line: 2199,
            column: 47
          }
        },
        "568": {
          start: {
            line: 2200,
            column: 4
          },
          end: {
            line: 2200,
            column: 39
          }
        },
        "569": {
          start: {
            line: 2201,
            column: 4
          },
          end: {
            line: 2201,
            column: 41
          }
        },
        "570": {
          start: {
            line: 2202,
            column: 4
          },
          end: {
            line: 2202,
            column: 52
          }
        },
        "571": {
          start: {
            line: 2203,
            column: 4
          },
          end: {
            line: 2203,
            column: 70
          }
        },
        "572": {
          start: {
            line: 2206,
            column: 16
          },
          end: {
            line: 2206,
            column: 67
          }
        },
        "573": {
          start: {
            line: 2207,
            column: 4
          },
          end: {
            line: 2207,
            column: 43
          }
        },
        "574": {
          start: {
            line: 2208,
            column: 4
          },
          end: {
            line: 2208,
            column: 43
          }
        },
        "575": {
          start: {
            line: 2209,
            column: 4
          },
          end: {
            line: 2209,
            column: 41
          }
        },
        "576": {
          start: {
            line: 2210,
            column: 4
          },
          end: {
            line: 2210,
            column: 46
          }
        },
        "577": {
          start: {
            line: 2211,
            column: 4
          },
          end: {
            line: 2211,
            column: 67
          }
        },
        "578": {
          start: {
            line: 2212,
            column: 4
          },
          end: {
            line: 2212,
            column: 40
          }
        },
        "579": {
          start: {
            line: 2213,
            column: 4
          },
          end: {
            line: 2213,
            column: 50
          }
        },
        "580": {
          start: {
            line: 2214,
            column: 4
          },
          end: {
            line: 2214,
            column: 62
          }
        },
        "581": {
          start: {
            line: 2215,
            column: 4
          },
          end: {
            line: 2215,
            column: 61
          }
        },
        "582": {
          start: {
            line: 2216,
            column: 4
          },
          end: {
            line: 2216,
            column: 44
          }
        },
        "583": {
          start: {
            line: 2217,
            column: 4
          },
          end: {
            line: 2217,
            column: 49
          }
        },
        "584": {
          start: {
            line: 2218,
            column: 4
          },
          end: {
            line: 2218,
            column: 42
          }
        },
        "585": {
          start: {
            line: 2221,
            column: 29
          },
          end: {
            line: 2221,
            column: 55
          }
        },
        "586": {
          start: {
            line: 2222,
            column: 25
          },
          end: {
            line: 2222,
            column: 51
          }
        },
        "587": {
          start: {
            line: 2223,
            column: 21
          },
          end: {
            line: 2223,
            column: 65
          }
        },
        "588": {
          start: {
            line: 2224,
            column: 26
          },
          end: {
            line: 2224,
            column: 49
          }
        },
        "589": {
          start: {
            line: 2225,
            column: 16
          },
          end: {
            line: 2225,
            column: 64
          }
        },
        "590": {
          start: {
            line: 2226,
            column: 4
          },
          end: {
            line: 2226,
            column: 18
          }
        },
        "591": {
          start: {
            line: 2227,
            column: 4
          },
          end: {
            line: 2227,
            column: 30
          }
        },
        "592": {
          start: {
            line: 2228,
            column: 4
          },
          end: {
            line: 2228,
            column: 67
          }
        },
        "593": {
          start: {
            line: 2231,
            column: 21
          },
          end: {
            line: 2231,
            column: 73
          }
        },
        "594": {
          start: {
            line: 2232,
            column: 8
          },
          end: {
            line: 2232,
            column: 41
          }
        },
        "595": {
          start: {
            line: 2233,
            column: 8
          },
          end: {
            line: 2233,
            column: 49
          }
        },
        "596": {
          start: {
            line: 2234,
            column: 8
          },
          end: {
            line: 2234,
            column: 27
          }
        },
        "597": {
          start: {
            line: 2236,
            column: 8
          },
          end: {
            line: 2236,
            column: 60
          }
        },
        "598": {
          start: {
            line: 2237,
            column: 8
          },
          end: {
            line: 2237,
            column: 62
          }
        },
        "599": {
          start: {
            line: 2240,
            column: 8
          },
          end: {
            line: 2240,
            column: 48
          }
        },
        "600": {
          start: {
            line: 2241,
            column: 8
          },
          end: {
            line: 2241,
            column: 62
          }
        },
        "601": {
          start: {
            line: 2242,
            column: 8
          },
          end: {
            line: 2242,
            column: 61
          }
        },
        "602": {
          start: {
            line: 2243,
            column: 8
          },
          end: {
            line: 2243,
            column: 55
          }
        },
        "603": {
          start: {
            line: 2244,
            column: 8
          },
          end: {
            line: 2244,
            column: 49
          }
        },
        "604": {
          start: {
            line: 2245,
            column: 8
          },
          end: {
            line: 2245,
            column: 51
          }
        },
        "605": {
          start: {
            line: 2247,
            column: 8
          },
          end: {
            line: 2247,
            column: 30
          }
        },
        "606": {
          start: {
            line: 2249,
            column: 8
          },
          end: {
            line: 2249,
            column: 22
          }
        },
        "607": {
          start: {
            line: 2253,
            column: 4
          },
          end: {
            line: 2257,
            column: 8
          }
        },
        "608": {
          start: {
            line: 2253,
            column: 60
          },
          end: {
            line: 2257,
            column: 5
          }
        },
        "609": {
          start: {
            line: 2260,
            column: 4
          },
          end: {
            line: 2260,
            column: 58
          }
        },
        "610": {
          start: {
            line: 2261,
            column: 4
          },
          end: {
            line: 2261,
            column: 58
          }
        },
        "611": {
          start: {
            line: 2264,
            column: 4
          },
          end: {
            line: 2282,
            column: 7
          }
        },
        "612": {
          start: {
            line: 2265,
            column: 27
          },
          end: {
            line: 2265,
            column: 83
          }
        },
        "613": {
          start: {
            line: 2266,
            column: 8
          },
          end: {
            line: 2281,
            column: 11
          }
        },
        "614": {
          start: {
            line: 2267,
            column: 24
          },
          end: {
            line: 2267,
            column: 25
          }
        },
        "615": {
          start: {
            line: 2270,
            column: 12
          },
          end: {
            line: 2272,
            column: 15
          }
        },
        "616": {
          start: {
            line: 2271,
            column: 16
          },
          end: {
            line: 2271,
            column: 93
          }
        },
        "617": {
          start: {
            line: 2275,
            column: 26
          },
          end: {
            line: 2275,
            column: 59
          }
        },
        "618": {
          start: {
            line: 2276,
            column: 12
          },
          end: {
            line: 2276,
            column: 42
          }
        },
        "619": {
          start: {
            line: 2277,
            column: 12
          },
          end: {
            line: 2277,
            column: 50
          }
        },
        "620": {
          start: {
            line: 2278,
            column: 12
          },
          end: {
            line: 2278,
            column: 32
          }
        },
        "621": {
          start: {
            line: 2279,
            column: 12
          },
          end: {
            line: 2279,
            column: 27
          }
        },
        "622": {
          start: {
            line: 2280,
            column: 12
          },
          end: {
            line: 2280,
            column: 35
          }
        },
        "623": {
          start: {
            line: 2285,
            column: 17
          },
          end: {
            line: 2285,
            column: 41
          }
        },
        "624": {
          start: {
            line: 2286,
            column: 4
          },
          end: {
            line: 2286,
            column: 31
          }
        },
        "625": {
          start: {
            line: 2287,
            column: 4
          },
          end: {
            line: 2287,
            column: 36
          }
        },
        "626": {
          start: {
            line: 2296,
            column: 4
          },
          end: {
            line: 2299,
            column: 7
          }
        },
        "627": {
          start: {
            line: 2298,
            column: 8
          },
          end: {
            line: 2298,
            column: 48
          }
        },
        "628": {
          start: {
            line: 2301,
            column: 4
          },
          end: {
            line: 2304,
            column: 7
          }
        },
        "629": {
          start: {
            line: 2302,
            column: 8
          },
          end: {
            line: 2302,
            column: 31
          }
        },
        "630": {
          start: {
            line: 2303,
            column: 8
          },
          end: {
            line: 2303,
            column: 55
          }
        },
        "631": {
          start: {
            line: 2306,
            column: 4
          },
          end: {
            line: 2309,
            column: 7
          }
        },
        "632": {
          start: {
            line: 2307,
            column: 8
          },
          end: {
            line: 2307,
            column: 31
          }
        },
        "633": {
          start: {
            line: 2308,
            column: 8
          },
          end: {
            line: 2308,
            column: 43
          }
        },
        "634": {
          start: {
            line: 2311,
            column: 4
          },
          end: {
            line: 2314,
            column: 7
          }
        },
        "635": {
          start: {
            line: 2312,
            column: 8
          },
          end: {
            line: 2312,
            column: 31
          }
        },
        "636": {
          start: {
            line: 2313,
            column: 8
          },
          end: {
            line: 2313,
            column: 56
          }
        },
        "637": {
          start: {
            line: 2321,
            column: 12
          },
          end: {
            line: 2327,
            column: 13
          }
        },
        "638": {
          start: {
            line: 2322,
            column: 16
          },
          end: {
            line: 2326,
            column: 17
          }
        },
        "639": {
          start: {
            line: 2323,
            column: 20
          },
          end: {
            line: 2323,
            column: 41
          }
        },
        "640": {
          start: {
            line: 2325,
            column: 20
          },
          end: {
            line: 2325,
            column: 41
          }
        },
        "641": {
          start: {
            line: 2328,
            column: 8
          },
          end: {
            line: 2328,
            column: 33
          }
        },
        "642": {
          start: {
            line: 2472,
            column: 25
          },
          end: {
            line: 2472,
            column: 197
          }
        },
        "643": {
          start: {
            line: 2473,
            column: 8
          },
          end: {
            line: 2473,
            column: 30
          }
        },
        "644": {
          start: {
            line: 2474,
            column: 21
          },
          end: {
            line: 2474,
            column: 42
          }
        },
        "645": {
          start: {
            line: 2477,
            column: 23
          },
          end: {
            line: 2477,
            column: 38
          }
        },
        "646": {
          start: {
            line: 2478,
            column: 23
          },
          end: {
            line: 2478,
            column: 63
          }
        },
        "647": {
          start: {
            line: 2481,
            column: 28
          },
          end: {
            line: 2481,
            column: 62
          }
        },
        "648": {
          start: {
            line: 2484,
            column: 20
          },
          end: {
            line: 2484,
            column: 22
          }
        },
        "649": {
          start: {
            line: 2485,
            column: 21
          },
          end: {
            line: 2485,
            column: 23
          }
        },
        "650": {
          start: {
            line: 2488,
            column: 8
          },
          end: {
            line: 2510,
            column: 9
          }
        },
        "651": {
          start: {
            line: 2489,
            column: 24
          },
          end: {
            line: 2489,
            column: 38
          }
        },
        "652": {
          start: {
            line: 2491,
            column: 37
          },
          end: {
            line: 2491,
            column: 75
          }
        },
        "653": {
          start: {
            line: 2492,
            column: 33
          },
          end: {
            line: 2492,
            column: 68
          }
        },
        "654": {
          start: {
            line: 2495,
            column: 12
          },
          end: {
            line: 2509,
            column: 13
          }
        },
        "655": {
          start: {
            line: 2496,
            column: 34
          },
          end: {
            line: 2496,
            column: 70
          }
        },
        "656": {
          start: {
            line: 2497,
            column: 30
          },
          end: {
            line: 2497,
            column: 62
          }
        },
        "657": {
          start: {
            line: 2499,
            column: 16
          },
          end: {
            line: 2508,
            column: 17
          }
        },
        "658": {
          start: {
            line: 2501,
            column: 33
          },
          end: {
            line: 2501,
            column: 89
          }
        },
        "659": {
          start: {
            line: 2504,
            column: 20
          },
          end: {
            line: 2507,
            column: 21
          }
        },
        "660": {
          start: {
            line: 2505,
            column: 24
          },
          end: {
            line: 2505,
            column: 41
          }
        },
        "661": {
          start: {
            line: 2506,
            column: 24
          },
          end: {
            line: 2506,
            column: 55
          }
        },
        "662": {
          start: {
            line: 2517,
            column: 8
          },
          end: {
            line: 2587,
            column: 11
          }
        },
        "663": {
          start: {
            line: 2519,
            column: 12
          },
          end: {
            line: 2519,
            column: 49
          }
        },
        "664": {
          start: {
            line: 2523,
            column: 12
          },
          end: {
            line: 2523,
            column: 72
          }
        },
        "665": {
          start: {
            line: 2526,
            column: 12
          },
          end: {
            line: 2529,
            column: 16
          }
        },
        "666": {
          start: {
            line: 2526,
            column: 58
          },
          end: {
            line: 2529,
            column: 13
          }
        },
        "667": {
          start: {
            line: 2532,
            column: 31
          },
          end: {
            line: 2532,
            column: 82
          }
        },
        "668": {
          start: {
            line: 2533,
            column: 12
          },
          end: {
            line: 2533,
            column: 54
          }
        },
        "669": {
          start: {
            line: 2534,
            column: 12
          },
          end: {
            line: 2534,
            column: 82
          }
        },
        "670": {
          start: {
            line: 2535,
            column: 12
          },
          end: {
            line: 2535,
            column: 63
          }
        },
        "671": {
          start: {
            line: 2536,
            column: 12
          },
          end: {
            line: 2536,
            column: 65
          }
        },
        "672": {
          start: {
            line: 2537,
            column: 12
          },
          end: {
            line: 2537,
            column: 77
          }
        },
        "673": {
          start: {
            line: 2538,
            column: 12
          },
          end: {
            line: 2538,
            column: 76
          }
        },
        "674": {
          start: {
            line: 2539,
            column: 12
          },
          end: {
            line: 2539,
            column: 54
          }
        },
        "675": {
          start: {
            line: 2540,
            column: 13
          },
          end: {
            line: 2540,
            column: 60
          }
        },
        "676": {
          start: {
            line: 2541,
            column: 13
          },
          end: {
            line: 2541,
            column: 65
          }
        },
        "677": {
          start: {
            line: 2542,
            column: 11
          },
          end: {
            line: 2542,
            column: 57
          }
        },
        "678": {
          start: {
            line: 2544,
            column: 28
          },
          end: {
            line: 2544,
            column: 76
          }
        },
        "679": {
          start: {
            line: 2545,
            column: 12
          },
          end: {
            line: 2545,
            column: 79
          }
        },
        "680": {
          start: {
            line: 2546,
            column: 12
          },
          end: {
            line: 2546,
            column: 60
          }
        },
        "681": {
          start: {
            line: 2549,
            column: 29
          },
          end: {
            line: 2549,
            column: 79
          }
        },
        "682": {
          start: {
            line: 2550,
            column: 12
          },
          end: {
            line: 2550,
            column: 51
          }
        },
        "683": {
          start: {
            line: 2551,
            column: 12
          },
          end: {
            line: 2551,
            column: 53
          }
        },
        "684": {
          start: {
            line: 2552,
            column: 12
          },
          end: {
            line: 2552,
            column: 39
          }
        },
        "685": {
          start: {
            line: 2553,
            column: 12
          },
          end: {
            line: 2553,
            column: 57
          }
        },
        "686": {
          start: {
            line: 2568,
            column: 25
          },
          end: {
            line: 2568,
            column: 49
          }
        },
        "687": {
          start: {
            line: 2569,
            column: 12
          },
          end: {
            line: 2569,
            column: 64
          }
        },
        "688": {
          start: {
            line: 2570,
            column: 12
          },
          end: {
            line: 2570,
            column: 57
          }
        },
        "689": {
          start: {
            line: 2571,
            column: 12
          },
          end: {
            line: 2571,
            column: 74
          }
        },
        "690": {
          start: {
            line: 2572,
            column: 12
          },
          end: {
            line: 2572,
            column: 69
          }
        },
        "691": {
          start: {
            line: 2573,
            column: 12
          },
          end: {
            line: 2573,
            column: 65
          }
        },
        "692": {
          start: {
            line: 2576,
            column: 12
          },
          end: {
            line: 2576,
            column: 60
          }
        },
        "693": {
          start: {
            line: 2577,
            column: 12
          },
          end: {
            line: 2577,
            column: 50
          }
        },
        "694": {
          start: {
            line: 2578,
            column: 12
          },
          end: {
            line: 2578,
            column: 54
          }
        },
        "695": {
          start: {
            line: 2581,
            column: 12
          },
          end: {
            line: 2581,
            column: 71
          }
        },
        "696": {
          start: {
            line: 2582,
            column: 12
          },
          end: {
            line: 2582,
            column: 57
          }
        },
        "697": {
          start: {
            line: 2583,
            column: 12
          },
          end: {
            line: 2583,
            column: 50
          }
        },
        "698": {
          start: {
            line: 2585,
            column: 12
          },
          end: {
            line: 2585,
            column: 39
          }
        },
        "699": {
          start: {
            line: 2586,
            column: 12
          },
          end: {
            line: 2586,
            column: 44
          }
        },
        "700": {
          start: {
            line: 2589,
            column: 4
          },
          end: {
            line: 2589,
            column: 34
          }
        },
        "701": {
          start: {
            line: 2592,
            column: 8
          },
          end: {
            line: 2738,
            column: 11
          }
        },
        "702": {
          start: {
            line: 2594,
            column: 33
          },
          end: {
            line: 2594,
            column: 59
          }
        },
        "703": {
          start: {
            line: 2595,
            column: 31
          },
          end: {
            line: 2595,
            column: 55
          }
        },
        "704": {
          start: {
            line: 2596,
            column: 29
          },
          end: {
            line: 2596,
            column: 82
          }
        },
        "705": {
          start: {
            line: 2597,
            column: 4
          },
          end: {
            line: 2600,
            column: 5
          }
        },
        "706": {
          start: {
            line: 2599,
            column: 8
          },
          end: {
            line: 2599,
            column: 15
          }
        },
        "707": {
          start: {
            line: 2601,
            column: 30
          },
          end: {
            line: 2601,
            column: 32
          }
        },
        "708": {
          start: {
            line: 2606,
            column: 35
          },
          end: {
            line: 2606,
            column: 212
          }
        },
        "709": {
          start: {
            line: 2607,
            column: 15
          },
          end: {
            line: 2607,
            column: 39
          }
        },
        "710": {
          start: {
            line: 2608,
            column: 16
          },
          end: {
            line: 2654,
            column: 17
          }
        },
        "711": {
          start: {
            line: 2609,
            column: 37
          },
          end: {
            line: 2609,
            column: 60
          }
        },
        "712": {
          start: {
            line: 2610,
            column: 20
          },
          end: {
            line: 2610,
            column: 42
          }
        },
        "713": {
          start: {
            line: 2612,
            column: 29
          },
          end: {
            line: 2612,
            column: 50
          }
        },
        "714": {
          start: {
            line: 2615,
            column: 35
          },
          end: {
            line: 2615,
            column: 50
          }
        },
        "715": {
          start: {
            line: 2616,
            column: 35
          },
          end: {
            line: 2616,
            column: 75
          }
        },
        "716": {
          start: {
            line: 2617,
            column: 33
          },
          end: {
            line: 2617,
            column: 67
          }
        },
        "717": {
          start: {
            line: 2619,
            column: 20
          },
          end: {
            line: 2651,
            column: 21
          }
        },
        "718": {
          start: {
            line: 2620,
            column: 36
          },
          end: {
            line: 2620,
            column: 43
          }
        },
        "719": {
          start: {
            line: 2621,
            column: 40
          },
          end: {
            line: 2621,
            column: 78
          }
        },
        "720": {
          start: {
            line: 2622,
            column: 37
          },
          end: {
            line: 2622,
            column: 72
          }
        },
        "721": {
          start: {
            line: 2624,
            column: 24
          },
          end: {
            line: 2650,
            column: 25
          }
        },
        "722": {
          start: {
            line: 2625,
            column: 45
          },
          end: {
            line: 2625,
            column: 72
          }
        },
        "723": {
          start: {
            line: 2626,
            column: 46
          },
          end: {
            line: 2626,
            column: 70
          }
        },
        "724": {
          start: {
            line: 2628,
            column: 28
          },
          end: {
            line: 2649,
            column: 29
          }
        },
        "725": {
          start: {
            line: 2629,
            column: 46
          },
          end: {
            line: 2629,
            column: 78
          }
        },
        "726": {
          start: {
            line: 2630,
            column: 45
          },
          end: {
            line: 2630,
            column: 63
          }
        },
        "727": {
          start: {
            line: 2631,
            column: 54
          },
          end: {
            line: 2634,
            column: 34
          }
        },
        "728": {
          start: {
            line: 2635,
            column: 48
          },
          end: {
            line: 2635,
            column: 67
          }
        },
        "729": {
          start: {
            line: 2637,
            column: 54
          },
          end: {
            line: 2637,
            column: 118
          }
        },
        "730": {
          start: {
            line: 2637,
            column: 80
          },
          end: {
            line: 2637,
            column: 117
          }
        },
        "731": {
          start: {
            line: 2639,
            column: 32
          },
          end: {
            line: 2648,
            column: 33
          }
        },
        "732": {
          start: {
            line: 2641,
            column: 36
          },
          end: {
            line: 2641,
            column: 76
          }
        },
        "733": {
          start: {
            line: 2644,
            column: 36
          },
          end: {
            line: 2647,
            column: 39
          }
        },
        "734": {
          start: {
            line: 2653,
            column: 20
          },
          end: {
            line: 2653,
            column: 62
          }
        },
        "735": {
          start: {
            line: 2658,
            column: 12
          },
          end: {
            line: 2658,
            column: 49
          }
        },
        "736": {
          start: {
            line: 2662,
            column: 12
          },
          end: {
            line: 2662,
            column: 72
          }
        },
        "737": {
          start: {
            line: 2663,
            column: 12
          },
          end: {
            line: 2663,
            column: 41
          }
        },
        "738": {
          start: {
            line: 2666,
            column: 12
          },
          end: {
            line: 2666,
            column: 42
          }
        },
        "739": {
          start: {
            line: 2667,
            column: 12
          },
          end: {
            line: 2667,
            column: 41
          }
        },
        "740": {
          start: {
            line: 2668,
            column: 12
          },
          end: {
            line: 2680,
            column: 15
          }
        },
        "741": {
          start: {
            line: 2669,
            column: 16
          },
          end: {
            line: 2669,
            column: 58
          }
        },
        "742": {
          start: {
            line: 2670,
            column: 16
          },
          end: {
            line: 2670,
            column: 67
          }
        },
        "743": {
          start: {
            line: 2673,
            column: 38
          },
          end: {
            line: 2677,
            column: 18
          }
        },
        "744": {
          start: {
            line: 2678,
            column: 16
          },
          end: {
            line: 2678,
            column: 42
          }
        },
        "745": {
          start: {
            line: 2679,
            column: 16
          },
          end: {
            line: 2679,
            column: 69
          }
        },
        "746": {
          start: {
            line: 2684,
            column: 31
          },
          end: {
            line: 2684,
            column: 82
          }
        },
        "747": {
          start: {
            line: 2685,
            column: 12
          },
          end: {
            line: 2685,
            column: 54
          }
        },
        "748": {
          start: {
            line: 2686,
            column: 12
          },
          end: {
            line: 2686,
            column: 55
          }
        },
        "749": {
          start: {
            line: 2690,
            column: 12
          },
          end: {
            line: 2690,
            column: 78
          }
        },
        "750": {
          start: {
            line: 2691,
            column: 12
          },
          end: {
            line: 2691,
            column: 76
          }
        },
        "751": {
          start: {
            line: 2693,
            column: 28
          },
          end: {
            line: 2693,
            column: 76
          }
        },
        "752": {
          start: {
            line: 2694,
            column: 12
          },
          end: {
            line: 2694,
            column: 36
          }
        },
        "753": {
          start: {
            line: 2698,
            column: 29
          },
          end: {
            line: 2698,
            column: 81
          }
        },
        "754": {
          start: {
            line: 2699,
            column: 16
          },
          end: {
            line: 2699,
            column: 54
          }
        },
        "755": {
          start: {
            line: 2700,
            column: 16
          },
          end: {
            line: 2700,
            column: 53
          }
        },
        "756": {
          start: {
            line: 2701,
            column: 16
          },
          end: {
            line: 2701,
            column: 35
          }
        },
        "757": {
          start: {
            line: 2703,
            column: 16
          },
          end: {
            line: 2703,
            column: 39
          }
        },
        "758": {
          start: {
            line: 2707,
            column: 29
          },
          end: {
            line: 2707,
            column: 72
          }
        },
        "759": {
          start: {
            line: 2708,
            column: 16
          },
          end: {
            line: 2708,
            column: 48
          }
        },
        "760": {
          start: {
            line: 2710,
            column: 16
          },
          end: {
            line: 2716,
            column: 19
          }
        },
        "761": {
          start: {
            line: 2712,
            column: 20
          },
          end: {
            line: 2714,
            column: 21
          }
        },
        "762": {
          start: {
            line: 2713,
            column: 24
          },
          end: {
            line: 2713,
            column: 56
          }
        },
        "763": {
          start: {
            line: 2715,
            column: 20
          },
          end: {
            line: 2715,
            column: 41
          }
        },
        "764": {
          start: {
            line: 2718,
            column: 16
          },
          end: {
            line: 2718,
            column: 30
          }
        },
        "765": {
          start: {
            line: 2720,
            column: 12
          },
          end: {
            line: 2720,
            column: 55
          }
        },
        "766": {
          start: {
            line: 2721,
            column: 12
          },
          end: {
            line: 2721,
            column: 47
          }
        },
        "767": {
          start: {
            line: 2722,
            column: 12
          },
          end: {
            line: 2722,
            column: 49
          }
        },
        "768": {
          start: {
            line: 2723,
            column: 12
          },
          end: {
            line: 2723,
            column: 60
          }
        },
        "769": {
          start: {
            line: 2725,
            column: 12
          },
          end: {
            line: 2725,
            column: 69
          }
        },
        "770": {
          start: {
            line: 2732,
            column: 12
          },
          end: {
            line: 2732,
            column: 60
          }
        },
        "771": {
          start: {
            line: 2733,
            column: 12
          },
          end: {
            line: 2733,
            column: 52
          }
        },
        "772": {
          start: {
            line: 2735,
            column: 12
          },
          end: {
            line: 2735,
            column: 57
          }
        },
        "773": {
          start: {
            line: 2736,
            column: 12
          },
          end: {
            line: 2736,
            column: 44
          }
        },
        "774": {
          start: {
            line: 2742,
            column: 8
          },
          end: {
            line: 2890,
            column: 11
          }
        },
        "775": {
          start: {
            line: 2744,
            column: 22
          },
          end: {
            line: 2744,
            column: 32
          }
        },
        "776": {
          start: {
            line: 2745,
            column: 29
          },
          end: {
            line: 2745,
            column: 45
          }
        },
        "777": {
          start: {
            line: 2748,
            column: 26
          },
          end: {
            line: 2748,
            column: 76
          }
        },
        "778": {
          start: {
            line: 2749,
            column: 24
          },
          end: {
            line: 2749,
            column: 70
          }
        },
        "779": {
          start: {
            line: 2751,
            column: 25
          },
          end: {
            line: 2751,
            column: 154
          }
        },
        "780": {
          start: {
            line: 2752,
            column: 23
          },
          end: {
            line: 2752,
            column: 146
          }
        },
        "781": {
          start: {
            line: 2753,
            column: 30
          },
          end: {
            line: 2753,
            column: 32
          }
        },
        "782": {
          start: {
            line: 2758,
            column: 35
          },
          end: {
            line: 2758,
            column: 201
          }
        },
        "783": {
          start: {
            line: 2759,
            column: 16
          },
          end: {
            line: 2759,
            column: 40
          }
        },
        "784": {
          start: {
            line: 2760,
            column: 16
          },
          end: {
            line: 2806,
            column: 17
          }
        },
        "785": {
          start: {
            line: 2761,
            column: 37
          },
          end: {
            line: 2761,
            column: 60
          }
        },
        "786": {
          start: {
            line: 2762,
            column: 20
          },
          end: {
            line: 2762,
            column: 42
          }
        },
        "787": {
          start: {
            line: 2764,
            column: 29
          },
          end: {
            line: 2764,
            column: 50
          }
        },
        "788": {
          start: {
            line: 2767,
            column: 35
          },
          end: {
            line: 2767,
            column: 50
          }
        },
        "789": {
          start: {
            line: 2768,
            column: 35
          },
          end: {
            line: 2768,
            column: 75
          }
        },
        "790": {
          start: {
            line: 2769,
            column: 33
          },
          end: {
            line: 2769,
            column: 67
          }
        },
        "791": {
          start: {
            line: 2771,
            column: 20
          },
          end: {
            line: 2803,
            column: 21
          }
        },
        "792": {
          start: {
            line: 2772,
            column: 36
          },
          end: {
            line: 2772,
            column: 43
          }
        },
        "793": {
          start: {
            line: 2773,
            column: 40
          },
          end: {
            line: 2773,
            column: 78
          }
        },
        "794": {
          start: {
            line: 2774,
            column: 37
          },
          end: {
            line: 2774,
            column: 72
          }
        },
        "795": {
          start: {
            line: 2776,
            column: 24
          },
          end: {
            line: 2802,
            column: 25
          }
        },
        "796": {
          start: {
            line: 2777,
            column: 45
          },
          end: {
            line: 2777,
            column: 72
          }
        },
        "797": {
          start: {
            line: 2778,
            column: 46
          },
          end: {
            line: 2778,
            column: 70
          }
        },
        "798": {
          start: {
            line: 2780,
            column: 28
          },
          end: {
            line: 2801,
            column: 29
          }
        },
        "799": {
          start: {
            line: 2781,
            column: 46
          },
          end: {
            line: 2781,
            column: 78
          }
        },
        "800": {
          start: {
            line: 2782,
            column: 45
          },
          end: {
            line: 2782,
            column: 63
          }
        },
        "801": {
          start: {
            line: 2783,
            column: 54
          },
          end: {
            line: 2786,
            column: 34
          }
        },
        "802": {
          start: {
            line: 2787,
            column: 48
          },
          end: {
            line: 2787,
            column: 67
          }
        },
        "803": {
          start: {
            line: 2789,
            column: 54
          },
          end: {
            line: 2789,
            column: 118
          }
        },
        "804": {
          start: {
            line: 2789,
            column: 80
          },
          end: {
            line: 2789,
            column: 117
          }
        },
        "805": {
          start: {
            line: 2791,
            column: 32
          },
          end: {
            line: 2800,
            column: 33
          }
        },
        "806": {
          start: {
            line: 2793,
            column: 36
          },
          end: {
            line: 2793,
            column: 76
          }
        },
        "807": {
          start: {
            line: 2796,
            column: 36
          },
          end: {
            line: 2799,
            column: 39
          }
        },
        "808": {
          start: {
            line: 2805,
            column: 20
          },
          end: {
            line: 2805,
            column: 62
          }
        },
        "809": {
          start: {
            line: 2810,
            column: 12
          },
          end: {
            line: 2810,
            column: 49
          }
        },
        "810": {
          start: {
            line: 2814,
            column: 12
          },
          end: {
            line: 2814,
            column: 72
          }
        },
        "811": {
          start: {
            line: 2815,
            column: 12
          },
          end: {
            line: 2815,
            column: 41
          }
        },
        "812": {
          start: {
            line: 2818,
            column: 12
          },
          end: {
            line: 2818,
            column: 42
          }
        },
        "813": {
          start: {
            line: 2819,
            column: 12
          },
          end: {
            line: 2819,
            column: 41
          }
        },
        "814": {
          start: {
            line: 2820,
            column: 12
          },
          end: {
            line: 2832,
            column: 15
          }
        },
        "815": {
          start: {
            line: 2821,
            column: 16
          },
          end: {
            line: 2821,
            column: 58
          }
        },
        "816": {
          start: {
            line: 2822,
            column: 16
          },
          end: {
            line: 2822,
            column: 67
          }
        },
        "817": {
          start: {
            line: 2825,
            column: 38
          },
          end: {
            line: 2829,
            column: 18
          }
        },
        "818": {
          start: {
            line: 2830,
            column: 16
          },
          end: {
            line: 2830,
            column: 42
          }
        },
        "819": {
          start: {
            line: 2831,
            column: 16
          },
          end: {
            line: 2831,
            column: 69
          }
        },
        "820": {
          start: {
            line: 2836,
            column: 31
          },
          end: {
            line: 2836,
            column: 82
          }
        },
        "821": {
          start: {
            line: 2837,
            column: 12
          },
          end: {
            line: 2837,
            column: 54
          }
        },
        "822": {
          start: {
            line: 2838,
            column: 12
          },
          end: {
            line: 2838,
            column: 55
          }
        },
        "823": {
          start: {
            line: 2842,
            column: 12
          },
          end: {
            line: 2842,
            column: 78
          }
        },
        "824": {
          start: {
            line: 2843,
            column: 12
          },
          end: {
            line: 2843,
            column: 76
          }
        },
        "825": {
          start: {
            line: 2845,
            column: 28
          },
          end: {
            line: 2845,
            column: 76
          }
        },
        "826": {
          start: {
            line: 2846,
            column: 12
          },
          end: {
            line: 2846,
            column: 36
          }
        },
        "827": {
          start: {
            line: 2850,
            column: 29
          },
          end: {
            line: 2850,
            column: 79
          }
        },
        "828": {
          start: {
            line: 2851,
            column: 16
          },
          end: {
            line: 2851,
            column: 54
          }
        },
        "829": {
          start: {
            line: 2852,
            column: 16
          },
          end: {
            line: 2852,
            column: 53
          }
        },
        "830": {
          start: {
            line: 2853,
            column: 16
          },
          end: {
            line: 2853,
            column: 35
          }
        },
        "831": {
          start: {
            line: 2854,
            column: 16
          },
          end: {
            line: 2854,
            column: 39
          }
        },
        "832": {
          start: {
            line: 2855,
            column: 16
          },
          end: {
            line: 2855,
            column: 39
          }
        },
        "833": {
          start: {
            line: 2856,
            column: 16
          },
          end: {
            line: 2856,
            column: 38
          }
        },
        "834": {
          start: {
            line: 2859,
            column: 29
          },
          end: {
            line: 2859,
            column: 72
          }
        },
        "835": {
          start: {
            line: 2860,
            column: 16
          },
          end: {
            line: 2860,
            column: 48
          }
        },
        "836": {
          start: {
            line: 2862,
            column: 16
          },
          end: {
            line: 2868,
            column: 19
          }
        },
        "837": {
          start: {
            line: 2864,
            column: 20
          },
          end: {
            line: 2866,
            column: 21
          }
        },
        "838": {
          start: {
            line: 2865,
            column: 24
          },
          end: {
            line: 2865,
            column: 56
          }
        },
        "839": {
          start: {
            line: 2867,
            column: 20
          },
          end: {
            line: 2867,
            column: 41
          }
        },
        "840": {
          start: {
            line: 2870,
            column: 16
          },
          end: {
            line: 2870,
            column: 30
          }
        },
        "841": {
          start: {
            line: 2872,
            column: 12
          },
          end: {
            line: 2872,
            column: 55
          }
        },
        "842": {
          start: {
            line: 2873,
            column: 12
          },
          end: {
            line: 2873,
            column: 47
          }
        },
        "843": {
          start: {
            line: 2874,
            column: 12
          },
          end: {
            line: 2874,
            column: 49
          }
        },
        "844": {
          start: {
            line: 2875,
            column: 12
          },
          end: {
            line: 2875,
            column: 60
          }
        },
        "845": {
          start: {
            line: 2877,
            column: 12
          },
          end: {
            line: 2877,
            column: 69
          }
        },
        "846": {
          start: {
            line: 2884,
            column: 12
          },
          end: {
            line: 2884,
            column: 60
          }
        },
        "847": {
          start: {
            line: 2885,
            column: 12
          },
          end: {
            line: 2885,
            column: 52
          }
        },
        "848": {
          start: {
            line: 2887,
            column: 12
          },
          end: {
            line: 2887,
            column: 57
          }
        },
        "849": {
          start: {
            line: 2888,
            column: 12
          },
          end: {
            line: 2888,
            column: 44
          }
        },
        "850": {
          start: {
            line: 2896,
            column: 8
          },
          end: {
            line: 3017,
            column: 11
          }
        },
        "851": {
          start: {
            line: 2898,
            column: 12
          },
          end: {
            line: 2898,
            column: 49
          }
        },
        "852": {
          start: {
            line: 2902,
            column: 29
          },
          end: {
            line: 2902,
            column: 75
          }
        },
        "853": {
          start: {
            line: 2903,
            column: 12
          },
          end: {
            line: 2903,
            column: 44
          }
        },
        "854": {
          start: {
            line: 2906,
            column: 33
          },
          end: {
            line: 2906,
            column: 51
          }
        },
        "855": {
          start: {
            line: 2907,
            column: 12
          },
          end: {
            line: 2907,
            column: 81
          }
        },
        "856": {
          start: {
            line: 2910,
            column: 25
          },
          end: {
            line: 2912,
            column: 14
          }
        },
        "857": {
          start: {
            line: 2911,
            column: 16
          },
          end: {
            line: 2911,
            column: 172
          }
        },
        "858": {
          start: {
            line: 2913,
            column: 13
          },
          end: {
            line: 2913,
            column: 59
          }
        },
        "859": {
          start: {
            line: 2916,
            column: 30
          },
          end: {
            line: 2916,
            column: 32
          }
        },
        "860": {
          start: {
            line: 2919,
            column: 12
          },
          end: {
            line: 2967,
            column: 13
          }
        },
        "861": {
          start: {
            line: 2921,
            column: 37
          },
          end: {
            line: 2921,
            column: 58
          }
        },
        "862": {
          start: {
            line: 2922,
            column: 33
          },
          end: {
            line: 2922,
            column: 54
          }
        },
        "863": {
          start: {
            line: 2923,
            column: 35
          },
          end: {
            line: 2923,
            column: 50
          }
        },
        "864": {
          start: {
            line: 2924,
            column: 32
          },
          end: {
            line: 2924,
            column: 79
          }
        },
        "865": {
          start: {
            line: 2927,
            column: 20
          },
          end: {
            line: 2927,
            column: 61
          }
        },
        "866": {
          start: {
            line: 2930,
            column: 36
          },
          end: {
            line: 2930,
            column: 67
          }
        },
        "867": {
          start: {
            line: 2931,
            column: 20
          },
          end: {
            line: 2931,
            column: 57
          }
        },
        "868": {
          start: {
            line: 2934,
            column: 20
          },
          end: {
            line: 2963,
            column: 21
          }
        },
        "869": {
          start: {
            line: 2935,
            column: 42
          },
          end: {
            line: 2935,
            column: 87
          }
        },
        "870": {
          start: {
            line: 2936,
            column: 38
          },
          end: {
            line: 2936,
            column: 80
          }
        },
        "871": {
          start: {
            line: 2939,
            column: 24
          },
          end: {
            line: 2939,
            column: 78
          }
        },
        "872": {
          start: {
            line: 2941,
            column: 37
          },
          end: {
            line: 2941,
            column: 56
          }
        },
        "873": {
          start: {
            line: 2942,
            column: 36
          },
          end: {
            line: 2942,
            column: 70
          }
        },
        "874": {
          start: {
            line: 2943,
            column: 24
          },
          end: {
            line: 2943,
            column: 65
          }
        },
        "875": {
          start: {
            line: 2944,
            column: 24
          },
          end: {
            line: 2944,
            column: 57
          }
        },
        "876": {
          start: {
            line: 2945,
            column: 39
          },
          end: {
            line: 2945,
            column: 89
          }
        },
        "877": {
          start: {
            line: 2946,
            column: 24
          },
          end: {
            line: 2946,
            column: 59
          }
        },
        "878": {
          start: {
            line: 2947,
            column: 37
          },
          end: {
            line: 2947,
            column: 55
          }
        },
        "879": {
          start: {
            line: 2949,
            column: 45
          },
          end: {
            line: 2949,
            column: 64
          }
        },
        "880": {
          start: {
            line: 2950,
            column: 24
          },
          end: {
            line: 2950,
            column: 81
          }
        },
        "881": {
          start: {
            line: 2953,
            column: 24
          },
          end: {
            line: 2953,
            column: 59
          }
        },
        "882": {
          start: {
            line: 2953,
            column: 50
          },
          end: {
            line: 2953,
            column: 59
          }
        },
        "883": {
          start: {
            line: 2959,
            column: 24
          },
          end: {
            line: 2962,
            column: 27
          }
        },
        "884": {
          start: {
            line: 2966,
            column: 20
          },
          end: {
            line: 2966,
            column: 58
          }
        },
        "885": {
          start: {
            line: 2970,
            column: 12
          },
          end: {
            line: 2970,
            column: 50
          }
        },
        "886": {
          start: {
            line: 2972,
            column: 31
          },
          end: {
            line: 2972,
            column: 82
          }
        },
        "887": {
          start: {
            line: 2973,
            column: 12
          },
          end: {
            line: 2973,
            column: 55
          }
        },
        "888": {
          start: {
            line: 2974,
            column: 12
          },
          end: {
            line: 2974,
            column: 82
          }
        },
        "889": {
          start: {
            line: 2975,
            column: 12
          },
          end: {
            line: 2975,
            column: 63
          }
        },
        "890": {
          start: {
            line: 2976,
            column: 12
          },
          end: {
            line: 2976,
            column: 65
          }
        },
        "891": {
          start: {
            line: 2977,
            column: 12
          },
          end: {
            line: 2977,
            column: 77
          }
        },
        "892": {
          start: {
            line: 2978,
            column: 12
          },
          end: {
            line: 2978,
            column: 76
          }
        },
        "893": {
          start: {
            line: 2979,
            column: 12
          },
          end: {
            line: 2979,
            column: 54
          }
        },
        "894": {
          start: {
            line: 2980,
            column: 12
          },
          end: {
            line: 2980,
            column: 59
          }
        },
        "895": {
          start: {
            line: 2981,
            column: 12
          },
          end: {
            line: 2981,
            column: 64
          }
        },
        "896": {
          start: {
            line: 2982,
            column: 12
          },
          end: {
            line: 2982,
            column: 58
          }
        },
        "897": {
          start: {
            line: 2985,
            column: 28
          },
          end: {
            line: 2985,
            column: 76
          }
        },
        "898": {
          start: {
            line: 2986,
            column: 12
          },
          end: {
            line: 2986,
            column: 79
          }
        },
        "899": {
          start: {
            line: 2987,
            column: 12
          },
          end: {
            line: 2987,
            column: 60
          }
        },
        "900": {
          start: {
            line: 2990,
            column: 29
          },
          end: {
            line: 2990,
            column: 79
          }
        },
        "901": {
          start: {
            line: 2991,
            column: 12
          },
          end: {
            line: 2991,
            column: 51
          }
        },
        "902": {
          start: {
            line: 2992,
            column: 12
          },
          end: {
            line: 2992,
            column: 54
          }
        },
        "903": {
          start: {
            line: 2993,
            column: 12
          },
          end: {
            line: 2993,
            column: 39
          }
        },
        "904": {
          start: {
            line: 2994,
            column: 12
          },
          end: {
            line: 2994,
            column: 57
          }
        },
        "905": {
          start: {
            line: 2997,
            column: 25
          },
          end: {
            line: 2997,
            column: 78
          }
        },
        "906": {
          start: {
            line: 2998,
            column: 12
          },
          end: {
            line: 2998,
            column: 37
          }
        },
        "907": {
          start: {
            line: 2999,
            column: 12
          },
          end: {
            line: 2999,
            column: 44
          }
        },
        "908": {
          start: {
            line: 3000,
            column: 12
          },
          end: {
            line: 3000,
            column: 58
          }
        },
        "909": {
          start: {
            line: 3001,
            column: 12
          },
          end: {
            line: 3001,
            column: 60
          }
        },
        "910": {
          start: {
            line: 3004,
            column: 12
          },
          end: {
            line: 3006,
            column: 15
          }
        },
        "911": {
          start: {
            line: 3005,
            column: 16
          },
          end: {
            line: 3005,
            column: 37
          }
        },
        "912": {
          start: {
            line: 3009,
            column: 25
          },
          end: {
            line: 3009,
            column: 49
          }
        },
        "913": {
          start: {
            line: 3010,
            column: 12
          },
          end: {
            line: 3010,
            column: 70
          }
        },
        "914": {
          start: {
            line: 3011,
            column: 12
          },
          end: {
            line: 3011,
            column: 57
          }
        },
        "915": {
          start: {
            line: 3012,
            column: 12
          },
          end: {
            line: 3012,
            column: 74
          }
        },
        "916": {
          start: {
            line: 3013,
            column: 12
          },
          end: {
            line: 3013,
            column: 69
          }
        },
        "917": {
          start: {
            line: 3014,
            column: 12
          },
          end: {
            line: 3014,
            column: 65
          }
        },
        "918": {
          start: {
            line: 3016,
            column: 12
          },
          end: {
            line: 3016,
            column: 39
          }
        },
        "919": {
          start: {
            line: 3023,
            column: 4
          },
          end: {
            line: 3025,
            column: 7
          }
        },
        "920": {
          start: {
            line: 3024,
            column: 8
          },
          end: {
            line: 3024,
            column: 42
          }
        },
        "921": {
          start: {
            line: 3027,
            column: 4
          },
          end: {
            line: 3030,
            column: 7
          }
        },
        "922": {
          start: {
            line: 3028,
            column: 8
          },
          end: {
            line: 3028,
            column: 31
          }
        },
        "923": {
          start: {
            line: 3029,
            column: 8
          },
          end: {
            line: 3029,
            column: 55
          }
        },
        "924": {
          start: {
            line: 3032,
            column: 4
          },
          end: {
            line: 3035,
            column: 7
          }
        },
        "925": {
          start: {
            line: 3033,
            column: 8
          },
          end: {
            line: 3033,
            column: 31
          }
        },
        "926": {
          start: {
            line: 3034,
            column: 8
          },
          end: {
            line: 3034,
            column: 44
          }
        },
        "927": {
          start: {
            line: 3037,
            column: 4
          },
          end: {
            line: 3040,
            column: 7
          }
        },
        "928": {
          start: {
            line: 3038,
            column: 8
          },
          end: {
            line: 3038,
            column: 31
          }
        },
        "929": {
          start: {
            line: 3039,
            column: 8
          },
          end: {
            line: 3039,
            column: 44
          }
        },
        "930": {
          start: {
            line: 3045,
            column: 25
          },
          end: {
            line: 3045,
            column: 29
          }
        },
        "931": {
          start: {
            line: 3047,
            column: 8
          },
          end: {
            line: 3054,
            column: 9
          }
        },
        "932": {
          start: {
            line: 3048,
            column: 12
          },
          end: {
            line: 3053,
            column: 13
          }
        },
        "933": {
          start: {
            line: 3049,
            column: 16
          },
          end: {
            line: 3049,
            column: 41
          }
        },
        "934": {
          start: {
            line: 3051,
            column: 16
          },
          end: {
            line: 3051,
            column: 51
          }
        },
        "935": {
          start: {
            line: 3052,
            column: 16
          },
          end: {
            line: 3052,
            column: 41
          }
        },
        "936": {
          start: {
            line: 3056,
            column: 7
          },
          end: {
            line: 3056,
            column: 32
          }
        },
        "937": {
          start: {
            line: 3073,
            column: 24
          },
          end: {
            line: 3073,
            column: 26
          }
        },
        "938": {
          start: {
            line: 3074,
            column: 22
          },
          end: {
            line: 3149,
            column: 9
          }
        },
        "939": {
          start: {
            line: 3151,
            column: 8
          },
          end: {
            line: 3151,
            column: 87
          }
        },
        "940": {
          start: {
            line: 3152,
            column: 8
          },
          end: {
            line: 3152,
            column: 32
          }
        },
        "941": {
          start: {
            line: 3162,
            column: 4
          },
          end: {
            line: 3162,
            column: 28
          }
        },
        "942": {
          start: {
            line: 3165,
            column: 23
          },
          end: {
            line: 3165,
            column: 43
          }
        },
        "943": {
          start: {
            line: 3166,
            column: 22
          },
          end: {
            line: 3166,
            column: 24
          }
        },
        "944": {
          start: {
            line: 3169,
            column: 8
          },
          end: {
            line: 3184,
            column: 9
          }
        },
        "945": {
          start: {
            line: 3170,
            column: 12
          },
          end: {
            line: 3183,
            column: 13
          }
        },
        "946": {
          start: {
            line: 3171,
            column: 33
          },
          end: {
            line: 3171,
            column: 114
          }
        },
        "947": {
          start: {
            line: 3172,
            column: 29
          },
          end: {
            line: 3172,
            column: 50
          }
        },
        "948": {
          start: {
            line: 3175,
            column: 31
          },
          end: {
            line: 3175,
            column: 46
          }
        },
        "949": {
          start: {
            line: 3176,
            column: 31
          },
          end: {
            line: 3176,
            column: 78
          }
        },
        "950": {
          start: {
            line: 3179,
            column: 28
          },
          end: {
            line: 3179,
            column: 123
          }
        },
        "951": {
          start: {
            line: 3180,
            column: 16
          },
          end: {
            line: 3180,
            column: 34
          }
        },
        "952": {
          start: {
            line: 3182,
            column: 16
          },
          end: {
            line: 3182,
            column: 74
          }
        },
        "953": {
          start: {
            line: 3185,
            column: 22
          },
          end: {
            line: 3271,
            column: 9
          }
        },
        "954": {
          start: {
            line: 3214,
            column: 20
          },
          end: {
            line: 3214,
            column: 31
          }
        },
        "955": {
          start: {
            line: 3273,
            column: 8
          },
          end: {
            line: 3273,
            column: 87
          }
        },
        "956": {
          start: {
            line: 3274,
            column: 8
          },
          end: {
            line: 3274,
            column: 38
          }
        },
        "957": {
          start: {
            line: 3279,
            column: 4
          },
          end: {
            line: 3286,
            column: 7
          }
        },
        "958": {
          start: {
            line: 3280,
            column: 8
          },
          end: {
            line: 3280,
            column: 33
          }
        },
        "959": {
          start: {
            line: 3281,
            column: 8
          },
          end: {
            line: 3281,
            column: 33
          }
        },
        "960": {
          start: {
            line: 3282,
            column: 8
          },
          end: {
            line: 3282,
            column: 35
          }
        },
        "961": {
          start: {
            line: 3283,
            column: 8
          },
          end: {
            line: 3283,
            column: 33
          }
        },
        "962": {
          start: {
            line: 3285,
            column: 8
          },
          end: {
            line: 3285,
            column: 28
          }
        },
        "963": {
          start: {
            line: 3287,
            column: 4
          },
          end: {
            line: 3293,
            column: 7
          }
        },
        "964": {
          start: {
            line: 3288,
            column: 8
          },
          end: {
            line: 3288,
            column: 33
          }
        },
        "965": {
          start: {
            line: 3289,
            column: 8
          },
          end: {
            line: 3289,
            column: 33
          }
        },
        "966": {
          start: {
            line: 3290,
            column: 8
          },
          end: {
            line: 3290,
            column: 35
          }
        },
        "967": {
          start: {
            line: 3291,
            column: 8
          },
          end: {
            line: 3291,
            column: 33
          }
        },
        "968": {
          start: {
            line: 3295,
            column: 8
          },
          end: {
            line: 3441,
            column: 11
          }
        },
        "969": {
          start: {
            line: 3297,
            column: 33
          },
          end: {
            line: 3297,
            column: 63
          }
        },
        "970": {
          start: {
            line: 3298,
            column: 31
          },
          end: {
            line: 3298,
            column: 59
          }
        },
        "971": {
          start: {
            line: 3299,
            column: 29
          },
          end: {
            line: 3299,
            column: 82
          }
        },
        "972": {
          start: {
            line: 3300,
            column: 4
          },
          end: {
            line: 3303,
            column: 5
          }
        },
        "973": {
          start: {
            line: 3302,
            column: 8
          },
          end: {
            line: 3302,
            column: 15
          }
        },
        "974": {
          start: {
            line: 3304,
            column: 30
          },
          end: {
            line: 3304,
            column: 32
          }
        },
        "975": {
          start: {
            line: 3309,
            column: 35
          },
          end: {
            line: 3309,
            column: 181
          }
        },
        "976": {
          start: {
            line: 3310,
            column: 16
          },
          end: {
            line: 3310,
            column: 40
          }
        },
        "977": {
          start: {
            line: 3311,
            column: 16
          },
          end: {
            line: 3357,
            column: 17
          }
        },
        "978": {
          start: {
            line: 3312,
            column: 37
          },
          end: {
            line: 3312,
            column: 60
          }
        },
        "979": {
          start: {
            line: 3313,
            column: 20
          },
          end: {
            line: 3313,
            column: 42
          }
        },
        "980": {
          start: {
            line: 3315,
            column: 29
          },
          end: {
            line: 3315,
            column: 50
          }
        },
        "981": {
          start: {
            line: 3318,
            column: 35
          },
          end: {
            line: 3318,
            column: 50
          }
        },
        "982": {
          start: {
            line: 3319,
            column: 35
          },
          end: {
            line: 3319,
            column: 75
          }
        },
        "983": {
          start: {
            line: 3320,
            column: 33
          },
          end: {
            line: 3320,
            column: 67
          }
        },
        "984": {
          start: {
            line: 3322,
            column: 20
          },
          end: {
            line: 3354,
            column: 21
          }
        },
        "985": {
          start: {
            line: 3323,
            column: 36
          },
          end: {
            line: 3323,
            column: 43
          }
        },
        "986": {
          start: {
            line: 3324,
            column: 40
          },
          end: {
            line: 3324,
            column: 78
          }
        },
        "987": {
          start: {
            line: 3325,
            column: 37
          },
          end: {
            line: 3325,
            column: 72
          }
        },
        "988": {
          start: {
            line: 3327,
            column: 24
          },
          end: {
            line: 3353,
            column: 25
          }
        },
        "989": {
          start: {
            line: 3328,
            column: 45
          },
          end: {
            line: 3328,
            column: 72
          }
        },
        "990": {
          start: {
            line: 3329,
            column: 46
          },
          end: {
            line: 3329,
            column: 70
          }
        },
        "991": {
          start: {
            line: 3331,
            column: 28
          },
          end: {
            line: 3352,
            column: 29
          }
        },
        "992": {
          start: {
            line: 3332,
            column: 46
          },
          end: {
            line: 3332,
            column: 78
          }
        },
        "993": {
          start: {
            line: 3333,
            column: 45
          },
          end: {
            line: 3333,
            column: 63
          }
        },
        "994": {
          start: {
            line: 3334,
            column: 54
          },
          end: {
            line: 3337,
            column: 34
          }
        },
        "995": {
          start: {
            line: 3338,
            column: 48
          },
          end: {
            line: 3338,
            column: 67
          }
        },
        "996": {
          start: {
            line: 3340,
            column: 54
          },
          end: {
            line: 3340,
            column: 118
          }
        },
        "997": {
          start: {
            line: 3340,
            column: 80
          },
          end: {
            line: 3340,
            column: 117
          }
        },
        "998": {
          start: {
            line: 3342,
            column: 32
          },
          end: {
            line: 3351,
            column: 33
          }
        },
        "999": {
          start: {
            line: 3344,
            column: 36
          },
          end: {
            line: 3344,
            column: 76
          }
        },
        "1000": {
          start: {
            line: 3347,
            column: 36
          },
          end: {
            line: 3350,
            column: 39
          }
        },
        "1001": {
          start: {
            line: 3356,
            column: 20
          },
          end: {
            line: 3356,
            column: 62
          }
        },
        "1002": {
          start: {
            line: 3361,
            column: 12
          },
          end: {
            line: 3361,
            column: 49
          }
        },
        "1003": {
          start: {
            line: 3365,
            column: 12
          },
          end: {
            line: 3365,
            column: 76
          }
        },
        "1004": {
          start: {
            line: 3366,
            column: 12
          },
          end: {
            line: 3366,
            column: 45
          }
        },
        "1005": {
          start: {
            line: 3369,
            column: 12
          },
          end: {
            line: 3369,
            column: 46
          }
        },
        "1006": {
          start: {
            line: 3370,
            column: 12
          },
          end: {
            line: 3370,
            column: 45
          }
        },
        "1007": {
          start: {
            line: 3371,
            column: 12
          },
          end: {
            line: 3383,
            column: 15
          }
        },
        "1008": {
          start: {
            line: 3372,
            column: 16
          },
          end: {
            line: 3372,
            column: 58
          }
        },
        "1009": {
          start: {
            line: 3373,
            column: 16
          },
          end: {
            line: 3373,
            column: 67
          }
        },
        "1010": {
          start: {
            line: 3376,
            column: 38
          },
          end: {
            line: 3380,
            column: 18
          }
        },
        "1011": {
          start: {
            line: 3381,
            column: 16
          },
          end: {
            line: 3381,
            column: 42
          }
        },
        "1012": {
          start: {
            line: 3382,
            column: 16
          },
          end: {
            line: 3382,
            column: 69
          }
        },
        "1013": {
          start: {
            line: 3387,
            column: 31
          },
          end: {
            line: 3387,
            column: 86
          }
        },
        "1014": {
          start: {
            line: 3388,
            column: 12
          },
          end: {
            line: 3388,
            column: 54
          }
        },
        "1015": {
          start: {
            line: 3389,
            column: 12
          },
          end: {
            line: 3389,
            column: 55
          }
        },
        "1016": {
          start: {
            line: 3393,
            column: 12
          },
          end: {
            line: 3393,
            column: 78
          }
        },
        "1017": {
          start: {
            line: 3394,
            column: 12
          },
          end: {
            line: 3394,
            column: 76
          }
        },
        "1018": {
          start: {
            line: 3396,
            column: 28
          },
          end: {
            line: 3396,
            column: 80
          }
        },
        "1019": {
          start: {
            line: 3397,
            column: 12
          },
          end: {
            line: 3397,
            column: 36
          }
        },
        "1020": {
          start: {
            line: 3401,
            column: 29
          },
          end: {
            line: 3401,
            column: 83
          }
        },
        "1021": {
          start: {
            line: 3402,
            column: 16
          },
          end: {
            line: 3402,
            column: 54
          }
        },
        "1022": {
          start: {
            line: 3403,
            column: 16
          },
          end: {
            line: 3403,
            column: 53
          }
        },
        "1023": {
          start: {
            line: 3404,
            column: 16
          },
          end: {
            line: 3404,
            column: 35
          }
        },
        "1024": {
          start: {
            line: 3406,
            column: 16
          },
          end: {
            line: 3406,
            column: 39
          }
        },
        "1025": {
          start: {
            line: 3407,
            column: 16
          },
          end: {
            line: 3407,
            column: 38
          }
        },
        "1026": {
          start: {
            line: 3410,
            column: 29
          },
          end: {
            line: 3410,
            column: 72
          }
        },
        "1027": {
          start: {
            line: 3411,
            column: 16
          },
          end: {
            line: 3411,
            column: 48
          }
        },
        "1028": {
          start: {
            line: 3413,
            column: 16
          },
          end: {
            line: 3419,
            column: 19
          }
        },
        "1029": {
          start: {
            line: 3415,
            column: 20
          },
          end: {
            line: 3417,
            column: 21
          }
        },
        "1030": {
          start: {
            line: 3416,
            column: 24
          },
          end: {
            line: 3416,
            column: 56
          }
        },
        "1031": {
          start: {
            line: 3418,
            column: 20
          },
          end: {
            line: 3418,
            column: 41
          }
        },
        "1032": {
          start: {
            line: 3421,
            column: 16
          },
          end: {
            line: 3421,
            column: 30
          }
        },
        "1033": {
          start: {
            line: 3423,
            column: 12
          },
          end: {
            line: 3423,
            column: 59
          }
        },
        "1034": {
          start: {
            line: 3424,
            column: 12
          },
          end: {
            line: 3424,
            column: 51
          }
        },
        "1035": {
          start: {
            line: 3425,
            column: 12
          },
          end: {
            line: 3425,
            column: 53
          }
        },
        "1036": {
          start: {
            line: 3426,
            column: 12
          },
          end: {
            line: 3426,
            column: 64
          }
        },
        "1037": {
          start: {
            line: 3428,
            column: 12
          },
          end: {
            line: 3428,
            column: 69
          }
        },
        "1038": {
          start: {
            line: 3435,
            column: 12
          },
          end: {
            line: 3435,
            column: 64
          }
        },
        "1039": {
          start: {
            line: 3436,
            column: 12
          },
          end: {
            line: 3436,
            column: 56
          }
        },
        "1040": {
          start: {
            line: 3438,
            column: 12
          },
          end: {
            line: 3438,
            column: 61
          }
        },
        "1041": {
          start: {
            line: 3439,
            column: 12
          },
          end: {
            line: 3439,
            column: 48
          }
        },
        "1042": {
          start: {
            line: 3445,
            column: 8
          },
          end: {
            line: 3551,
            column: 9
          }
        },
        "1043": {
          start: {
            line: 3447,
            column: 27
          },
          end: {
            line: 3447,
            column: 44
          }
        },
        "1044": {
          start: {
            line: 3448,
            column: 33
          },
          end: {
            line: 3448,
            column: 51
          }
        },
        "1045": {
          start: {
            line: 3450,
            column: 12
          },
          end: {
            line: 3450,
            column: 81
          }
        },
        "1046": {
          start: {
            line: 3452,
            column: 30
          },
          end: {
            line: 3452,
            column: 32
          }
        },
        "1047": {
          start: {
            line: 3455,
            column: 12
          },
          end: {
            line: 3491,
            column: 13
          }
        },
        "1048": {
          start: {
            line: 3456,
            column: 28
          },
          end: {
            line: 3456,
            column: 161
          }
        },
        "1049": {
          start: {
            line: 3458,
            column: 16
          },
          end: {
            line: 3490,
            column: 17
          }
        },
        "1050": {
          start: {
            line: 3459,
            column: 37
          },
          end: {
            line: 3459,
            column: 53
          }
        },
        "1051": {
          start: {
            line: 3460,
            column: 20
          },
          end: {
            line: 3464,
            column: 21
          }
        },
        "1052": {
          start: {
            line: 3461,
            column: 24
          },
          end: {
            line: 3461,
            column: 109
          }
        },
        "1053": {
          start: {
            line: 3462,
            column: 24
          },
          end: {
            line: 3462,
            column: 42
          }
        },
        "1054": {
          start: {
            line: 3463,
            column: 24
          },
          end: {
            line: 3463,
            column: 33
          }
        },
        "1055": {
          start: {
            line: 3466,
            column: 33
          },
          end: {
            line: 3466,
            column: 54
          }
        },
        "1056": {
          start: {
            line: 3467,
            column: 35
          },
          end: {
            line: 3467,
            column: 50
          }
        },
        "1057": {
          start: {
            line: 3468,
            column: 32
          },
          end: {
            line: 3468,
            column: 79
          }
        },
        "1058": {
          start: {
            line: 3471,
            column: 33
          },
          end: {
            line: 3471,
            column: 68
          }
        },
        "1059": {
          start: {
            line: 3472,
            column: 36
          },
          end: {
            line: 3472,
            column: 75
          }
        },
        "1060": {
          start: {
            line: 3473,
            column: 38
          },
          end: {
            line: 3473,
            column: 74
          }
        },
        "1061": {
          start: {
            line: 3475,
            column: 20
          },
          end: {
            line: 3486,
            column: 21
          }
        },
        "1062": {
          start: {
            line: 3476,
            column: 44
          },
          end: {
            line: 3476,
            column: 61
          }
        },
        "1063": {
          start: {
            line: 3477,
            column: 49
          },
          end: {
            line: 3477,
            column: 184
          }
        },
        "1064": {
          start: {
            line: 3479,
            column: 24
          },
          end: {
            line: 3483,
            column: 25
          }
        },
        "1065": {
          start: {
            line: 3480,
            column: 28
          },
          end: {
            line: 3480,
            column: 77
          }
        },
        "1066": {
          start: {
            line: 3482,
            column: 28
          },
          end: {
            line: 3482,
            column: 46
          }
        },
        "1067": {
          start: {
            line: 3485,
            column: 24
          },
          end: {
            line: 3485,
            column: 42
          }
        },
        "1068": {
          start: {
            line: 3488,
            column: 20
          },
          end: {
            line: 3488,
            column: 90
          }
        },
        "1069": {
          start: {
            line: 3489,
            column: 20
          },
          end: {
            line: 3489,
            column: 38
          }
        },
        "1070": {
          start: {
            line: 3494,
            column: 28
          },
          end: {
            line: 3544,
            column: 13
          }
        },
        "1071": {
          start: {
            line: 3533,
            column: 28
          },
          end: {
            line: 3533,
            column: 44
          }
        },
        "1072": {
          start: {
            line: 3546,
            column: 12
          },
          end: {
            line: 3546,
            column: 49
          }
        },
        "1073": {
          start: {
            line: 3547,
            column: 35
          },
          end: {
            line: 3547,
            column: 96
          }
        },
        "1074": {
          start: {
            line: 3548,
            column: 12
          },
          end: {
            line: 3548,
            column: 36
          }
        },
        "1075": {
          start: {
            line: 3550,
            column: 12
          },
          end: {
            line: 3550,
            column: 62
          }
        },
        "1076": {
          start: {
            line: 3555,
            column: 8
          },
          end: {
            line: 3702,
            column: 11
          }
        },
        "1077": {
          start: {
            line: 3556,
            column: 22
          },
          end: {
            line: 3556,
            column: 32
          }
        },
        "1078": {
          start: {
            line: 3557,
            column: 29
          },
          end: {
            line: 3557,
            column: 45
          }
        },
        "1079": {
          start: {
            line: 3560,
            column: 26
          },
          end: {
            line: 3560,
            column: 76
          }
        },
        "1080": {
          start: {
            line: 3561,
            column: 24
          },
          end: {
            line: 3561,
            column: 70
          }
        },
        "1081": {
          start: {
            line: 3563,
            column: 25
          },
          end: {
            line: 3563,
            column: 154
          }
        },
        "1082": {
          start: {
            line: 3564,
            column: 23
          },
          end: {
            line: 3564,
            column: 146
          }
        },
        "1083": {
          start: {
            line: 3565,
            column: 30
          },
          end: {
            line: 3565,
            column: 32
          }
        },
        "1084": {
          start: {
            line: 3570,
            column: 35
          },
          end: {
            line: 3570,
            column: 169
          }
        },
        "1085": {
          start: {
            line: 3571,
            column: 16
          },
          end: {
            line: 3571,
            column: 40
          }
        },
        "1086": {
          start: {
            line: 3572,
            column: 16
          },
          end: {
            line: 3618,
            column: 17
          }
        },
        "1087": {
          start: {
            line: 3573,
            column: 37
          },
          end: {
            line: 3573,
            column: 60
          }
        },
        "1088": {
          start: {
            line: 3574,
            column: 20
          },
          end: {
            line: 3574,
            column: 42
          }
        },
        "1089": {
          start: {
            line: 3576,
            column: 29
          },
          end: {
            line: 3576,
            column: 50
          }
        },
        "1090": {
          start: {
            line: 3579,
            column: 35
          },
          end: {
            line: 3579,
            column: 50
          }
        },
        "1091": {
          start: {
            line: 3580,
            column: 35
          },
          end: {
            line: 3580,
            column: 75
          }
        },
        "1092": {
          start: {
            line: 3581,
            column: 33
          },
          end: {
            line: 3581,
            column: 67
          }
        },
        "1093": {
          start: {
            line: 3583,
            column: 20
          },
          end: {
            line: 3615,
            column: 21
          }
        },
        "1094": {
          start: {
            line: 3584,
            column: 36
          },
          end: {
            line: 3584,
            column: 43
          }
        },
        "1095": {
          start: {
            line: 3585,
            column: 40
          },
          end: {
            line: 3585,
            column: 78
          }
        },
        "1096": {
          start: {
            line: 3586,
            column: 37
          },
          end: {
            line: 3586,
            column: 72
          }
        },
        "1097": {
          start: {
            line: 3588,
            column: 24
          },
          end: {
            line: 3614,
            column: 25
          }
        },
        "1098": {
          start: {
            line: 3589,
            column: 45
          },
          end: {
            line: 3589,
            column: 72
          }
        },
        "1099": {
          start: {
            line: 3590,
            column: 46
          },
          end: {
            line: 3590,
            column: 70
          }
        },
        "1100": {
          start: {
            line: 3592,
            column: 28
          },
          end: {
            line: 3613,
            column: 29
          }
        },
        "1101": {
          start: {
            line: 3593,
            column: 46
          },
          end: {
            line: 3593,
            column: 78
          }
        },
        "1102": {
          start: {
            line: 3594,
            column: 45
          },
          end: {
            line: 3594,
            column: 63
          }
        },
        "1103": {
          start: {
            line: 3595,
            column: 54
          },
          end: {
            line: 3598,
            column: 34
          }
        },
        "1104": {
          start: {
            line: 3599,
            column: 48
          },
          end: {
            line: 3599,
            column: 67
          }
        },
        "1105": {
          start: {
            line: 3601,
            column: 54
          },
          end: {
            line: 3601,
            column: 118
          }
        },
        "1106": {
          start: {
            line: 3601,
            column: 80
          },
          end: {
            line: 3601,
            column: 117
          }
        },
        "1107": {
          start: {
            line: 3603,
            column: 32
          },
          end: {
            line: 3612,
            column: 33
          }
        },
        "1108": {
          start: {
            line: 3605,
            column: 36
          },
          end: {
            line: 3605,
            column: 76
          }
        },
        "1109": {
          start: {
            line: 3608,
            column: 36
          },
          end: {
            line: 3611,
            column: 39
          }
        },
        "1110": {
          start: {
            line: 3617,
            column: 20
          },
          end: {
            line: 3617,
            column: 62
          }
        },
        "1111": {
          start: {
            line: 3622,
            column: 12
          },
          end: {
            line: 3622,
            column: 49
          }
        },
        "1112": {
          start: {
            line: 3626,
            column: 12
          },
          end: {
            line: 3626,
            column: 72
          }
        },
        "1113": {
          start: {
            line: 3627,
            column: 12
          },
          end: {
            line: 3627,
            column: 41
          }
        },
        "1114": {
          start: {
            line: 3630,
            column: 12
          },
          end: {
            line: 3630,
            column: 42
          }
        },
        "1115": {
          start: {
            line: 3631,
            column: 12
          },
          end: {
            line: 3631,
            column: 41
          }
        },
        "1116": {
          start: {
            line: 3632,
            column: 12
          },
          end: {
            line: 3644,
            column: 15
          }
        },
        "1117": {
          start: {
            line: 3633,
            column: 16
          },
          end: {
            line: 3633,
            column: 58
          }
        },
        "1118": {
          start: {
            line: 3634,
            column: 16
          },
          end: {
            line: 3634,
            column: 67
          }
        },
        "1119": {
          start: {
            line: 3637,
            column: 38
          },
          end: {
            line: 3641,
            column: 18
          }
        },
        "1120": {
          start: {
            line: 3642,
            column: 16
          },
          end: {
            line: 3642,
            column: 42
          }
        },
        "1121": {
          start: {
            line: 3643,
            column: 16
          },
          end: {
            line: 3643,
            column: 69
          }
        },
        "1122": {
          start: {
            line: 3648,
            column: 31
          },
          end: {
            line: 3648,
            column: 82
          }
        },
        "1123": {
          start: {
            line: 3649,
            column: 12
          },
          end: {
            line: 3649,
            column: 54
          }
        },
        "1124": {
          start: {
            line: 3650,
            column: 12
          },
          end: {
            line: 3650,
            column: 55
          }
        },
        "1125": {
          start: {
            line: 3654,
            column: 12
          },
          end: {
            line: 3654,
            column: 78
          }
        },
        "1126": {
          start: {
            line: 3655,
            column: 12
          },
          end: {
            line: 3655,
            column: 76
          }
        },
        "1127": {
          start: {
            line: 3657,
            column: 28
          },
          end: {
            line: 3657,
            column: 76
          }
        },
        "1128": {
          start: {
            line: 3658,
            column: 12
          },
          end: {
            line: 3658,
            column: 36
          }
        },
        "1129": {
          start: {
            line: 3662,
            column: 29
          },
          end: {
            line: 3662,
            column: 79
          }
        },
        "1130": {
          start: {
            line: 3663,
            column: 16
          },
          end: {
            line: 3663,
            column: 54
          }
        },
        "1131": {
          start: {
            line: 3664,
            column: 16
          },
          end: {
            line: 3664,
            column: 53
          }
        },
        "1132": {
          start: {
            line: 3665,
            column: 16
          },
          end: {
            line: 3665,
            column: 35
          }
        },
        "1133": {
          start: {
            line: 3666,
            column: 16
          },
          end: {
            line: 3666,
            column: 39
          }
        },
        "1134": {
          start: {
            line: 3667,
            column: 16
          },
          end: {
            line: 3667,
            column: 39
          }
        },
        "1135": {
          start: {
            line: 3668,
            column: 16
          },
          end: {
            line: 3668,
            column: 38
          }
        },
        "1136": {
          start: {
            line: 3671,
            column: 29
          },
          end: {
            line: 3671,
            column: 72
          }
        },
        "1137": {
          start: {
            line: 3672,
            column: 16
          },
          end: {
            line: 3672,
            column: 48
          }
        },
        "1138": {
          start: {
            line: 3674,
            column: 16
          },
          end: {
            line: 3680,
            column: 19
          }
        },
        "1139": {
          start: {
            line: 3676,
            column: 20
          },
          end: {
            line: 3678,
            column: 21
          }
        },
        "1140": {
          start: {
            line: 3677,
            column: 24
          },
          end: {
            line: 3677,
            column: 56
          }
        },
        "1141": {
          start: {
            line: 3679,
            column: 20
          },
          end: {
            line: 3679,
            column: 41
          }
        },
        "1142": {
          start: {
            line: 3682,
            column: 16
          },
          end: {
            line: 3682,
            column: 30
          }
        },
        "1143": {
          start: {
            line: 3684,
            column: 12
          },
          end: {
            line: 3684,
            column: 55
          }
        },
        "1144": {
          start: {
            line: 3685,
            column: 12
          },
          end: {
            line: 3685,
            column: 47
          }
        },
        "1145": {
          start: {
            line: 3686,
            column: 12
          },
          end: {
            line: 3686,
            column: 49
          }
        },
        "1146": {
          start: {
            line: 3687,
            column: 12
          },
          end: {
            line: 3687,
            column: 60
          }
        },
        "1147": {
          start: {
            line: 3689,
            column: 12
          },
          end: {
            line: 3689,
            column: 84
          }
        },
        "1148": {
          start: {
            line: 3696,
            column: 12
          },
          end: {
            line: 3696,
            column: 60
          }
        },
        "1149": {
          start: {
            line: 3697,
            column: 12
          },
          end: {
            line: 3697,
            column: 52
          }
        },
        "1150": {
          start: {
            line: 3699,
            column: 12
          },
          end: {
            line: 3699,
            column: 57
          }
        },
        "1151": {
          start: {
            line: 3700,
            column: 12
          },
          end: {
            line: 3700,
            column: 44
          }
        },
        "1152": {
          start: {
            line: 3705,
            column: 4
          },
          end: {
            line: 3707,
            column: 7
          }
        },
        "1153": {
          start: {
            line: 3706,
            column: 8
          },
          end: {
            line: 3706,
            column: 40
          }
        },
        "1154": {
          start: {
            line: 3708,
            column: 4
          },
          end: {
            line: 3711,
            column: 7
          }
        },
        "1155": {
          start: {
            line: 3709,
            column: 8
          },
          end: {
            line: 3709,
            column: 35
          }
        },
        "1156": {
          start: {
            line: 3710,
            column: 8
          },
          end: {
            line: 3710,
            column: 38
          }
        },
        "1157": {
          start: {
            line: 3712,
            column: 4
          },
          end: {
            line: 3715,
            column: 7
          }
        },
        "1158": {
          start: {
            line: 3713,
            column: 8
          },
          end: {
            line: 3713,
            column: 35
          }
        },
        "1159": {
          start: {
            line: 3714,
            column: 8
          },
          end: {
            line: 3714,
            column: 53
          }
        },
        "1160": {
          start: {
            line: 3716,
            column: 4
          },
          end: {
            line: 3719,
            column: 7
          }
        },
        "1161": {
          start: {
            line: 3717,
            column: 8
          },
          end: {
            line: 3717,
            column: 35
          }
        },
        "1162": {
          start: {
            line: 3718,
            column: 8
          },
          end: {
            line: 3718,
            column: 39
          }
        },
        "1163": {
          start: {
            line: 3728,
            column: 4
          },
          end: {
            line: 3737,
            column: 5
          }
        },
        "1164": {
          start: {
            line: 3729,
            column: 6
          },
          end: {
            line: 3734,
            column: 7
          }
        },
        "1165": {
          start: {
            line: 3730,
            column: 8
          },
          end: {
            line: 3730,
            column: 28
          }
        },
        "1166": {
          start: {
            line: 3733,
            column: 8
          },
          end: {
            line: 3733,
            column: 28
          }
        },
        "1167": {
          start: {
            line: 3736,
            column: 8
          },
          end: {
            line: 3736,
            column: 43
          }
        },
        "1168": {
          start: {
            line: 3740,
            column: 4
          },
          end: {
            line: 3740,
            column: 29
          }
        },
        "1169": {
          start: {
            line: 3744,
            column: 16
          },
          end: {
            line: 3744,
            column: 62
          }
        },
        "1170": {
          start: {
            line: 3748,
            column: 21
          },
          end: {
            line: 3748,
            column: 41
          }
        },
        "1171": {
          start: {
            line: 3749,
            column: 17
          },
          end: {
            line: 3749,
            column: 38
          }
        },
        "1172": {
          start: {
            line: 3752,
            column: 19
          },
          end: {
            line: 3752,
            column: 34
          }
        },
        "1173": {
          start: {
            line: 3753,
            column: 19
          },
          end: {
            line: 3753,
            column: 59
          }
        },
        "1174": {
          start: {
            line: 3756,
            column: 23
          },
          end: {
            line: 3756,
            column: 63
          }
        },
        "1175": {
          start: {
            line: 3757,
            column: 21
          },
          end: {
            line: 3757,
            column: 74
          }
        },
        "1176": {
          start: {
            line: 3758,
            column: 19
          },
          end: {
            line: 3758,
            column: 22
          }
        },
        "1177": {
          start: {
            line: 3759,
            column: 28
          },
          end: {
            line: 3759,
            column: 77
          }
        },
        "1178": {
          start: {
            line: 3760,
            column: 27
          },
          end: {
            line: 3760,
            column: 54
          }
        },
        "1179": {
          start: {
            line: 3841,
            column: 19
          },
          end: {
            line: 3913,
            column: 9
          }
        },
        "1180": {
          start: {
            line: 3849,
            column: 43
          },
          end: {
            line: 3849,
            column: 97
          }
        },
        "1181": {
          start: {
            line: 3849,
            column: 88
          },
          end: {
            line: 3849,
            column: 93
          }
        },
        "1182": {
          start: {
            line: 3850,
            column: 49
          },
          end: {
            line: 3850,
            column: 129
          }
        },
        "1183": {
          start: {
            line: 3853,
            column: 24
          },
          end: {
            line: 3855,
            column: 25
          }
        },
        "1184": {
          start: {
            line: 3854,
            column: 28
          },
          end: {
            line: 3854,
            column: 93
          }
        },
        "1185": {
          start: {
            line: 3880,
            column: 51
          },
          end: {
            line: 3880,
            column: 100
          }
        },
        "1186": {
          start: {
            line: 3880,
            column: 91
          },
          end: {
            line: 3880,
            column: 96
          }
        },
        "1187": {
          start: {
            line: 3882,
            column: 32
          },
          end: {
            line: 3882,
            column: 89
          }
        },
        "1188": {
          start: {
            line: 3903,
            column: 20
          },
          end: {
            line: 3903,
            column: 38
          }
        },
        "1189": {
          start: {
            line: 3916,
            column: 8
          },
          end: {
            line: 3916,
            column: 82
          }
        },
        "1190": {
          start: {
            line: 3917,
            column: 8
          },
          end: {
            line: 3917,
            column: 27
          }
        },
        "1191": {
          start: {
            line: 3929,
            column: 4
          },
          end: {
            line: 3929,
            column: 19
          }
        },
        "1192": {
          start: {
            line: 3930,
            column: 4
          },
          end: {
            line: 3930,
            column: 80
          }
        },
        "1193": {
          start: {
            line: 3930,
            column: 38
          },
          end: {
            line: 3930,
            column: 72
          }
        },
        "1194": {
          start: {
            line: 3931,
            column: 4
          },
          end: {
            line: 3931,
            column: 49
          }
        },
        "1195": {
          start: {
            line: 3936,
            column: 4
          },
          end: {
            line: 3940,
            column: 5
          }
        },
        "1196": {
          start: {
            line: 3937,
            column: 8
          },
          end: {
            line: 3937,
            column: 37
          }
        },
        "1197": {
          start: {
            line: 3938,
            column: 8
          },
          end: {
            line: 3938,
            column: 29
          }
        },
        "1198": {
          start: {
            line: 3939,
            column: 8
          },
          end: {
            line: 3939,
            column: 53
          }
        },
        "1199": {
          start: {
            line: 3942,
            column: 0
          },
          end: {
            line: 3945,
            column: 5
          }
        },
        "1200": {
          start: {
            line: 3943,
            column: 4
          },
          end: {
            line: 3943,
            column: 27
          }
        },
        "1201": {
          start: {
            line: 3944,
            column: 4
          },
          end: {
            line: 3944,
            column: 20
          }
        },
        "1202": {
          start: {
            line: 3959,
            column: 8
          },
          end: {
            line: 3966,
            column: 9
          }
        },
        "1203": {
          start: {
            line: 3960,
            column: 12
          },
          end: {
            line: 3965,
            column: 13
          }
        },
        "1204": {
          start: {
            line: 3961,
            column: 16
          },
          end: {
            line: 3961,
            column: 37
          }
        },
        "1205": {
          start: {
            line: 3962,
            column: 16
          },
          end: {
            line: 3962,
            column: 37
          }
        },
        "1206": {
          start: {
            line: 3964,
            column: 16
          },
          end: {
            line: 3964,
            column: 36
          }
        },
        "1207": {
          start: {
            line: 3969,
            column: 23
          },
          end: {
            line: 3969,
            column: 73
          }
        },
        "1208": {
          start: {
            line: 3970,
            column: 22
          },
          end: {
            line: 3970,
            column: 24
          }
        },
        "1209": {
          start: {
            line: 3973,
            column: 8
          },
          end: {
            line: 3989,
            column: 9
          }
        },
        "1210": {
          start: {
            line: 3974,
            column: 12
          },
          end: {
            line: 3988,
            column: 13
          }
        },
        "1211": {
          start: {
            line: 3975,
            column: 33
          },
          end: {
            line: 3975,
            column: 97
          }
        },
        "1212": {
          start: {
            line: 3976,
            column: 16
          },
          end: {
            line: 3976,
            column: 56
          }
        },
        "1213": {
          start: {
            line: 3977,
            column: 29
          },
          end: {
            line: 3977,
            column: 50
          }
        },
        "1214": {
          start: {
            line: 3980,
            column: 31
          },
          end: {
            line: 3980,
            column: 46
          }
        },
        "1215": {
          start: {
            line: 3981,
            column: 31
          },
          end: {
            line: 3981,
            column: 78
          }
        },
        "1216": {
          start: {
            line: 3984,
            column: 28
          },
          end: {
            line: 3984,
            column: 118
          }
        },
        "1217": {
          start: {
            line: 3985,
            column: 16
          },
          end: {
            line: 3985,
            column: 34
          }
        },
        "1218": {
          start: {
            line: 3987,
            column: 16
          },
          end: {
            line: 3987,
            column: 74
          }
        },
        "1219": {
          start: {
            line: 3991,
            column: 22
          },
          end: {
            line: 4047,
            column: 9
          }
        },
        "1220": {
          start: {
            line: 4015,
            column: 32
          },
          end: {
            line: 4015,
            column: 53
          }
        },
        "1221": {
          start: {
            line: 4043,
            column: 20
          },
          end: {
            line: 4043,
            column: 38
          }
        },
        "1222": {
          start: {
            line: 4048,
            column: 8
          },
          end: {
            line: 4048,
            column: 93
          }
        },
        "1223": {
          start: {
            line: 4049,
            column: 8
          },
          end: {
            line: 4049,
            column: 34
          }
        },
        "1224": {
          start: {
            line: 4051,
            column: 23
          },
          end: {
            line: 4107,
            column: 9
          }
        },
        "1225": {
          start: {
            line: 4075,
            column: 32
          },
          end: {
            line: 4075,
            column: 53
          }
        },
        "1226": {
          start: {
            line: 4103,
            column: 20
          },
          end: {
            line: 4103,
            column: 38
          }
        },
        "1227": {
          start: {
            line: 4108,
            column: 8
          },
          end: {
            line: 4108,
            column: 90
          }
        },
        "1228": {
          start: {
            line: 4109,
            column: 8
          },
          end: {
            line: 4109,
            column: 34
          }
        },
        "1229": {
          start: {
            line: 4160,
            column: 0
          },
          end: {
            line: 4172,
            column: 3
          }
        },
        "1230": {
          start: {
            line: 4161,
            column: 4
          },
          end: {
            line: 4161,
            column: 37
          }
        },
        "1231": {
          start: {
            line: 4162,
            column: 4
          },
          end: {
            line: 4162,
            column: 29
          }
        },
        "1232": {
          start: {
            line: 4163,
            column: 4
          },
          end: {
            line: 4163,
            column: 24
          }
        },
        "1233": {
          start: {
            line: 4164,
            column: 4
          },
          end: {
            line: 4164,
            column: 27
          }
        },
        "1234": {
          start: {
            line: 4165,
            column: 4
          },
          end: {
            line: 4165,
            column: 24
          }
        },
        "1235": {
          start: {
            line: 4169,
            column: 4
          },
          end: {
            line: 4169,
            column: 22
          }
        },
        "1236": {
          start: {
            line: 4170,
            column: 4
          },
          end: {
            line: 4170,
            column: 33
          }
        },
        "1237": {
          start: {
            line: 4173,
            column: 0
          },
          end: {
            line: 4180,
            column: 3
          }
        },
        "1238": {
          start: {
            line: 4174,
            column: 4
          },
          end: {
            line: 4174,
            column: 37
          }
        },
        "1239": {
          start: {
            line: 4175,
            column: 4
          },
          end: {
            line: 4175,
            column: 29
          }
        },
        "1240": {
          start: {
            line: 4176,
            column: 4
          },
          end: {
            line: 4176,
            column: 24
          }
        },
        "1241": {
          start: {
            line: 4177,
            column: 4
          },
          end: {
            line: 4177,
            column: 27
          }
        },
        "1242": {
          start: {
            line: 4178,
            column: 4
          },
          end: {
            line: 4178,
            column: 24
          }
        },
        "1243": {
          start: {
            line: 4456,
            column: 4
          },
          end: {
            line: 4583,
            column: 11
          }
        },
        "1244": {
          start: {
            line: 4457,
            column: 35
          },
          end: {
            line: 4457,
            column: 80
          }
        },
        "1245": {
          start: {
            line: 4458,
            column: 33
          },
          end: {
            line: 4458,
            column: 76
          }
        },
        "1246": {
          start: {
            line: 4459,
            column: 29
          },
          end: {
            line: 4459,
            column: 82
          }
        },
        "1247": {
          start: {
            line: 4460,
            column: 4
          },
          end: {
            line: 4463,
            column: 5
          }
        },
        "1248": {
          start: {
            line: 4462,
            column: 8
          },
          end: {
            line: 4462,
            column: 15
          }
        },
        "1249": {
          start: {
            line: 4464,
            column: 30
          },
          end: {
            line: 4464,
            column: 32
          }
        },
        "1250": {
          start: {
            line: 4467,
            column: 31
          },
          end: {
            line: 4467,
            column: 181
          }
        },
        "1251": {
          start: {
            line: 4468,
            column: 12
          },
          end: {
            line: 4468,
            column: 36
          }
        },
        "1252": {
          start: {
            line: 4469,
            column: 12
          },
          end: {
            line: 4513,
            column: 13
          }
        },
        "1253": {
          start: {
            line: 4470,
            column: 33
          },
          end: {
            line: 4470,
            column: 56
          }
        },
        "1254": {
          start: {
            line: 4471,
            column: 16
          },
          end: {
            line: 4471,
            column: 38
          }
        },
        "1255": {
          start: {
            line: 4473,
            column: 29
          },
          end: {
            line: 4473,
            column: 50
          }
        },
        "1256": {
          start: {
            line: 4474,
            column: 31
          },
          end: {
            line: 4474,
            column: 46
          }
        },
        "1257": {
          start: {
            line: 4475,
            column: 31
          },
          end: {
            line: 4475,
            column: 71
          }
        },
        "1258": {
          start: {
            line: 4476,
            column: 29
          },
          end: {
            line: 4476,
            column: 63
          }
        },
        "1259": {
          start: {
            line: 4478,
            column: 16
          },
          end: {
            line: 4510,
            column: 17
          }
        },
        "1260": {
          start: {
            line: 4479,
            column: 32
          },
          end: {
            line: 4479,
            column: 39
          }
        },
        "1261": {
          start: {
            line: 4480,
            column: 36
          },
          end: {
            line: 4480,
            column: 74
          }
        },
        "1262": {
          start: {
            line: 4481,
            column: 33
          },
          end: {
            line: 4481,
            column: 68
          }
        },
        "1263": {
          start: {
            line: 4483,
            column: 20
          },
          end: {
            line: 4509,
            column: 21
          }
        },
        "1264": {
          start: {
            line: 4484,
            column: 41
          },
          end: {
            line: 4484,
            column: 68
          }
        },
        "1265": {
          start: {
            line: 4485,
            column: 42
          },
          end: {
            line: 4485,
            column: 66
          }
        },
        "1266": {
          start: {
            line: 4487,
            column: 24
          },
          end: {
            line: 4508,
            column: 25
          }
        },
        "1267": {
          start: {
            line: 4488,
            column: 42
          },
          end: {
            line: 4488,
            column: 74
          }
        },
        "1268": {
          start: {
            line: 4489,
            column: 41
          },
          end: {
            line: 4489,
            column: 59
          }
        },
        "1269": {
          start: {
            line: 4490,
            column: 50
          },
          end: {
            line: 4493,
            column: 30
          }
        },
        "1270": {
          start: {
            line: 4494,
            column: 44
          },
          end: {
            line: 4494,
            column: 63
          }
        },
        "1271": {
          start: {
            line: 4496,
            column: 50
          },
          end: {
            line: 4496,
            column: 114
          }
        },
        "1272": {
          start: {
            line: 4496,
            column: 76
          },
          end: {
            line: 4496,
            column: 113
          }
        },
        "1273": {
          start: {
            line: 4498,
            column: 28
          },
          end: {
            line: 4507,
            column: 29
          }
        },
        "1274": {
          start: {
            line: 4500,
            column: 32
          },
          end: {
            line: 4500,
            column: 72
          }
        },
        "1275": {
          start: {
            line: 4503,
            column: 32
          },
          end: {
            line: 4506,
            column: 35
          }
        },
        "1276": {
          start: {
            line: 4512,
            column: 16
          },
          end: {
            line: 4512,
            column: 63
          }
        },
        "1277": {
          start: {
            line: 4516,
            column: 12
          },
          end: {
            line: 4516,
            column: 49
          }
        },
        "1278": {
          start: {
            line: 4517,
            column: 12
          },
          end: {
            line: 4517,
            column: 71
          }
        },
        "1279": {
          start: {
            line: 4518,
            column: 12
          },
          end: {
            line: 4518,
            column: 43
          }
        },
        "1280": {
          start: {
            line: 4520,
            column: 12
          },
          end: {
            line: 4520,
            column: 59
          }
        },
        "1281": {
          start: {
            line: 4521,
            column: 12
          },
          end: {
            line: 4521,
            column: 51
          }
        },
        "1282": {
          start: {
            line: 4523,
            column: 12
          },
          end: {
            line: 4523,
            column: 56
          }
        },
        "1283": {
          start: {
            line: 4524,
            column: 12
          },
          end: {
            line: 4524,
            column: 40
          }
        },
        "1284": {
          start: {
            line: 4527,
            column: 12
          },
          end: {
            line: 4527,
            column: 41
          }
        },
        "1285": {
          start: {
            line: 4528,
            column: 12
          },
          end: {
            line: 4536,
            column: 15
          }
        },
        "1286": {
          start: {
            line: 4529,
            column: 16
          },
          end: {
            line: 4529,
            column: 58
          }
        },
        "1287": {
          start: {
            line: 4531,
            column: 38
          },
          end: {
            line: 4534,
            column: 18
          }
        },
        "1288": {
          start: {
            line: 4535,
            column: 16
          },
          end: {
            line: 4535,
            column: 42
          }
        },
        "1289": {
          start: {
            line: 4539,
            column: 31
          },
          end: {
            line: 4539,
            column: 81
          }
        },
        "1290": {
          start: {
            line: 4540,
            column: 12
          },
          end: {
            line: 4540,
            column: 54
          }
        },
        "1291": {
          start: {
            line: 4541,
            column: 12
          },
          end: {
            line: 4541,
            column: 55
          }
        },
        "1292": {
          start: {
            line: 4542,
            column: 12
          },
          end: {
            line: 4542,
            column: 78
          }
        },
        "1293": {
          start: {
            line: 4543,
            column: 12
          },
          end: {
            line: 4543,
            column: 76
          }
        },
        "1294": {
          start: {
            line: 4545,
            column: 28
          },
          end: {
            line: 4545,
            column: 75
          }
        },
        "1295": {
          start: {
            line: 4546,
            column: 12
          },
          end: {
            line: 4546,
            column: 36
          }
        },
        "1296": {
          start: {
            line: 4550,
            column: 29
          },
          end: {
            line: 4550,
            column: 80
          }
        },
        "1297": {
          start: {
            line: 4551,
            column: 16
          },
          end: {
            line: 4551,
            column: 54
          }
        },
        "1298": {
          start: {
            line: 4552,
            column: 16
          },
          end: {
            line: 4552,
            column: 53
          }
        },
        "1299": {
          start: {
            line: 4553,
            column: 16
          },
          end: {
            line: 4553,
            column: 35
          }
        },
        "1300": {
          start: {
            line: 4554,
            column: 16
          },
          end: {
            line: 4554,
            column: 39
          }
        },
        "1301": {
          start: {
            line: 4555,
            column: 16
          },
          end: {
            line: 4555,
            column: 39
          }
        },
        "1302": {
          start: {
            line: 4556,
            column: 16
          },
          end: {
            line: 4556,
            column: 68
          }
        },
        "1303": {
          start: {
            line: 4557,
            column: 16
          },
          end: {
            line: 4557,
            column: 70
          }
        },
        "1304": {
          start: {
            line: 4558,
            column: 16
          },
          end: {
            line: 4558,
            column: 87
          }
        },
        "1305": {
          start: {
            line: 4561,
            column: 29
          },
          end: {
            line: 4561,
            column: 72
          }
        },
        "1306": {
          start: {
            line: 4563,
            column: 16
          },
          end: {
            line: 4569,
            column: 19
          }
        },
        "1307": {
          start: {
            line: 4565,
            column: 20
          },
          end: {
            line: 4567,
            column: 21
          }
        },
        "1308": {
          start: {
            line: 4566,
            column: 24
          },
          end: {
            line: 4566,
            column: 56
          }
        },
        "1309": {
          start: {
            line: 4568,
            column: 20
          },
          end: {
            line: 4568,
            column: 41
          }
        },
        "1310": {
          start: {
            line: 4571,
            column: 16
          },
          end: {
            line: 4571,
            column: 30
          }
        },
        "1311": {
          start: {
            line: 4575,
            column: 12
          },
          end: {
            line: 4575,
            column: 54
          }
        },
        "1312": {
          start: {
            line: 4576,
            column: 12
          },
          end: {
            line: 4576,
            column: 46
          }
        },
        "1313": {
          start: {
            line: 4577,
            column: 12
          },
          end: {
            line: 4577,
            column: 48
          }
        },
        "1314": {
          start: {
            line: 4578,
            column: 12
          },
          end: {
            line: 4578,
            column: 59
          }
        },
        "1315": {
          start: {
            line: 4579,
            column: 12
          },
          end: {
            line: 4579,
            column: 52
          }
        },
        "1316": {
          start: {
            line: 4588,
            column: 8
          },
          end: {
            line: 4698,
            column: 9
          }
        },
        "1317": {
          start: {
            line: 4591,
            column: 27
          },
          end: {
            line: 4591,
            column: 44
          }
        },
        "1318": {
          start: {
            line: 4592,
            column: 33
          },
          end: {
            line: 4592,
            column: 51
          }
        },
        "1319": {
          start: {
            line: 4594,
            column: 12
          },
          end: {
            line: 4594,
            column: 81
          }
        },
        "1320": {
          start: {
            line: 4596,
            column: 30
          },
          end: {
            line: 4596,
            column: 32
          }
        },
        "1321": {
          start: {
            line: 4599,
            column: 12
          },
          end: {
            line: 4635,
            column: 13
          }
        },
        "1322": {
          start: {
            line: 4600,
            column: 28
          },
          end: {
            line: 4600,
            column: 141
          }
        },
        "1323": {
          start: {
            line: 4602,
            column: 16
          },
          end: {
            line: 4634,
            column: 17
          }
        },
        "1324": {
          start: {
            line: 4603,
            column: 37
          },
          end: {
            line: 4603,
            column: 53
          }
        },
        "1325": {
          start: {
            line: 4604,
            column: 20
          },
          end: {
            line: 4608,
            column: 21
          }
        },
        "1326": {
          start: {
            line: 4605,
            column: 24
          },
          end: {
            line: 4605,
            column: 109
          }
        },
        "1327": {
          start: {
            line: 4606,
            column: 24
          },
          end: {
            line: 4606,
            column: 42
          }
        },
        "1328": {
          start: {
            line: 4607,
            column: 24
          },
          end: {
            line: 4607,
            column: 33
          }
        },
        "1329": {
          start: {
            line: 4610,
            column: 33
          },
          end: {
            line: 4610,
            column: 54
          }
        },
        "1330": {
          start: {
            line: 4611,
            column: 35
          },
          end: {
            line: 4611,
            column: 50
          }
        },
        "1331": {
          start: {
            line: 4612,
            column: 32
          },
          end: {
            line: 4612,
            column: 79
          }
        },
        "1332": {
          start: {
            line: 4615,
            column: 33
          },
          end: {
            line: 4615,
            column: 68
          }
        },
        "1333": {
          start: {
            line: 4616,
            column: 36
          },
          end: {
            line: 4616,
            column: 75
          }
        },
        "1334": {
          start: {
            line: 4617,
            column: 38
          },
          end: {
            line: 4617,
            column: 74
          }
        },
        "1335": {
          start: {
            line: 4619,
            column: 20
          },
          end: {
            line: 4630,
            column: 21
          }
        },
        "1336": {
          start: {
            line: 4620,
            column: 44
          },
          end: {
            line: 4620,
            column: 61
          }
        },
        "1337": {
          start: {
            line: 4621,
            column: 49
          },
          end: {
            line: 4621,
            column: 184
          }
        },
        "1338": {
          start: {
            line: 4623,
            column: 24
          },
          end: {
            line: 4627,
            column: 25
          }
        },
        "1339": {
          start: {
            line: 4624,
            column: 28
          },
          end: {
            line: 4624,
            column: 77
          }
        },
        "1340": {
          start: {
            line: 4626,
            column: 28
          },
          end: {
            line: 4626,
            column: 46
          }
        },
        "1341": {
          start: {
            line: 4629,
            column: 24
          },
          end: {
            line: 4629,
            column: 42
          }
        },
        "1342": {
          start: {
            line: 4632,
            column: 20
          },
          end: {
            line: 4632,
            column: 90
          }
        },
        "1343": {
          start: {
            line: 4633,
            column: 20
          },
          end: {
            line: 4633,
            column: 38
          }
        },
        "1344": {
          start: {
            line: 4636,
            column: 34
          },
          end: {
            line: 4636,
            column: 77
          }
        },
        "1345": {
          start: {
            line: 4637,
            column: 12
          },
          end: {
            line: 4639,
            column: 13
          }
        },
        "1346": {
          start: {
            line: 4638,
            column: 16
          },
          end: {
            line: 4638,
            column: 39
          }
        },
        "1347": {
          start: {
            line: 4641,
            column: 28
          },
          end: {
            line: 4691,
            column: 13
          }
        },
        "1348": {
          start: {
            line: 4680,
            column: 28
          },
          end: {
            line: 4680,
            column: 44
          }
        },
        "1349": {
          start: {
            line: 4693,
            column: 12
          },
          end: {
            line: 4693,
            column: 49
          }
        },
        "1350": {
          start: {
            line: 4694,
            column: 12
          },
          end: {
            line: 4694,
            column: 86
          }
        },
        "1351": {
          start: {
            line: 4695,
            column: 12
          },
          end: {
            line: 4695,
            column: 31
          }
        },
        "1352": {
          start: {
            line: 4697,
            column: 12
          },
          end: {
            line: 4697,
            column: 62
          }
        },
        "1353": {
          start: {
            line: 4701,
            column: 8
          },
          end: {
            line: 4848,
            column: 11
          }
        },
        "1354": {
          start: {
            line: 4702,
            column: 22
          },
          end: {
            line: 4702,
            column: 32
          }
        },
        "1355": {
          start: {
            line: 4703,
            column: 29
          },
          end: {
            line: 4703,
            column: 45
          }
        },
        "1356": {
          start: {
            line: 4706,
            column: 26
          },
          end: {
            line: 4706,
            column: 76
          }
        },
        "1357": {
          start: {
            line: 4707,
            column: 24
          },
          end: {
            line: 4707,
            column: 70
          }
        },
        "1358": {
          start: {
            line: 4709,
            column: 25
          },
          end: {
            line: 4709,
            column: 154
          }
        },
        "1359": {
          start: {
            line: 4710,
            column: 23
          },
          end: {
            line: 4710,
            column: 146
          }
        },
        "1360": {
          start: {
            line: 4711,
            column: 30
          },
          end: {
            line: 4711,
            column: 32
          }
        },
        "1361": {
          start: {
            line: 4716,
            column: 35
          },
          end: {
            line: 4716,
            column: 165
          }
        },
        "1362": {
          start: {
            line: 4717,
            column: 16
          },
          end: {
            line: 4717,
            column: 40
          }
        },
        "1363": {
          start: {
            line: 4718,
            column: 16
          },
          end: {
            line: 4764,
            column: 17
          }
        },
        "1364": {
          start: {
            line: 4719,
            column: 37
          },
          end: {
            line: 4719,
            column: 60
          }
        },
        "1365": {
          start: {
            line: 4720,
            column: 20
          },
          end: {
            line: 4720,
            column: 42
          }
        },
        "1366": {
          start: {
            line: 4722,
            column: 29
          },
          end: {
            line: 4722,
            column: 50
          }
        },
        "1367": {
          start: {
            line: 4725,
            column: 35
          },
          end: {
            line: 4725,
            column: 50
          }
        },
        "1368": {
          start: {
            line: 4726,
            column: 35
          },
          end: {
            line: 4726,
            column: 75
          }
        },
        "1369": {
          start: {
            line: 4727,
            column: 33
          },
          end: {
            line: 4727,
            column: 67
          }
        },
        "1370": {
          start: {
            line: 4729,
            column: 20
          },
          end: {
            line: 4761,
            column: 21
          }
        },
        "1371": {
          start: {
            line: 4730,
            column: 36
          },
          end: {
            line: 4730,
            column: 43
          }
        },
        "1372": {
          start: {
            line: 4731,
            column: 40
          },
          end: {
            line: 4731,
            column: 78
          }
        },
        "1373": {
          start: {
            line: 4732,
            column: 37
          },
          end: {
            line: 4732,
            column: 72
          }
        },
        "1374": {
          start: {
            line: 4734,
            column: 24
          },
          end: {
            line: 4760,
            column: 25
          }
        },
        "1375": {
          start: {
            line: 4735,
            column: 45
          },
          end: {
            line: 4735,
            column: 72
          }
        },
        "1376": {
          start: {
            line: 4736,
            column: 46
          },
          end: {
            line: 4736,
            column: 70
          }
        },
        "1377": {
          start: {
            line: 4738,
            column: 28
          },
          end: {
            line: 4759,
            column: 29
          }
        },
        "1378": {
          start: {
            line: 4739,
            column: 46
          },
          end: {
            line: 4739,
            column: 78
          }
        },
        "1379": {
          start: {
            line: 4740,
            column: 45
          },
          end: {
            line: 4740,
            column: 63
          }
        },
        "1380": {
          start: {
            line: 4741,
            column: 54
          },
          end: {
            line: 4744,
            column: 34
          }
        },
        "1381": {
          start: {
            line: 4745,
            column: 48
          },
          end: {
            line: 4745,
            column: 67
          }
        },
        "1382": {
          start: {
            line: 4747,
            column: 54
          },
          end: {
            line: 4747,
            column: 118
          }
        },
        "1383": {
          start: {
            line: 4747,
            column: 80
          },
          end: {
            line: 4747,
            column: 117
          }
        },
        "1384": {
          start: {
            line: 4749,
            column: 32
          },
          end: {
            line: 4758,
            column: 33
          }
        },
        "1385": {
          start: {
            line: 4751,
            column: 36
          },
          end: {
            line: 4751,
            column: 76
          }
        },
        "1386": {
          start: {
            line: 4754,
            column: 36
          },
          end: {
            line: 4757,
            column: 39
          }
        },
        "1387": {
          start: {
            line: 4763,
            column: 20
          },
          end: {
            line: 4763,
            column: 62
          }
        },
        "1388": {
          start: {
            line: 4766,
            column: 0
          },
          end: {
            line: 4766,
            column: 48
          }
        },
        "1389": {
          start: {
            line: 4768,
            column: 12
          },
          end: {
            line: 4768,
            column: 49
          }
        },
        "1390": {
          start: {
            line: 4772,
            column: 12
          },
          end: {
            line: 4772,
            column: 71
          }
        },
        "1391": {
          start: {
            line: 4773,
            column: 12
          },
          end: {
            line: 4773,
            column: 40
          }
        },
        "1392": {
          start: {
            line: 4776,
            column: 12
          },
          end: {
            line: 4776,
            column: 41
          }
        },
        "1393": {
          start: {
            line: 4777,
            column: 12
          },
          end: {
            line: 4777,
            column: 40
          }
        },
        "1394": {
          start: {
            line: 4778,
            column: 12
          },
          end: {
            line: 4790,
            column: 15
          }
        },
        "1395": {
          start: {
            line: 4779,
            column: 16
          },
          end: {
            line: 4779,
            column: 58
          }
        },
        "1396": {
          start: {
            line: 4780,
            column: 16
          },
          end: {
            line: 4780,
            column: 67
          }
        },
        "1397": {
          start: {
            line: 4783,
            column: 38
          },
          end: {
            line: 4787,
            column: 18
          }
        },
        "1398": {
          start: {
            line: 4788,
            column: 16
          },
          end: {
            line: 4788,
            column: 42
          }
        },
        "1399": {
          start: {
            line: 4789,
            column: 16
          },
          end: {
            line: 4789,
            column: 69
          }
        },
        "1400": {
          start: {
            line: 4794,
            column: 31
          },
          end: {
            line: 4794,
            column: 81
          }
        },
        "1401": {
          start: {
            line: 4795,
            column: 12
          },
          end: {
            line: 4795,
            column: 54
          }
        },
        "1402": {
          start: {
            line: 4796,
            column: 12
          },
          end: {
            line: 4796,
            column: 55
          }
        },
        "1403": {
          start: {
            line: 4800,
            column: 12
          },
          end: {
            line: 4800,
            column: 78
          }
        },
        "1404": {
          start: {
            line: 4801,
            column: 12
          },
          end: {
            line: 4801,
            column: 76
          }
        },
        "1405": {
          start: {
            line: 4803,
            column: 28
          },
          end: {
            line: 4803,
            column: 75
          }
        },
        "1406": {
          start: {
            line: 4804,
            column: 12
          },
          end: {
            line: 4804,
            column: 36
          }
        },
        "1407": {
          start: {
            line: 4808,
            column: 29
          },
          end: {
            line: 4808,
            column: 78
          }
        },
        "1408": {
          start: {
            line: 4809,
            column: 16
          },
          end: {
            line: 4809,
            column: 54
          }
        },
        "1409": {
          start: {
            line: 4810,
            column: 16
          },
          end: {
            line: 4810,
            column: 53
          }
        },
        "1410": {
          start: {
            line: 4811,
            column: 16
          },
          end: {
            line: 4811,
            column: 35
          }
        },
        "1411": {
          start: {
            line: 4812,
            column: 16
          },
          end: {
            line: 4812,
            column: 39
          }
        },
        "1412": {
          start: {
            line: 4813,
            column: 16
          },
          end: {
            line: 4813,
            column: 39
          }
        },
        "1413": {
          start: {
            line: 4814,
            column: 16
          },
          end: {
            line: 4814,
            column: 38
          }
        },
        "1414": {
          start: {
            line: 4817,
            column: 29
          },
          end: {
            line: 4817,
            column: 72
          }
        },
        "1415": {
          start: {
            line: 4818,
            column: 16
          },
          end: {
            line: 4818,
            column: 60
          }
        },
        "1416": {
          start: {
            line: 4820,
            column: 16
          },
          end: {
            line: 4826,
            column: 19
          }
        },
        "1417": {
          start: {
            line: 4822,
            column: 20
          },
          end: {
            line: 4824,
            column: 21
          }
        },
        "1418": {
          start: {
            line: 4823,
            column: 24
          },
          end: {
            line: 4823,
            column: 56
          }
        },
        "1419": {
          start: {
            line: 4825,
            column: 20
          },
          end: {
            line: 4825,
            column: 41
          }
        },
        "1420": {
          start: {
            line: 4828,
            column: 16
          },
          end: {
            line: 4828,
            column: 30
          }
        },
        "1421": {
          start: {
            line: 4830,
            column: 12
          },
          end: {
            line: 4830,
            column: 54
          }
        },
        "1422": {
          start: {
            line: 4831,
            column: 12
          },
          end: {
            line: 4831,
            column: 46
          }
        },
        "1423": {
          start: {
            line: 4832,
            column: 12
          },
          end: {
            line: 4832,
            column: 48
          }
        },
        "1424": {
          start: {
            line: 4833,
            column: 12
          },
          end: {
            line: 4833,
            column: 59
          }
        },
        "1425": {
          start: {
            line: 4835,
            column: 12
          },
          end: {
            line: 4835,
            column: 67
          }
        },
        "1426": {
          start: {
            line: 4842,
            column: 12
          },
          end: {
            line: 4842,
            column: 59
          }
        },
        "1427": {
          start: {
            line: 4843,
            column: 12
          },
          end: {
            line: 4843,
            column: 51
          }
        },
        "1428": {
          start: {
            line: 4845,
            column: 12
          },
          end: {
            line: 4845,
            column: 56
          }
        },
        "1429": {
          start: {
            line: 4846,
            column: 12
          },
          end: {
            line: 4846,
            column: 43
          }
        },
        "1430": {
          start: {
            line: 4868,
            column: 0
          },
          end: {
            line: 4872,
            column: 7
          }
        },
        "1431": {
          start: {
            line: 4870,
            column: 8
          },
          end: {
            line: 4870,
            column: 23
          }
        },
        "1432": {
          start: {
            line: 4871,
            column: 8
          },
          end: {
            line: 4871,
            column: 49
          }
        },
        "1433": {
          start: {
            line: 4873,
            column: 4
          },
          end: {
            line: 4876,
            column: 7
          }
        },
        "1434": {
          start: {
            line: 4874,
            column: 8
          },
          end: {
            line: 4874,
            column: 29
          }
        },
        "1435": {
          start: {
            line: 4875,
            column: 8
          },
          end: {
            line: 4875,
            column: 84
          }
        },
        "1436": {
          start: {
            line: 4875,
            column: 42
          },
          end: {
            line: 4875,
            column: 76
          }
        },
        "1437": {
          start: {
            line: 4877,
            column: 4
          },
          end: {
            line: 4881,
            column: 7
          }
        },
        "1438": {
          start: {
            line: 4878,
            column: 8
          },
          end: {
            line: 4878,
            column: 29
          }
        },
        "1439": {
          start: {
            line: 4879,
            column: 8
          },
          end: {
            line: 4879,
            column: 23
          }
        },
        "1440": {
          start: {
            line: 4880,
            column: 8
          },
          end: {
            line: 4880,
            column: 54
          }
        },
        "1441": {
          start: {
            line: 4882,
            column: 4
          },
          end: {
            line: 4887,
            column: 7
          }
        },
        "1442": {
          start: {
            line: 4883,
            column: 8
          },
          end: {
            line: 4883,
            column: 29
          }
        },
        "1443": {
          start: {
            line: 4885,
            column: 8
          },
          end: {
            line: 4885,
            column: 23
          }
        },
        "1444": {
          start: {
            line: 4886,
            column: 8
          },
          end: {
            line: 4886,
            column: 46
          }
        },
        "1445": {
          start: {
            line: 4896,
            column: 8
          },
          end: {
            line: 4906,
            column: 9
          }
        },
        "1446": {
          start: {
            line: 4898,
            column: 12
          },
          end: {
            line: 4905,
            column: 13
          }
        },
        "1447": {
          start: {
            line: 4899,
            column: 16
          },
          end: {
            line: 4899,
            column: 61
          }
        },
        "1448": {
          start: {
            line: 4900,
            column: 16
          },
          end: {
            line: 4900,
            column: 35
          }
        },
        "1449": {
          start: {
            line: 4903,
            column: 16
          },
          end: {
            line: 4903,
            column: 68
          }
        },
        "1450": {
          start: {
            line: 4904,
            column: 16
          },
          end: {
            line: 4904,
            column: 35
          }
        },
        "1451": {
          start: {
            line: 4909,
            column: 8
          },
          end: {
            line: 4909,
            column: 33
          }
        },
        "1452": {
          start: {
            line: 5489,
            column: 17
          },
          end: {
            line: 5489,
            column: 42
          }
        },
        "1453": {
          start: {
            line: 5490,
            column: 26
          },
          end: {
            line: 5490,
            column: 28
          }
        },
        "1454": {
          start: {
            line: 5493,
            column: 34
          },
          end: {
            line: 5530,
            column: 10
          }
        },
        "1455": {
          start: {
            line: 5494,
            column: 31
          },
          end: {
            line: 5494,
            column: 82
          }
        },
        "1456": {
          start: {
            line: 5495,
            column: 12
          },
          end: {
            line: 5495,
            column: 61
          }
        },
        "1457": {
          start: {
            line: 5496,
            column: 12
          },
          end: {
            line: 5529,
            column: 13
          }
        },
        "1458": {
          start: {
            line: 5497,
            column: 33
          },
          end: {
            line: 5497,
            column: 56
          }
        },
        "1459": {
          start: {
            line: 5498,
            column: 16
          },
          end: {
            line: 5501,
            column: 17
          }
        },
        "1460": {
          start: {
            line: 5499,
            column: 20
          },
          end: {
            line: 5499,
            column: 70
          }
        },
        "1461": {
          start: {
            line: 5500,
            column: 20
          },
          end: {
            line: 5500,
            column: 27
          }
        },
        "1462": {
          start: {
            line: 5503,
            column: 29
          },
          end: {
            line: 5503,
            column: 50
          }
        },
        "1463": {
          start: {
            line: 5504,
            column: 16
          },
          end: {
            line: 5504,
            column: 83
          }
        },
        "1464": {
          start: {
            line: 5507,
            column: 31
          },
          end: {
            line: 5507,
            column: 46
          }
        },
        "1465": {
          start: {
            line: 5508,
            column: 31
          },
          end: {
            line: 5508,
            column: 71
          }
        },
        "1466": {
          start: {
            line: 5510,
            column: 35
          },
          end: {
            line: 5510,
            column: 39
          }
        },
        "1467": {
          start: {
            line: 5513,
            column: 16
          },
          end: {
            line: 5519,
            column: 17
          }
        },
        "1468": {
          start: {
            line: 5514,
            column: 20
          },
          end: {
            line: 5514,
            column: 85
          }
        },
        "1469": {
          start: {
            line: 5515,
            column: 23
          },
          end: {
            line: 5519,
            column: 17
          }
        },
        "1470": {
          start: {
            line: 5516,
            column: 20
          },
          end: {
            line: 5516,
            column: 84
          }
        },
        "1471": {
          start: {
            line: 5517,
            column: 23
          },
          end: {
            line: 5519,
            column: 17
          }
        },
        "1472": {
          start: {
            line: 5518,
            column: 20
          },
          end: {
            line: 5518,
            column: 83
          }
        },
        "1473": {
          start: {
            line: 5521,
            column: 16
          },
          end: {
            line: 5525,
            column: 17
          }
        },
        "1474": {
          start: {
            line: 5522,
            column: 34
          },
          end: {
            line: 5522,
            column: 96
          }
        },
        "1475": {
          start: {
            line: 5523,
            column: 20
          },
          end: {
            line: 5523,
            column: 69
          }
        },
        "1476": {
          start: {
            line: 5524,
            column: 20
          },
          end: {
            line: 5524,
            column: 44
          }
        },
        "1477": {
          start: {
            line: 5528,
            column: 16
          },
          end: {
            line: 5528,
            column: 79
          }
        },
        "1478": {
          start: {
            line: 5533,
            column: 8
          },
          end: {
            line: 5533,
            column: 45
          }
        },
        "1479": {
          start: {
            line: 5536,
            column: 8
          },
          end: {
            line: 5539,
            column: 9
          }
        },
        "1480": {
          start: {
            line: 5537,
            column: 12
          },
          end: {
            line: 5537,
            column: 69
          }
        },
        "1481": {
          start: {
            line: 5538,
            column: 12
          },
          end: {
            line: 5538,
            column: 19
          }
        },
        "1482": {
          start: {
            line: 5541,
            column: 8
          },
          end: {
            line: 5541,
            column: 57
          }
        },
        "1483": {
          start: {
            line: 5544,
            column: 30
          },
          end: {
            line: 5544,
            column: 94
          }
        },
        "1484": {
          start: {
            line: 5545,
            column: 26
          },
          end: {
            line: 5545,
            column: 52
          }
        },
        "1485": {
          start: {
            line: 5546,
            column: 25
          },
          end: {
            line: 5546,
            column: 79
          }
        },
        "1486": {
          start: {
            line: 5547,
            column: 29
          },
          end: {
            line: 5547,
            column: 71
          }
        },
        "1487": {
          start: {
            line: 5548,
            column: 25
          },
          end: {
            line: 5548,
            column: 80
          }
        },
        "1488": {
          start: {
            line: 5549,
            column: 8
          },
          end: {
            line: 5549,
            column: 39
          }
        },
        "1489": {
          start: {
            line: 5551,
            column: 8
          },
          end: {
            line: 5554,
            column: 9
          }
        },
        "1490": {
          start: {
            line: 5552,
            column: 12
          },
          end: {
            line: 5552,
            column: 64
          }
        },
        "1491": {
          start: {
            line: 5553,
            column: 12
          },
          end: {
            line: 5553,
            column: 19
          }
        },
        "1492": {
          start: {
            line: 5556,
            column: 30
          },
          end: {
            line: 5556,
            column: 50
          }
        },
        "1493": {
          start: {
            line: 5559,
            column: 28
          },
          end: {
            line: 5563,
            column: 10
          }
        },
        "1494": {
          start: {
            line: 5560,
            column: 31
          },
          end: {
            line: 5560,
            column: 71
          }
        },
        "1495": {
          start: {
            line: 5561,
            column: 12
          },
          end: {
            line: 5561,
            column: 81
          }
        },
        "1496": {
          start: {
            line: 5562,
            column: 12
          },
          end: {
            line: 5562,
            column: 42
          }
        },
        "1497": {
          start: {
            line: 5565,
            column: 8
          },
          end: {
            line: 5565,
            column: 60
          }
        },
        "1498": {
          start: {
            line: 5568,
            column: 8
          },
          end: {
            line: 5568,
            column: 45
          }
        },
        "1499": {
          start: {
            line: 5570,
            column: 20
          },
          end: {
            line: 5570,
            column: 67
          }
        },
        "1500": {
          start: {
            line: 5573,
            column: 8
          },
          end: {
            line: 5577,
            column: 10
          }
        },
        "1501": {
          start: {
            line: 5580,
            column: 24
          },
          end: {
            line: 5580,
            column: 68
          }
        },
        "1502": {
          start: {
            line: 5581,
            column: 8
          },
          end: {
            line: 5581,
            column: 45
          }
        },
        "1503": {
          start: {
            line: 5582,
            column: 8
          },
          end: {
            line: 5582,
            column: 51
          }
        },
        "1504": {
          start: {
            line: 5585,
            column: 8
          },
          end: {
            line: 5585,
            column: 63
          }
        },
        "1505": {
          start: {
            line: 5586,
            column: 8
          },
          end: {
            line: 5586,
            column: 52
          }
        },
        "1506": {
          start: {
            line: 5589,
            column: 8
          },
          end: {
            line: 5589,
            column: 65
          }
        },
        "1507": {
          start: {
            line: 5590,
            column: 8
          },
          end: {
            line: 5590,
            column: 50
          }
        },
        "1508": {
          start: {
            line: 5591,
            column: 8
          },
          end: {
            line: 5591,
            column: 52
          }
        },
        "1509": {
          start: {
            line: 5594,
            column: 8
          },
          end: {
            line: 5594,
            column: 52
          }
        },
        "1510": {
          start: {
            line: 5597,
            column: 8
          },
          end: {
            line: 5597,
            column: 49
          }
        },
        "1511": {
          start: {
            line: 5600,
            column: 8
          },
          end: {
            line: 5600,
            column: 48
          }
        },
        "1512": {
          start: {
            line: 5601,
            column: 20
          },
          end: {
            line: 5601,
            column: 68
          }
        },
        "1513": {
          start: {
            line: 5602,
            column: 8
          },
          end: {
            line: 5602,
            column: 44
          }
        },
        "1514": {
          start: {
            line: 5603,
            column: 8
          },
          end: {
            line: 5603,
            column: 42
          }
        },
        "1515": {
          start: {
            line: 5604,
            column: 8
          },
          end: {
            line: 5604,
            column: 40
          }
        },
        "1516": {
          start: {
            line: 5605,
            column: 8
          },
          end: {
            line: 5605,
            column: 28
          }
        },
        "1517": {
          start: {
            line: 5606,
            column: 8
          },
          end: {
            line: 5606,
            column: 34
          }
        },
        "1518": {
          start: {
            line: 5609,
            column: 8
          },
          end: {
            line: 5609,
            column: 46
          }
        },
        "1519": {
          start: {
            line: 5610,
            column: 8
          },
          end: {
            line: 5610,
            column: 38
          }
        },
        "1520": {
          start: {
            line: 5736,
            column: 4
          },
          end: {
            line: 5736,
            column: 35
          }
        },
        "1521": {
          start: {
            line: 5739,
            column: 8
          },
          end: {
            line: 5889,
            column: 11
          }
        },
        "1522": {
          start: {
            line: 5741,
            column: 33
          },
          end: {
            line: 5741,
            column: 78
          }
        },
        "1523": {
          start: {
            line: 5742,
            column: 31
          },
          end: {
            line: 5742,
            column: 74
          }
        },
        "1524": {
          start: {
            line: 5743,
            column: 29
          },
          end: {
            line: 5743,
            column: 82
          }
        },
        "1525": {
          start: {
            line: 5744,
            column: 4
          },
          end: {
            line: 5747,
            column: 5
          }
        },
        "1526": {
          start: {
            line: 5746,
            column: 8
          },
          end: {
            line: 5746,
            column: 15
          }
        },
        "1527": {
          start: {
            line: 5748,
            column: 27
          },
          end: {
            line: 5748,
            column: 52
          }
        },
        "1528": {
          start: {
            line: 5749,
            column: 30
          },
          end: {
            line: 5749,
            column: 32
          }
        },
        "1529": {
          start: {
            line: 5753,
            column: 12
          },
          end: {
            line: 5805,
            column: 13
          }
        },
        "1530": {
          start: {
            line: 5754,
            column: 35
          },
          end: {
            line: 5754,
            column: 186
          }
        },
        "1531": {
          start: {
            line: 5755,
            column: 16
          },
          end: {
            line: 5755,
            column: 40
          }
        },
        "1532": {
          start: {
            line: 5756,
            column: 16
          },
          end: {
            line: 5804,
            column: 17
          }
        },
        "1533": {
          start: {
            line: 5757,
            column: 37
          },
          end: {
            line: 5757,
            column: 60
          }
        },
        "1534": {
          start: {
            line: 5758,
            column: 20
          },
          end: {
            line: 5758,
            column: 42
          }
        },
        "1535": {
          start: {
            line: 5759,
            column: 20
          },
          end: {
            line: 5762,
            column: 21
          }
        },
        "1536": {
          start: {
            line: 5760,
            column: 24
          },
          end: {
            line: 5760,
            column: 119
          }
        },
        "1537": {
          start: {
            line: 5761,
            column: 24
          },
          end: {
            line: 5761,
            column: 33
          }
        },
        "1538": {
          start: {
            line: 5764,
            column: 29
          },
          end: {
            line: 5764,
            column: 50
          }
        },
        "1539": {
          start: {
            line: 5767,
            column: 35
          },
          end: {
            line: 5767,
            column: 50
          }
        },
        "1540": {
          start: {
            line: 5768,
            column: 35
          },
          end: {
            line: 5768,
            column: 75
          }
        },
        "1541": {
          start: {
            line: 5769,
            column: 33
          },
          end: {
            line: 5769,
            column: 67
          }
        },
        "1542": {
          start: {
            line: 5771,
            column: 20
          },
          end: {
            line: 5801,
            column: 21
          }
        },
        "1543": {
          start: {
            line: 5772,
            column: 36
          },
          end: {
            line: 5772,
            column: 43
          }
        },
        "1544": {
          start: {
            line: 5773,
            column: 40
          },
          end: {
            line: 5773,
            column: 78
          }
        },
        "1545": {
          start: {
            line: 5774,
            column: 37
          },
          end: {
            line: 5774,
            column: 72
          }
        },
        "1546": {
          start: {
            line: 5776,
            column: 24
          },
          end: {
            line: 5800,
            column: 25
          }
        },
        "1547": {
          start: {
            line: 5777,
            column: 45
          },
          end: {
            line: 5777,
            column: 72
          }
        },
        "1548": {
          start: {
            line: 5778,
            column: 46
          },
          end: {
            line: 5778,
            column: 70
          }
        },
        "1549": {
          start: {
            line: 5780,
            column: 28
          },
          end: {
            line: 5799,
            column: 29
          }
        },
        "1550": {
          start: {
            line: 5781,
            column: 46
          },
          end: {
            line: 5781,
            column: 78
          }
        },
        "1551": {
          start: {
            line: 5782,
            column: 45
          },
          end: {
            line: 5782,
            column: 63
          }
        },
        "1552": {
          start: {
            line: 5783,
            column: 54
          },
          end: {
            line: 5786,
            column: 34
          }
        },
        "1553": {
          start: {
            line: 5787,
            column: 48
          },
          end: {
            line: 5787,
            column: 67
          }
        },
        "1554": {
          start: {
            line: 5789,
            column: 54
          },
          end: {
            line: 5789,
            column: 118
          }
        },
        "1555": {
          start: {
            line: 5789,
            column: 80
          },
          end: {
            line: 5789,
            column: 117
          }
        },
        "1556": {
          start: {
            line: 5791,
            column: 32
          },
          end: {
            line: 5798,
            column: 33
          }
        },
        "1557": {
          start: {
            line: 5792,
            column: 36
          },
          end: {
            line: 5792,
            column: 77
          }
        },
        "1558": {
          start: {
            line: 5794,
            column: 36
          },
          end: {
            line: 5797,
            column: 39
          }
        },
        "1559": {
          start: {
            line: 5803,
            column: 20
          },
          end: {
            line: 5803,
            column: 88
          }
        },
        "1560": {
          start: {
            line: 5808,
            column: 12
          },
          end: {
            line: 5808,
            column: 49
          }
        },
        "1561": {
          start: {
            line: 5812,
            column: 12
          },
          end: {
            line: 5812,
            column: 70
          }
        },
        "1562": {
          start: {
            line: 5813,
            column: 12
          },
          end: {
            line: 5813,
            column: 39
          }
        },
        "1563": {
          start: {
            line: 5816,
            column: 12
          },
          end: {
            line: 5816,
            column: 40
          }
        },
        "1564": {
          start: {
            line: 5817,
            column: 12
          },
          end: {
            line: 5829,
            column: 15
          }
        },
        "1565": {
          start: {
            line: 5818,
            column: 16
          },
          end: {
            line: 5818,
            column: 58
          }
        },
        "1566": {
          start: {
            line: 5819,
            column: 16
          },
          end: {
            line: 5819,
            column: 67
          }
        },
        "1567": {
          start: {
            line: 5822,
            column: 38
          },
          end: {
            line: 5826,
            column: 18
          }
        },
        "1568": {
          start: {
            line: 5827,
            column: 16
          },
          end: {
            line: 5827,
            column: 42
          }
        },
        "1569": {
          start: {
            line: 5828,
            column: 16
          },
          end: {
            line: 5828,
            column: 69
          }
        },
        "1570": {
          start: {
            line: 5833,
            column: 31
          },
          end: {
            line: 5833,
            column: 80
          }
        },
        "1571": {
          start: {
            line: 5834,
            column: 12
          },
          end: {
            line: 5834,
            column: 54
          }
        },
        "1572": {
          start: {
            line: 5835,
            column: 12
          },
          end: {
            line: 5835,
            column: 55
          }
        },
        "1573": {
          start: {
            line: 5839,
            column: 12
          },
          end: {
            line: 5839,
            column: 78
          }
        },
        "1574": {
          start: {
            line: 5840,
            column: 12
          },
          end: {
            line: 5840,
            column: 76
          }
        },
        "1575": {
          start: {
            line: 5842,
            column: 28
          },
          end: {
            line: 5842,
            column: 74
          }
        },
        "1576": {
          start: {
            line: 5843,
            column: 12
          },
          end: {
            line: 5843,
            column: 36
          }
        },
        "1577": {
          start: {
            line: 5847,
            column: 29
          },
          end: {
            line: 5847,
            column: 77
          }
        },
        "1578": {
          start: {
            line: 5848,
            column: 16
          },
          end: {
            line: 5848,
            column: 54
          }
        },
        "1579": {
          start: {
            line: 5849,
            column: 16
          },
          end: {
            line: 5849,
            column: 53
          }
        },
        "1580": {
          start: {
            line: 5850,
            column: 16
          },
          end: {
            line: 5850,
            column: 35
          }
        },
        "1581": {
          start: {
            line: 5851,
            column: 16
          },
          end: {
            line: 5851,
            column: 39
          }
        },
        "1582": {
          start: {
            line: 5852,
            column: 16
          },
          end: {
            line: 5852,
            column: 39
          }
        },
        "1583": {
          start: {
            line: 5853,
            column: 16
          },
          end: {
            line: 5853,
            column: 38
          }
        },
        "1584": {
          start: {
            line: 5856,
            column: 29
          },
          end: {
            line: 5856,
            column: 72
          }
        },
        "1585": {
          start: {
            line: 5857,
            column: 16
          },
          end: {
            line: 5857,
            column: 48
          }
        },
        "1586": {
          start: {
            line: 5859,
            column: 16
          },
          end: {
            line: 5865,
            column: 19
          }
        },
        "1587": {
          start: {
            line: 5861,
            column: 20
          },
          end: {
            line: 5863,
            column: 21
          }
        },
        "1588": {
          start: {
            line: 5862,
            column: 24
          },
          end: {
            line: 5862,
            column: 56
          }
        },
        "1589": {
          start: {
            line: 5864,
            column: 20
          },
          end: {
            line: 5864,
            column: 41
          }
        },
        "1590": {
          start: {
            line: 5867,
            column: 16
          },
          end: {
            line: 5867,
            column: 30
          }
        },
        "1591": {
          start: {
            line: 5869,
            column: 12
          },
          end: {
            line: 5869,
            column: 53
          }
        },
        "1592": {
          start: {
            line: 5870,
            column: 12
          },
          end: {
            line: 5870,
            column: 45
          }
        },
        "1593": {
          start: {
            line: 5871,
            column: 12
          },
          end: {
            line: 5871,
            column: 47
          }
        },
        "1594": {
          start: {
            line: 5872,
            column: 12
          },
          end: {
            line: 5872,
            column: 58
          }
        },
        "1595": {
          start: {
            line: 5874,
            column: 12
          },
          end: {
            line: 5874,
            column: 67
          }
        },
        "1596": {
          start: {
            line: 5875,
            column: 12
          },
          end: {
            line: 5875,
            column: 65
          }
        },
        "1597": {
          start: {
            line: 5876,
            column: 12
          },
          end: {
            line: 5876,
            column: 73
          }
        },
        "1598": {
          start: {
            line: 5883,
            column: 12
          },
          end: {
            line: 5883,
            column: 58
          }
        },
        "1599": {
          start: {
            line: 5884,
            column: 12
          },
          end: {
            line: 5884,
            column: 50
          }
        },
        "1600": {
          start: {
            line: 5886,
            column: 12
          },
          end: {
            line: 5886,
            column: 55
          }
        },
        "1601": {
          start: {
            line: 5887,
            column: 12
          },
          end: {
            line: 5887,
            column: 42
          }
        },
        "1602": {
          start: {
            line: 5893,
            column: 26
          },
          end: {
            line: 5893,
            column: 38
          }
        },
        "1603": {
          start: {
            line: 5894,
            column: 33
          },
          end: {
            line: 5894,
            column: 51
          }
        },
        "1604": {
          start: {
            line: 5895,
            column: 8
          },
          end: {
            line: 5895,
            column: 47
          }
        },
        "1605": {
          start: {
            line: 5897,
            column: 8
          },
          end: {
            line: 5934,
            column: 9
          }
        },
        "1606": {
          start: {
            line: 5898,
            column: 30
          },
          end: {
            line: 5902,
            column: 13
          }
        },
        "1607": {
          start: {
            line: 5904,
            column: 12
          },
          end: {
            line: 5933,
            column: 13
          }
        },
        "1608": {
          start: {
            line: 5905,
            column: 16
          },
          end: {
            line: 5932,
            column: 17
          }
        },
        "1609": {
          start: {
            line: 5906,
            column: 37
          },
          end: {
            line: 5906,
            column: 62
          }
        },
        "1610": {
          start: {
            line: 5907,
            column: 20
          },
          end: {
            line: 5907,
            column: 96
          }
        },
        "1611": {
          start: {
            line: 5907,
            column: 38
          },
          end: {
            line: 5907,
            column: 96
          }
        },
        "1612": {
          start: {
            line: 5909,
            column: 33
          },
          end: {
            line: 5909,
            column: 54
          }
        },
        "1613": {
          start: {
            line: 5910,
            column: 35
          },
          end: {
            line: 5910,
            column: 50
          }
        },
        "1614": {
          start: {
            line: 5911,
            column: 32
          },
          end: {
            line: 5911,
            column: 79
          }
        },
        "1615": {
          start: {
            line: 5913,
            column: 36
          },
          end: {
            line: 5913,
            column: 68
          }
        },
        "1616": {
          start: {
            line: 5914,
            column: 20
          },
          end: {
            line: 5928,
            column: 21
          }
        },
        "1617": {
          start: {
            line: 5916,
            column: 40
          },
          end: {
            line: 5916,
            column: 81
          }
        },
        "1618": {
          start: {
            line: 5917,
            column: 42
          },
          end: {
            line: 5917,
            column: 80
          }
        },
        "1619": {
          start: {
            line: 5920,
            column: 24
          },
          end: {
            line: 5927,
            column: 25
          }
        },
        "1620": {
          start: {
            line: 5921,
            column: 48
          },
          end: {
            line: 5921,
            column: 65
          }
        },
        "1621": {
          start: {
            line: 5922,
            column: 53
          },
          end: {
            line: 5922,
            column: 188
          }
        },
        "1622": {
          start: {
            line: 5924,
            column: 28
          },
          end: {
            line: 5926,
            column: 29
          }
        },
        "1623": {
          start: {
            line: 5925,
            column: 32
          },
          end: {
            line: 5925,
            column: 84
          }
        },
        "1624": {
          start: {
            line: 5930,
            column: 20
          },
          end: {
            line: 5930,
            column: 84
          }
        },
        "1625": {
          start: {
            line: 5931,
            column: 20
          },
          end: {
            line: 5931,
            column: 44
          }
        },
        "1626": {
          start: {
            line: 5935,
            column: 30
          },
          end: {
            line: 5935,
            column: 73
          }
        },
        "1627": {
          start: {
            line: 5936,
            column: 12
          },
          end: {
            line: 5938,
            column: 13
          }
        },
        "1628": {
          start: {
            line: 5937,
            column: 16
          },
          end: {
            line: 5937,
            column: 39
          }
        },
        "1629": {
          start: {
            line: 5940,
            column: 24
          },
          end: {
            line: 5999,
            column: 9
          }
        },
        "1630": {
          start: {
            line: 5980,
            column: 24
          },
          end: {
            line: 5980,
            column: 35
          }
        },
        "1631": {
          start: {
            line: 6002,
            column: 8
          },
          end: {
            line: 6002,
            column: 81
          }
        },
        "1632": {
          start: {
            line: 6003,
            column: 8
          },
          end: {
            line: 6003,
            column: 32
          }
        },
        "1633": {
          start: {
            line: 6008,
            column: 8
          },
          end: {
            line: 6157,
            column: 11
          }
        },
        "1634": {
          start: {
            line: 6010,
            column: 26
          },
          end: {
            line: 6010,
            column: 36
          }
        },
        "1635": {
          start: {
            line: 6011,
            column: 33
          },
          end: {
            line: 6011,
            column: 49
          }
        },
        "1636": {
          start: {
            line: 6012,
            column: 30
          },
          end: {
            line: 6012,
            column: 80
          }
        },
        "1637": {
          start: {
            line: 6013,
            column: 28
          },
          end: {
            line: 6013,
            column: 74
          }
        },
        "1638": {
          start: {
            line: 6015,
            column: 29
          },
          end: {
            line: 6015,
            column: 158
          }
        },
        "1639": {
          start: {
            line: 6016,
            column: 27
          },
          end: {
            line: 6016,
            column: 150
          }
        },
        "1640": {
          start: {
            line: 6018,
            column: 27
          },
          end: {
            line: 6018,
            column: 52
          }
        },
        "1641": {
          start: {
            line: 6019,
            column: 30
          },
          end: {
            line: 6019,
            column: 32
          }
        },
        "1642": {
          start: {
            line: 6022,
            column: 12
          },
          end: {
            line: 6072,
            column: 13
          }
        },
        "1643": {
          start: {
            line: 6023,
            column: 35
          },
          end: {
            line: 6023,
            column: 174
          }
        },
        "1644": {
          start: {
            line: 6024,
            column: 16
          },
          end: {
            line: 6024,
            column: 40
          }
        },
        "1645": {
          start: {
            line: 6025,
            column: 16
          },
          end: {
            line: 6071,
            column: 17
          }
        },
        "1646": {
          start: {
            line: 6026,
            column: 37
          },
          end: {
            line: 6026,
            column: 60
          }
        },
        "1647": {
          start: {
            line: 6027,
            column: 20
          },
          end: {
            line: 6027,
            column: 42
          }
        },
        "1648": {
          start: {
            line: 6028,
            column: 20
          },
          end: {
            line: 6031,
            column: 21
          }
        },
        "1649": {
          start: {
            line: 6029,
            column: 24
          },
          end: {
            line: 6029,
            column: 119
          }
        },
        "1650": {
          start: {
            line: 6030,
            column: 24
          },
          end: {
            line: 6030,
            column: 33
          }
        },
        "1651": {
          start: {
            line: 6033,
            column: 33
          },
          end: {
            line: 6033,
            column: 54
          }
        },
        "1652": {
          start: {
            line: 6034,
            column: 35
          },
          end: {
            line: 6034,
            column: 50
          }
        },
        "1653": {
          start: {
            line: 6035,
            column: 35
          },
          end: {
            line: 6035,
            column: 75
          }
        },
        "1654": {
          start: {
            line: 6036,
            column: 33
          },
          end: {
            line: 6036,
            column: 67
          }
        },
        "1655": {
          start: {
            line: 6038,
            column: 20
          },
          end: {
            line: 6068,
            column: 21
          }
        },
        "1656": {
          start: {
            line: 6039,
            column: 36
          },
          end: {
            line: 6039,
            column: 43
          }
        },
        "1657": {
          start: {
            line: 6040,
            column: 40
          },
          end: {
            line: 6040,
            column: 78
          }
        },
        "1658": {
          start: {
            line: 6041,
            column: 37
          },
          end: {
            line: 6041,
            column: 72
          }
        },
        "1659": {
          start: {
            line: 6043,
            column: 24
          },
          end: {
            line: 6067,
            column: 25
          }
        },
        "1660": {
          start: {
            line: 6044,
            column: 45
          },
          end: {
            line: 6044,
            column: 72
          }
        },
        "1661": {
          start: {
            line: 6045,
            column: 46
          },
          end: {
            line: 6045,
            column: 70
          }
        },
        "1662": {
          start: {
            line: 6047,
            column: 28
          },
          end: {
            line: 6066,
            column: 29
          }
        },
        "1663": {
          start: {
            line: 6048,
            column: 46
          },
          end: {
            line: 6048,
            column: 78
          }
        },
        "1664": {
          start: {
            line: 6049,
            column: 45
          },
          end: {
            line: 6049,
            column: 63
          }
        },
        "1665": {
          start: {
            line: 6050,
            column: 54
          },
          end: {
            line: 6053,
            column: 34
          }
        },
        "1666": {
          start: {
            line: 6054,
            column: 48
          },
          end: {
            line: 6054,
            column: 67
          }
        },
        "1667": {
          start: {
            line: 6056,
            column: 54
          },
          end: {
            line: 6056,
            column: 118
          }
        },
        "1668": {
          start: {
            line: 6056,
            column: 80
          },
          end: {
            line: 6056,
            column: 117
          }
        },
        "1669": {
          start: {
            line: 6058,
            column: 32
          },
          end: {
            line: 6065,
            column: 33
          }
        },
        "1670": {
          start: {
            line: 6059,
            column: 36
          },
          end: {
            line: 6059,
            column: 77
          }
        },
        "1671": {
          start: {
            line: 6061,
            column: 36
          },
          end: {
            line: 6064,
            column: 39
          }
        },
        "1672": {
          start: {
            line: 6070,
            column: 20
          },
          end: {
            line: 6070,
            column: 88
          }
        },
        "1673": {
          start: {
            line: 6075,
            column: 12
          },
          end: {
            line: 6075,
            column: 49
          }
        },
        "1674": {
          start: {
            line: 6079,
            column: 12
          },
          end: {
            line: 6079,
            column: 70
          }
        },
        "1675": {
          start: {
            line: 6080,
            column: 12
          },
          end: {
            line: 6080,
            column: 39
          }
        },
        "1676": {
          start: {
            line: 6083,
            column: 12
          },
          end: {
            line: 6083,
            column: 40
          }
        },
        "1677": {
          start: {
            line: 6084,
            column: 12
          },
          end: {
            line: 6096,
            column: 15
          }
        },
        "1678": {
          start: {
            line: 6085,
            column: 16
          },
          end: {
            line: 6085,
            column: 58
          }
        },
        "1679": {
          start: {
            line: 6086,
            column: 16
          },
          end: {
            line: 6086,
            column: 67
          }
        },
        "1680": {
          start: {
            line: 6089,
            column: 38
          },
          end: {
            line: 6093,
            column: 18
          }
        },
        "1681": {
          start: {
            line: 6094,
            column: 16
          },
          end: {
            line: 6094,
            column: 42
          }
        },
        "1682": {
          start: {
            line: 6095,
            column: 16
          },
          end: {
            line: 6095,
            column: 69
          }
        },
        "1683": {
          start: {
            line: 6100,
            column: 31
          },
          end: {
            line: 6100,
            column: 80
          }
        },
        "1684": {
          start: {
            line: 6101,
            column: 12
          },
          end: {
            line: 6101,
            column: 54
          }
        },
        "1685": {
          start: {
            line: 6102,
            column: 12
          },
          end: {
            line: 6102,
            column: 55
          }
        },
        "1686": {
          start: {
            line: 6106,
            column: 12
          },
          end: {
            line: 6106,
            column: 78
          }
        },
        "1687": {
          start: {
            line: 6107,
            column: 12
          },
          end: {
            line: 6107,
            column: 76
          }
        },
        "1688": {
          start: {
            line: 6109,
            column: 28
          },
          end: {
            line: 6109,
            column: 74
          }
        },
        "1689": {
          start: {
            line: 6110,
            column: 12
          },
          end: {
            line: 6110,
            column: 36
          }
        },
        "1690": {
          start: {
            line: 6114,
            column: 29
          },
          end: {
            line: 6114,
            column: 77
          }
        },
        "1691": {
          start: {
            line: 6115,
            column: 16
          },
          end: {
            line: 6115,
            column: 54
          }
        },
        "1692": {
          start: {
            line: 6116,
            column: 16
          },
          end: {
            line: 6116,
            column: 53
          }
        },
        "1693": {
          start: {
            line: 6117,
            column: 16
          },
          end: {
            line: 6117,
            column: 35
          }
        },
        "1694": {
          start: {
            line: 6118,
            column: 16
          },
          end: {
            line: 6118,
            column: 39
          }
        },
        "1695": {
          start: {
            line: 6119,
            column: 16
          },
          end: {
            line: 6119,
            column: 39
          }
        },
        "1696": {
          start: {
            line: 6120,
            column: 16
          },
          end: {
            line: 6120,
            column: 38
          }
        },
        "1697": {
          start: {
            line: 6123,
            column: 29
          },
          end: {
            line: 6123,
            column: 72
          }
        },
        "1698": {
          start: {
            line: 6124,
            column: 16
          },
          end: {
            line: 6124,
            column: 48
          }
        },
        "1699": {
          start: {
            line: 6126,
            column: 16
          },
          end: {
            line: 6132,
            column: 19
          }
        },
        "1700": {
          start: {
            line: 6128,
            column: 20
          },
          end: {
            line: 6130,
            column: 21
          }
        },
        "1701": {
          start: {
            line: 6129,
            column: 24
          },
          end: {
            line: 6129,
            column: 56
          }
        },
        "1702": {
          start: {
            line: 6131,
            column: 20
          },
          end: {
            line: 6131,
            column: 41
          }
        },
        "1703": {
          start: {
            line: 6134,
            column: 16
          },
          end: {
            line: 6134,
            column: 30
          }
        },
        "1704": {
          start: {
            line: 6137,
            column: 12
          },
          end: {
            line: 6137,
            column: 53
          }
        },
        "1705": {
          start: {
            line: 6138,
            column: 12
          },
          end: {
            line: 6138,
            column: 45
          }
        },
        "1706": {
          start: {
            line: 6139,
            column: 12
          },
          end: {
            line: 6139,
            column: 47
          }
        },
        "1707": {
          start: {
            line: 6140,
            column: 12
          },
          end: {
            line: 6140,
            column: 58
          }
        },
        "1708": {
          start: {
            line: 6142,
            column: 12
          },
          end: {
            line: 6142,
            column: 73
          }
        },
        "1709": {
          start: {
            line: 6143,
            column: 12
          },
          end: {
            line: 6143,
            column: 72
          }
        },
        "1710": {
          start: {
            line: 6144,
            column: 12
          },
          end: {
            line: 6144,
            column: 77
          }
        },
        "1711": {
          start: {
            line: 6151,
            column: 12
          },
          end: {
            line: 6151,
            column: 58
          }
        },
        "1712": {
          start: {
            line: 6152,
            column: 12
          },
          end: {
            line: 6152,
            column: 50
          }
        },
        "1713": {
          start: {
            line: 6154,
            column: 12
          },
          end: {
            line: 6154,
            column: 55
          }
        },
        "1714": {
          start: {
            line: 6155,
            column: 12
          },
          end: {
            line: 6155,
            column: 42
          }
        },
        "1715": {
          start: {
            line: 6160,
            column: 4
          },
          end: {
            line: 6162,
            column: 7
          }
        },
        "1716": {
          start: {
            line: 6161,
            column: 8
          },
          end: {
            line: 6161,
            column: 39
          }
        },
        "1717": {
          start: {
            line: 6163,
            column: 4
          },
          end: {
            line: 6166,
            column: 7
          }
        },
        "1718": {
          start: {
            line: 6164,
            column: 8
          },
          end: {
            line: 6164,
            column: 29
          }
        },
        "1719": {
          start: {
            line: 6165,
            column: 8
          },
          end: {
            line: 6165,
            column: 45
          }
        },
        "1720": {
          start: {
            line: 6167,
            column: 4
          },
          end: {
            line: 6170,
            column: 7
          }
        },
        "1721": {
          start: {
            line: 6168,
            column: 8
          },
          end: {
            line: 6168,
            column: 29
          }
        },
        "1722": {
          start: {
            line: 6169,
            column: 8
          },
          end: {
            line: 6169,
            column: 51
          }
        },
        "1723": {
          start: {
            line: 6171,
            column: 4
          },
          end: {
            line: 6174,
            column: 7
          }
        },
        "1724": {
          start: {
            line: 6172,
            column: 8
          },
          end: {
            line: 6172,
            column: 43
          }
        },
        "1725": {
          start: {
            line: 6173,
            column: 8
          },
          end: {
            line: 6173,
            column: 29
          }
        },
        "1726": {
          start: {
            line: 6178,
            column: 23
          },
          end: {
            line: 6178,
            column: 43
          }
        },
        "1727": {
          start: {
            line: 6179,
            column: 23
          },
          end: {
            line: 6179,
            column: 25
          }
        },
        "1728": {
          start: {
            line: 6180,
            column: 22
          },
          end: {
            line: 6180,
            column: 24
          }
        },
        "1729": {
          start: {
            line: 6181,
            column: 24
          },
          end: {
            line: 6181,
            column: 26
          }
        },
        "1730": {
          start: {
            line: 6184,
            column: 8
          },
          end: {
            line: 6205,
            column: 9
          }
        },
        "1731": {
          start: {
            line: 6185,
            column: 12
          },
          end: {
            line: 6204,
            column: 13
          }
        },
        "1732": {
          start: {
            line: 6186,
            column: 33
          },
          end: {
            line: 6186,
            column: 88
          }
        },
        "1733": {
          start: {
            line: 6187,
            column: 29
          },
          end: {
            line: 6187,
            column: 50
          }
        },
        "1734": {
          start: {
            line: 6190,
            column: 31
          },
          end: {
            line: 6190,
            column: 46
          }
        },
        "1735": {
          start: {
            line: 6191,
            column: 31
          },
          end: {
            line: 6191,
            column: 78
          }
        },
        "1736": {
          start: {
            line: 6194,
            column: 28
          },
          end: {
            line: 6194,
            column: 117
          }
        },
        "1737": {
          start: {
            line: 6195,
            column: 29
          },
          end: {
            line: 6195,
            column: 119
          }
        },
        "1738": {
          start: {
            line: 6196,
            column: 30
          },
          end: {
            line: 6196,
            column: 124
          }
        },
        "1739": {
          start: {
            line: 6199,
            column: 16
          },
          end: {
            line: 6199,
            column: 36
          }
        },
        "1740": {
          start: {
            line: 6200,
            column: 16
          },
          end: {
            line: 6200,
            column: 34
          }
        },
        "1741": {
          start: {
            line: 6201,
            column: 16
          },
          end: {
            line: 6201,
            column: 38
          }
        },
        "1742": {
          start: {
            line: 6203,
            column: 16
          },
          end: {
            line: 6203,
            column: 74
          }
        },
        "1743": {
          start: {
            line: 6207,
            column: 8
          },
          end: {
            line: 6210,
            column: 9
          }
        },
        "1744": {
          start: {
            line: 6208,
            column: 12
          },
          end: {
            line: 6208,
            column: 47
          }
        },
        "1745": {
          start: {
            line: 6209,
            column: 12
          },
          end: {
            line: 6209,
            column: 32
          }
        },
        "1746": {
          start: {
            line: 6211,
            column: 22
          },
          end: {
            line: 6302,
            column: 9
          }
        },
        "1747": {
          start: {
            line: 6243,
            column: 20
          },
          end: {
            line: 6243,
            column: 37
          }
        },
        "1748": {
          start: {
            line: 6286,
            column: 24
          },
          end: {
            line: 6286,
            column: 35
          }
        },
        "1749": {
          start: {
            line: 6305,
            column: 8
          },
          end: {
            line: 6305,
            column: 84
          }
        },
        "1750": {
          start: {
            line: 6306,
            column: 8
          },
          end: {
            line: 6306,
            column: 33
          }
        },
        "1751": {
          start: {
            line: 6309,
            column: 4
          },
          end: {
            line: 6318,
            column: 7
          }
        },
        "1752": {
          start: {
            line: 6310,
            column: 8
          },
          end: {
            line: 6310,
            column: 32
          }
        },
        "1753": {
          start: {
            line: 6311,
            column: 8
          },
          end: {
            line: 6311,
            column: 41
          }
        },
        "1754": {
          start: {
            line: 6312,
            column: 8
          },
          end: {
            line: 6312,
            column: 28
          }
        },
        "1755": {
          start: {
            line: 6313,
            column: 8
          },
          end: {
            line: 6313,
            column: 30
          }
        },
        "1756": {
          start: {
            line: 6314,
            column: 8
          },
          end: {
            line: 6314,
            column: 31
          }
        },
        "1757": {
          start: {
            line: 6315,
            column: 8
          },
          end: {
            line: 6315,
            column: 28
          }
        },
        "1758": {
          start: {
            line: 6317,
            column: 8
          },
          end: {
            line: 6317,
            column: 31
          }
        },
        "1759": {
          start: {
            line: 6319,
            column: 4
          },
          end: {
            line: 6327,
            column: 7
          }
        },
        "1760": {
          start: {
            line: 6320,
            column: 8
          },
          end: {
            line: 6320,
            column: 32
          }
        },
        "1761": {
          start: {
            line: 6321,
            column: 8
          },
          end: {
            line: 6321,
            column: 41
          }
        },
        "1762": {
          start: {
            line: 6322,
            column: 8
          },
          end: {
            line: 6322,
            column: 28
          }
        },
        "1763": {
          start: {
            line: 6323,
            column: 8
          },
          end: {
            line: 6323,
            column: 30
          }
        },
        "1764": {
          start: {
            line: 6324,
            column: 8
          },
          end: {
            line: 6324,
            column: 31
          }
        },
        "1765": {
          start: {
            line: 6325,
            column: 8
          },
          end: {
            line: 6325,
            column: 28
          }
        },
        "1766": {
          start: {
            line: 6332,
            column: 23
          },
          end: {
            line: 6332,
            column: 25
          }
        },
        "1767": {
          start: {
            line: 6333,
            column: 28
          },
          end: {
            line: 6333,
            column: 38
          }
        },
        "1768": {
          start: {
            line: 6335,
            column: 8
          },
          end: {
            line: 6340,
            column: 9
          }
        },
        "1769": {
          start: {
            line: 6336,
            column: 30
          },
          end: {
            line: 6336,
            column: 96
          }
        },
        "1770": {
          start: {
            line: 6338,
            column: 31
          },
          end: {
            line: 6338,
            column: 103
          }
        },
        "1771": {
          start: {
            line: 6339,
            column: 8
          },
          end: {
            line: 6339,
            column: 36
          }
        },
        "1772": {
          start: {
            line: 6341,
            column: 8
          },
          end: {
            line: 6341,
            column: 32
          }
        },
        "1773": {
          start: {
            line: 6367,
            column: 23
          },
          end: {
            line: 6367,
            column: 25
          }
        },
        "1774": {
          start: {
            line: 6368,
            column: 20
          },
          end: {
            line: 6368,
            column: 30
          }
        },
        "1775": {
          start: {
            line: 6370,
            column: 8
          },
          end: {
            line: 6378,
            column: 9
          }
        },
        "1776": {
          start: {
            line: 6372,
            column: 36
          },
          end: {
            line: 6372,
            column: 86
          }
        },
        "1777": {
          start: {
            line: 6375,
            column: 12
          },
          end: {
            line: 6377,
            column: 15
          }
        },
        "1778": {
          start: {
            line: 6380,
            column: 8
          },
          end: {
            line: 6380,
            column: 22
          }
        },
        "1779": {
          start: {
            line: 6384,
            column: 8
          },
          end: {
            line: 6384,
            column: 86
          }
        },
        "1780": {
          start: {
            line: 6384,
            column: 48
          },
          end: {
            line: 6384,
            column: 84
          }
        },
        "1781": {
          start: {
            line: 6388,
            column: 8
          },
          end: {
            line: 6388,
            column: 68
          }
        },
        "1782": {
          start: {
            line: 6389,
            column: 8
          },
          end: {
            line: 6389,
            column: 69
          }
        },
        "1783": {
          start: {
            line: 6392,
            column: 8
          },
          end: {
            line: 6392,
            column: 71
          }
        },
        "1784": {
          start: {
            line: 6393,
            column: 8
          },
          end: {
            line: 6393,
            column: 70
          }
        },
        "1785": {
          start: {
            line: 6396,
            column: 20
          },
          end: {
            line: 6396,
            column: 82
          }
        },
        "1786": {
          start: {
            line: 6397,
            column: 8
          },
          end: {
            line: 6397,
            column: 21
          }
        },
        "1787": {
          start: {
            line: 6404,
            column: 20
          },
          end: {
            line: 6404,
            column: 30
          }
        },
        "1788": {
          start: {
            line: 6405,
            column: 24
          },
          end: {
            line: 6405,
            column: 46
          }
        },
        "1789": {
          start: {
            line: 6406,
            column: 8
          },
          end: {
            line: 6406,
            column: 40
          }
        },
        "1790": {
          start: {
            line: 6407,
            column: 4
          },
          end: {
            line: 6407,
            column: 32
          }
        },
        "1791": {
          start: {
            line: 6411,
            column: 8
          },
          end: {
            line: 6415,
            column: 9
          }
        },
        "1792": {
          start: {
            line: 6412,
            column: 12
          },
          end: {
            line: 6412,
            column: 35
          }
        },
        "1793": {
          start: {
            line: 6413,
            column: 12
          },
          end: {
            line: 6413,
            column: 98
          }
        },
        "1794": {
          start: {
            line: 6414,
            column: 12
          },
          end: {
            line: 6414,
            column: 25
          }
        },
        "1795": {
          start: {
            line: 6418,
            column: 8
          },
          end: {
            line: 6422,
            column: 9
          }
        },
        "1796": {
          start: {
            line: 6419,
            column: 12
          },
          end: {
            line: 6419,
            column: 33
          }
        },
        "1797": {
          start: {
            line: 6420,
            column: 12
          },
          end: {
            line: 6420,
            column: 94
          }
        },
        "1798": {
          start: {
            line: 6421,
            column: 12
          },
          end: {
            line: 6421,
            column: 25
          }
        },
        "1799": {
          start: {
            line: 6425,
            column: 8
          },
          end: {
            line: 6428,
            column: 9
          }
        },
        "1800": {
          start: {
            line: 6426,
            column: 12
          },
          end: {
            line: 6426,
            column: 125
          }
        },
        "1801": {
          start: {
            line: 6427,
            column: 12
          },
          end: {
            line: 6427,
            column: 25
          }
        },
        "1802": {
          start: {
            line: 6431,
            column: 8
          },
          end: {
            line: 6434,
            column: 9
          }
        },
        "1803": {
          start: {
            line: 6432,
            column: 12
          },
          end: {
            line: 6432,
            column: 123
          }
        },
        "1804": {
          start: {
            line: 6433,
            column: 12
          },
          end: {
            line: 6433,
            column: 25
          }
        },
        "1805": {
          start: {
            line: 6436,
            column: 8
          },
          end: {
            line: 6439,
            column: 9
          }
        },
        "1806": {
          start: {
            line: 6437,
            column: 12
          },
          end: {
            line: 6437,
            column: 102
          }
        },
        "1807": {
          start: {
            line: 6438,
            column: 12
          },
          end: {
            line: 6438,
            column: 25
          }
        },
        "1808": {
          start: {
            line: 6442,
            column: 23
          },
          end: {
            line: 6442,
            column: 42
          }
        },
        "1809": {
          start: {
            line: 6445,
            column: 22
          },
          end: {
            line: 6445,
            column: 51
          }
        },
        "1810": {
          start: {
            line: 6448,
            column: 8
          },
          end: {
            line: 6451,
            column: 9
          }
        },
        "1811": {
          start: {
            line: 6449,
            column: 12
          },
          end: {
            line: 6449,
            column: 99
          }
        },
        "1812": {
          start: {
            line: 6450,
            column: 12
          },
          end: {
            line: 6450,
            column: 25
          }
        },
        "1813": {
          start: {
            line: 6453,
            column: 8
          },
          end: {
            line: 6453,
            column: 20
          }
        },
        "1814": {
          start: {
            line: 6501,
            column: 27
          },
          end: {
            line: 6501,
            column: 41
          }
        },
        "1815": {
          start: {
            line: 6502,
            column: 4
          },
          end: {
            line: 6502,
            column: 38
          }
        },
        "1816": {
          start: {
            line: 6503,
            column: 4
          },
          end: {
            line: 6503,
            column: 33
          }
        },
        "1817": {
          start: {
            line: 6504,
            column: 4
          },
          end: {
            line: 6504,
            column: 26
          }
        },
        "1818": {
          start: {
            line: 6509,
            column: 4
          },
          end: {
            line: 6513,
            column: 5
          }
        },
        "1819": {
          start: {
            line: 6509,
            column: 63
          },
          end: {
            line: 6509,
            column: 74
          }
        },
        "1820": {
          start: {
            line: 6511,
            column: 8
          },
          end: {
            line: 6511,
            column: 190
          }
        },
        "1821": {
          start: {
            line: 6512,
            column: 8
          },
          end: {
            line: 6512,
            column: 15
          }
        },
        "1822": {
          start: {
            line: 6517,
            column: 21
          },
          end: {
            line: 6517,
            column: 30
          }
        },
        "1823": {
          start: {
            line: 6518,
            column: 21
          },
          end: {
            line: 6518,
            column: 31
          }
        },
        "1824": {
          start: {
            line: 6520,
            column: 0
          },
          end: {
            line: 6520,
            column: 47
          }
        },
        "1825": {
          start: {
            line: 6525,
            column: 8
          },
          end: {
            line: 6525,
            column: 32
          }
        },
        "1826": {
          start: {
            line: 6526,
            column: 8
          },
          end: {
            line: 6526,
            column: 30
          }
        },
        "1827": {
          start: {
            line: 6529,
            column: 8
          },
          end: {
            line: 6529,
            column: 37
          }
        },
        "1828": {
          start: {
            line: 6530,
            column: 8
          },
          end: {
            line: 6530,
            column: 35
          }
        },
        "1829": {
          start: {
            line: 6533,
            column: 8
          },
          end: {
            line: 6533,
            column: 37
          }
        },
        "1830": {
          start: {
            line: 6534,
            column: 8
          },
          end: {
            line: 6534,
            column: 35
          }
        },
        "1831": {
          start: {
            line: 6537,
            column: 8
          },
          end: {
            line: 6537,
            column: 41
          }
        },
        "1832": {
          start: {
            line: 6538,
            column: 8
          },
          end: {
            line: 6538,
            column: 39
          }
        },
        "1833": {
          start: {
            line: 6541,
            column: 8
          },
          end: {
            line: 6541,
            column: 35
          }
        },
        "1834": {
          start: {
            line: 6542,
            column: 8
          },
          end: {
            line: 6542,
            column: 33
          }
        },
        "1835": {
          start: {
            line: 6545,
            column: 8
          },
          end: {
            line: 6545,
            column: 35
          }
        },
        "1836": {
          start: {
            line: 6546,
            column: 8
          },
          end: {
            line: 6546,
            column: 33
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 1,
              column: 7
            },
            end: {
              line: 1,
              column: 8
            }
          },
          loc: {
            start: {
              line: 1,
              column: 19
            },
            end: {
              line: 6548,
              column: 1
            }
          },
          line: 1
        },
        "1": {
          name: "fetchCO2Emission",
          decl: {
            start: {
              line: 14,
              column: 15
            },
            end: {
              line: 14,
              column: 31
            }
          },
          loc: {
            start: {
              line: 14,
              column: 34
            },
            end: {
              line: 41,
              column: 1
            }
          },
          line: 14
        },
        "2": {
          name: "formatDate",
          decl: {
            start: {
              line: 44,
              column: 9
            },
            end: {
              line: 44,
              column: 19
            }
          },
          loc: {
            start: {
              line: 44,
              column: 26
            },
            end: {
              line: 49,
              column: 1
            }
          },
          line: 44
        },
        "3": {
          name: "fetchWaterData",
          decl: {
            start: {
              line: 54,
              column: 15
            },
            end: {
              line: 54,
              column: 29
            }
          },
          loc: {
            start: {
              line: 54,
              column: 32
            },
            end: {
              line: 90,
              column: 1
            }
          },
          line: 54
        },
        "4": {
          name: "extractValueFromXml",
          decl: {
            start: {
              line: 93,
              column: 9
            },
            end: {
              line: 93,
              column: 28
            }
          },
          loc: {
            start: {
              line: 93,
              column: 35
            },
            end: {
              line: 99,
              column: 1
            }
          },
          line: 93
        },
        "5": {
          name: "formatDate",
          decl: {
            start: {
              line: 102,
              column: 9
            },
            end: {
              line: 102,
              column: 19
            }
          },
          loc: {
            start: {
              line: 102,
              column: 26
            },
            end: {
              line: 107,
              column: 1
            }
          },
          line: 102
        },
        "6": {
          name: "disposeChartCo",
          decl: {
            start: {
              line: 119,
              column: 19
            },
            end: {
              line: 119,
              column: 33
            }
          },
          loc: {
            start: {
              line: 119,
              column: 52
            },
            end: {
              line: 131,
              column: 5
            }
          },
          line: 119
        },
        "7": {
          name: "pieChart",
          decl: {
            start: {
              line: 307,
              column: 15
            },
            end: {
              line: 307,
              column: 23
            }
          },
          loc: {
            start: {
              line: 307,
              column: 26
            },
            end: {
              line: 471,
              column: 1
            }
          },
          line: 307
        },
        "8": {
          name: "(anonymous_8)",
          decl: {
            start: {
              line: 364,
              column: 42
            },
            end: {
              line: 364,
              column: 43
            }
          },
          loc: {
            start: {
              line: 364,
              column: 58
            },
            end: {
              line: 364,
              column: 69
            }
          },
          line: 364
        },
        "9": {
          name: "(anonymous_9)",
          decl: {
            start: {
              line: 366,
              column: 38
            },
            end: {
              line: 366,
              column: 39
            }
          },
          loc: {
            start: {
              line: 366,
              column: 47
            },
            end: {
              line: 366,
              column: 73
            }
          },
          line: 366
        },
        "10": {
          name: "(anonymous_10)",
          decl: {
            start: {
              line: 398,
              column: 35
            },
            end: {
              line: 398,
              column: 36
            }
          },
          loc: {
            start: {
              line: 398,
              column: 47
            },
            end: {
              line: 400,
              column: 25
            }
          },
          line: 398
        },
        "11": {
          name: "(anonymous_11)",
          decl: {
            start: {
              line: 407,
              column: 35
            },
            end: {
              line: 407,
              column: 36
            }
          },
          loc: {
            start: {
              line: 407,
              column: 47
            },
            end: {
              line: 409,
              column: 25
            }
          },
          line: 407
        },
        "12": {
          name: "(anonymous_12)",
          decl: {
            start: {
              line: 417,
              column: 35
            },
            end: {
              line: 417,
              column: 36
            }
          },
          loc: {
            start: {
              line: 417,
              column: 47
            },
            end: {
              line: 419,
              column: 25
            }
          },
          line: 417
        },
        "13": {
          name: "(anonymous_13)",
          decl: {
            start: {
              line: 444,
              column: 20
            },
            end: {
              line: 444,
              column: 21
            }
          },
          loc: {
            start: {
              line: 444,
              column: 58
            },
            end: {
              line: 460,
              column: 13
            }
          },
          line: 444
        },
        "14": {
          name: "lineChartMonthlyCo25",
          decl: {
            start: {
              line: 476,
              column: 19
            },
            end: {
              line: 476,
              column: 39
            }
          },
          loc: {
            start: {
              line: 476,
              column: 42
            },
            end: {
              line: 627,
              column: 5
            }
          },
          line: 476
        },
        "15": {
          name: "(anonymous_15)",
          decl: {
            start: {
              line: 477,
              column: 22
            },
            end: {
              line: 477,
              column: 23
            }
          },
          loc: {
            start: {
              line: 477,
              column: 40
            },
            end: {
              line: 626,
              column: 9
            }
          },
          line: 477
        },
        "16": {
          name: "(anonymous_16)",
          decl: {
            start: {
              line: 525,
              column: 71
            },
            end: {
              line: 525,
              column: 72
            }
          },
          loc: {
            start: {
              line: 525,
              column: 80
            },
            end: {
              line: 525,
              column: 117
            }
          },
          line: 525
        },
        "17": {
          name: "(anonymous_17)",
          decl: {
            start: {
              line: 553,
              column: 32
            },
            end: {
              line: 553,
              column: 33
            }
          },
          loc: {
            start: {
              line: 553,
              column: 40
            },
            end: {
              line: 565,
              column: 13
            }
          },
          line: 553
        },
        "18": {
          name: "createSeries",
          decl: {
            start: {
              line: 582,
              column: 21
            },
            end: {
              line: 582,
              column: 33
            }
          },
          loc: {
            start: {
              line: 582,
              column: 59
            },
            end: {
              line: 604,
              column: 13
            }
          },
          line: 582
        },
        "19": {
          name: "(anonymous_19)",
          decl: {
            start: {
              line: 595,
              column: 43
            },
            end: {
              line: 595,
              column: 44
            }
          },
          loc: {
            start: {
              line: 595,
              column: 67
            },
            end: {
              line: 601,
              column: 17
            }
          },
          line: 595
        },
        "20": {
          name: "dateRangeCo2",
          decl: {
            start: {
              line: 776,
              column: 15
            },
            end: {
              line: 776,
              column: 27
            }
          },
          loc: {
            start: {
              line: 776,
              column: 30
            },
            end: {
              line: 919,
              column: 1
            }
          },
          line: 776
        },
        "21": {
          name: "(anonymous_21)",
          decl: {
            start: {
              line: 777,
              column: 18
            },
            end: {
              line: 777,
              column: 19
            }
          },
          loc: {
            start: {
              line: 777,
              column: 36
            },
            end: {
              line: 918,
              column: 5
            }
          },
          line: 777
        },
        "22": {
          name: "(anonymous_22)",
          decl: {
            start: {
              line: 824,
              column: 67
            },
            end: {
              line: 824,
              column: 68
            }
          },
          loc: {
            start: {
              line: 824,
              column: 76
            },
            end: {
              line: 824,
              column: 113
            }
          },
          line: 824
        },
        "23": {
          name: "(anonymous_23)",
          decl: {
            start: {
              line: 855,
              column: 28
            },
            end: {
              line: 855,
              column: 29
            }
          },
          loc: {
            start: {
              line: 855,
              column: 36
            },
            end: {
              line: 867,
              column: 13
            }
          },
          line: 855
        },
        "24": {
          name: "createSeries",
          decl: {
            start: {
              line: 880,
              column: 17
            },
            end: {
              line: 880,
              column: 29
            }
          },
          loc: {
            start: {
              line: 880,
              column: 55
            },
            end: {
              line: 900,
              column: 9
            }
          },
          line: 880
        },
        "25": {
          name: "(anonymous_25)",
          decl: {
            start: {
              line: 892,
              column: 39
            },
            end: {
              line: 892,
              column: 40
            }
          },
          loc: {
            start: {
              line: 892,
              column: 63
            },
            end: {
              line: 897,
              column: 13
            }
          },
          line: 892
        },
        "26": {
          name: "createBarChart1",
          decl: {
            start: {
              line: 922,
              column: 19
            },
            end: {
              line: 922,
              column: 34
            }
          },
          loc: {
            start: {
              line: 922,
              column: 37
            },
            end: {
              line: 996,
              column: 5
            }
          },
          line: 922
        },
        "27": {
          name: "(anonymous_27)",
          decl: {
            start: {
              line: 984,
              column: 36
            },
            end: {
              line: 984,
              column: 37
            }
          },
          loc: {
            start: {
              line: 984,
              column: 45
            },
            end: {
              line: 984,
              column: 65
            }
          },
          line: 984
        },
        "28": {
          name: "(anonymous_28)",
          decl: {
            start: {
              line: 1016,
              column: 43
            },
            end: {
              line: 1016,
              column: 44
            }
          },
          loc: {
            start: {
              line: 1016,
              column: 61
            },
            end: {
              line: 1020,
              column: 5
            }
          },
          line: 1016
        },
        "29": {
          name: "(anonymous_29)",
          decl: {
            start: {
              line: 1022,
              column: 38
            },
            end: {
              line: 1022,
              column: 39
            }
          },
          loc: {
            start: {
              line: 1022,
              column: 56
            },
            end: {
              line: 1026,
              column: 5
            }
          },
          line: 1022
        },
        "30": {
          name: "(anonymous_30)",
          decl: {
            start: {
              line: 1028,
              column: 36
            },
            end: {
              line: 1028,
              column: 37
            }
          },
          loc: {
            start: {
              line: 1028,
              column: 54
            },
            end: {
              line: 1032,
              column: 5
            }
          },
          line: 1028
        },
        "31": {
          name: "(anonymous_31)",
          decl: {
            start: {
              line: 1034,
              column: 37
            },
            end: {
              line: 1034,
              column: 38
            }
          },
          loc: {
            start: {
              line: 1034,
              column: 55
            },
            end: {
              line: 1038,
              column: 5
            }
          },
          line: 1034
        },
        "32": {
          name: "disposeChartWater",
          decl: {
            start: {
              line: 1045,
              column: 19
            },
            end: {
              line: 1045,
              column: 36
            }
          },
          loc: {
            start: {
              line: 1045,
              column: 55
            },
            end: {
              line: 1056,
              column: 5
            }
          },
          line: 1045
        },
        "33": {
          name: "pieChart1",
          decl: {
            start: {
              line: 1157,
              column: 19
            },
            end: {
              line: 1157,
              column: 28
            }
          },
          loc: {
            start: {
              line: 1157,
              column: 31
            },
            end: {
              line: 1261,
              column: 5
            }
          },
          line: 1157
        },
        "34": {
          name: "(anonymous_34)",
          decl: {
            start: {
              line: 1191,
              column: 27
            },
            end: {
              line: 1191,
              column: 28
            }
          },
          loc: {
            start: {
              line: 1191,
              column: 39
            },
            end: {
              line: 1260,
              column: 9
            }
          },
          line: 1191
        },
        "35": {
          name: "lineChartMonthlyWater",
          decl: {
            start: {
              line: 1266,
              column: 19
            },
            end: {
              line: 1266,
              column: 40
            }
          },
          loc: {
            start: {
              line: 1266,
              column: 43
            },
            end: {
              line: 1416,
              column: 5
            }
          },
          line: 1266
        },
        "36": {
          name: "(anonymous_36)",
          decl: {
            start: {
              line: 1267,
              column: 22
            },
            end: {
              line: 1267,
              column: 23
            }
          },
          loc: {
            start: {
              line: 1267,
              column: 40
            },
            end: {
              line: 1415,
              column: 9
            }
          },
          line: 1267
        },
        "37": {
          name: "(anonymous_37)",
          decl: {
            start: {
              line: 1315,
              column: 71
            },
            end: {
              line: 1315,
              column: 72
            }
          },
          loc: {
            start: {
              line: 1315,
              column: 80
            },
            end: {
              line: 1315,
              column: 117
            }
          },
          line: 1315
        },
        "38": {
          name: "(anonymous_38)",
          decl: {
            start: {
              line: 1343,
              column: 32
            },
            end: {
              line: 1343,
              column: 33
            }
          },
          loc: {
            start: {
              line: 1343,
              column: 40
            },
            end: {
              line: 1355,
              column: 13
            }
          },
          line: 1343
        },
        "39": {
          name: "createSeries",
          decl: {
            start: {
              line: 1372,
              column: 21
            },
            end: {
              line: 1372,
              column: 33
            }
          },
          loc: {
            start: {
              line: 1372,
              column: 59
            },
            end: {
              line: 1394,
              column: 13
            }
          },
          line: 1372
        },
        "40": {
          name: "(anonymous_40)",
          decl: {
            start: {
              line: 1385,
              column: 43
            },
            end: {
              line: 1385,
              column: 44
            }
          },
          loc: {
            start: {
              line: 1385,
              column: 67
            },
            end: {
              line: 1391,
              column: 17
            }
          },
          line: 1385
        },
        "41": {
          name: "daterangeWater",
          decl: {
            start: {
              line: 1543,
              column: 19
            },
            end: {
              line: 1543,
              column: 33
            }
          },
          loc: {
            start: {
              line: 1543,
              column: 36
            },
            end: {
              line: 1995,
              column: 5
            }
          },
          line: 1543
        },
        "42": {
          name: "(anonymous_42)",
          decl: {
            start: {
              line: 1544,
              column: 20
            },
            end: {
              line: 1544,
              column: 21
            }
          },
          loc: {
            start: {
              line: 1544,
              column: 38
            },
            end: {
              line: 1693,
              column: 9
            }
          },
          line: 1544
        },
        "43": {
          name: "(anonymous_43)",
          decl: {
            start: {
              line: 1594,
              column: 71
            },
            end: {
              line: 1594,
              column: 72
            }
          },
          loc: {
            start: {
              line: 1594,
              column: 80
            },
            end: {
              line: 1594,
              column: 117
            }
          },
          line: 1594
        },
        "44": {
          name: "(anonymous_44)",
          decl: {
            start: {
              line: 1622,
              column: 32
            },
            end: {
              line: 1622,
              column: 33
            }
          },
          loc: {
            start: {
              line: 1622,
              column: 40
            },
            end: {
              line: 1634,
              column: 13
            }
          },
          line: 1622
        },
        "45": {
          name: "createSeries",
          decl: {
            start: {
              line: 1651,
              column: 21
            },
            end: {
              line: 1651,
              column: 33
            }
          },
          loc: {
            start: {
              line: 1651,
              column: 59
            },
            end: {
              line: 1673,
              column: 13
            }
          },
          line: 1651
        },
        "46": {
          name: "(anonymous_46)",
          decl: {
            start: {
              line: 1664,
              column: 43
            },
            end: {
              line: 1664,
              column: 44
            }
          },
          loc: {
            start: {
              line: 1664,
              column: 67
            },
            end: {
              line: 1670,
              column: 17
            }
          },
          line: 1664
        },
        "47": {
          name: "showClusteredBarChart1",
          decl: {
            start: {
              line: 2134,
              column: 19
            },
            end: {
              line: 2134,
              column: 41
            }
          },
          loc: {
            start: {
              line: 2134,
              column: 44
            },
            end: {
              line: 2290,
              column: 5
            }
          },
          line: 2134
        },
        "48": {
          name: "(anonymous_48)",
          decl: {
            start: {
              line: 2187,
              column: 14
            },
            end: {
              line: 2187,
              column: 15
            }
          },
          loc: {
            start: {
              line: 2187,
              column: 26
            },
            end: {
              line: 2288,
              column: 1
            }
          },
          line: 2187
        },
        "49": {
          name: "createSeries",
          decl: {
            start: {
              line: 2230,
              column: 13
            },
            end: {
              line: 2230,
              column: 25
            }
          },
          loc: {
            start: {
              line: 2230,
              column: 46
            },
            end: {
              line: 2250,
              column: 5
            }
          },
          line: 2230
        },
        "50": {
          name: "(anonymous_50)",
          decl: {
            start: {
              line: 2253,
              column: 41
            },
            end: {
              line: 2253,
              column: 42
            }
          },
          loc: {
            start: {
              line: 2253,
              column: 60
            },
            end: {
              line: 2257,
              column: 5
            }
          },
          line: 2253
        },
        "51": {
          name: "(anonymous_51)",
          decl: {
            start: {
              line: 2264,
              column: 42
            },
            end: {
              line: 2264,
              column: 43
            }
          },
          loc: {
            start: {
              line: 2264,
              column: 54
            },
            end: {
              line: 2282,
              column: 5
            }
          },
          line: 2264
        },
        "52": {
          name: "(anonymous_52)",
          decl: {
            start: {
              line: 2266,
              column: 32
            },
            end: {
              line: 2266,
              column: 33
            }
          },
          loc: {
            start: {
              line: 2266,
              column: 50
            },
            end: {
              line: 2281,
              column: 9
            }
          },
          line: 2266
        },
        "53": {
          name: "(anonymous_53)",
          decl: {
            start: {
              line: 2270,
              column: 35
            },
            end: {
              line: 2270,
              column: 36
            }
          },
          loc: {
            start: {
              line: 2270,
              column: 60
            },
            end: {
              line: 2272,
              column: 13
            }
          },
          line: 2270
        },
        "54": {
          name: "(anonymous_54)",
          decl: {
            start: {
              line: 2296,
              column: 53
            },
            end: {
              line: 2296,
              column: 54
            }
          },
          loc: {
            start: {
              line: 2296,
              column: 71
            },
            end: {
              line: 2299,
              column: 5
            }
          },
          line: 2296
        },
        "55": {
          name: "(anonymous_55)",
          decl: {
            start: {
              line: 2301,
              column: 40
            },
            end: {
              line: 2301,
              column: 41
            }
          },
          loc: {
            start: {
              line: 2301,
              column: 58
            },
            end: {
              line: 2304,
              column: 5
            }
          },
          line: 2301
        },
        "56": {
          name: "(anonymous_56)",
          decl: {
            start: {
              line: 2306,
              column: 38
            },
            end: {
              line: 2306,
              column: 39
            }
          },
          loc: {
            start: {
              line: 2306,
              column: 56
            },
            end: {
              line: 2309,
              column: 5
            }
          },
          line: 2306
        },
        "57": {
          name: "(anonymous_57)",
          decl: {
            start: {
              line: 2311,
              column: 39
            },
            end: {
              line: 2311,
              column: 40
            }
          },
          loc: {
            start: {
              line: 2311,
              column: 57
            },
            end: {
              line: 2314,
              column: 5
            }
          },
          line: 2311
        },
        "58": {
          name: "disposeChartPower",
          decl: {
            start: {
              line: 2319,
              column: 19
            },
            end: {
              line: 2319,
              column: 36
            }
          },
          loc: {
            start: {
              line: 2319,
              column: 55
            },
            end: {
              line: 2329,
              column: 5
            }
          },
          line: 2319
        },
        "59": {
          name: "lineChart4",
          decl: {
            start: {
              line: 2465,
              column: 19
            },
            end: {
              line: 2465,
              column: 29
            }
          },
          loc: {
            start: {
              line: 2465,
              column: 32
            },
            end: {
              line: 2588,
              column: 5
            }
          },
          line: 2465
        },
        "60": {
          name: "(anonymous_60)",
          decl: {
            start: {
              line: 2517,
              column: 22
            },
            end: {
              line: 2517,
              column: 23
            }
          },
          loc: {
            start: {
              line: 2517,
              column: 34
            },
            end: {
              line: 2587,
              column: 9
            }
          },
          line: 2517
        },
        "61": {
          name: "(anonymous_61)",
          decl: {
            start: {
              line: 2526,
              column: 40
            },
            end: {
              line: 2526,
              column: 41
            }
          },
          loc: {
            start: {
              line: 2526,
              column: 58
            },
            end: {
              line: 2529,
              column: 13
            }
          },
          line: 2526
        },
        "62": {
          name: "barChart",
          decl: {
            start: {
              line: 2591,
              column: 19
            },
            end: {
              line: 2591,
              column: 27
            }
          },
          loc: {
            start: {
              line: 2591,
              column: 30
            },
            end: {
              line: 2739,
              column: 5
            }
          },
          line: 2591
        },
        "63": {
          name: "(anonymous_63)",
          decl: {
            start: {
              line: 2592,
              column: 22
            },
            end: {
              line: 2592,
              column: 23
            }
          },
          loc: {
            start: {
              line: 2592,
              column: 40
            },
            end: {
              line: 2738,
              column: 9
            }
          },
          line: 2592
        },
        "64": {
          name: "(anonymous_64)",
          decl: {
            start: {
              line: 2637,
              column: 71
            },
            end: {
              line: 2637,
              column: 72
            }
          },
          loc: {
            start: {
              line: 2637,
              column: 80
            },
            end: {
              line: 2637,
              column: 117
            }
          },
          line: 2637
        },
        "65": {
          name: "(anonymous_65)",
          decl: {
            start: {
              line: 2668,
              column: 32
            },
            end: {
              line: 2668,
              column: 33
            }
          },
          loc: {
            start: {
              line: 2668,
              column: 40
            },
            end: {
              line: 2680,
              column: 13
            }
          },
          line: 2668
        },
        "66": {
          name: "createSeries",
          decl: {
            start: {
              line: 2697,
              column: 21
            },
            end: {
              line: 2697,
              column: 33
            }
          },
          loc: {
            start: {
              line: 2697,
              column: 59
            },
            end: {
              line: 2719,
              column: 13
            }
          },
          line: 2697
        },
        "67": {
          name: "(anonymous_67)",
          decl: {
            start: {
              line: 2710,
              column: 43
            },
            end: {
              line: 2710,
              column: 44
            }
          },
          loc: {
            start: {
              line: 2710,
              column: 67
            },
            end: {
              line: 2716,
              column: 17
            }
          },
          line: 2710
        },
        "68": {
          name: "lineChartMonthlyPower",
          decl: {
            start: {
              line: 2741,
              column: 19
            },
            end: {
              line: 2741,
              column: 40
            }
          },
          loc: {
            start: {
              line: 2741,
              column: 43
            },
            end: {
              line: 2892,
              column: 5
            }
          },
          line: 2741
        },
        "69": {
          name: "(anonymous_69)",
          decl: {
            start: {
              line: 2742,
              column: 22
            },
            end: {
              line: 2742,
              column: 23
            }
          },
          loc: {
            start: {
              line: 2742,
              column: 40
            },
            end: {
              line: 2890,
              column: 9
            }
          },
          line: 2742
        },
        "70": {
          name: "(anonymous_70)",
          decl: {
            start: {
              line: 2789,
              column: 71
            },
            end: {
              line: 2789,
              column: 72
            }
          },
          loc: {
            start: {
              line: 2789,
              column: 80
            },
            end: {
              line: 2789,
              column: 117
            }
          },
          line: 2789
        },
        "71": {
          name: "(anonymous_71)",
          decl: {
            start: {
              line: 2820,
              column: 32
            },
            end: {
              line: 2820,
              column: 33
            }
          },
          loc: {
            start: {
              line: 2820,
              column: 40
            },
            end: {
              line: 2832,
              column: 13
            }
          },
          line: 2820
        },
        "72": {
          name: "createSeries",
          decl: {
            start: {
              line: 2849,
              column: 21
            },
            end: {
              line: 2849,
              column: 33
            }
          },
          loc: {
            start: {
              line: 2849,
              column: 59
            },
            end: {
              line: 2871,
              column: 13
            }
          },
          line: 2849
        },
        "73": {
          name: "(anonymous_73)",
          decl: {
            start: {
              line: 2862,
              column: 43
            },
            end: {
              line: 2862,
              column: 44
            }
          },
          loc: {
            start: {
              line: 2862,
              column: 67
            },
            end: {
              line: 2868,
              column: 17
            }
          },
          line: 2862
        },
        "74": {
          name: "lineChart3",
          decl: {
            start: {
              line: 2894,
              column: 19
            },
            end: {
              line: 2894,
              column: 29
            }
          },
          loc: {
            start: {
              line: 2894,
              column: 32
            },
            end: {
              line: 3021,
              column: 5
            }
          },
          line: 2894
        },
        "75": {
          name: "(anonymous_75)",
          decl: {
            start: {
              line: 2896,
              column: 22
            },
            end: {
              line: 2896,
              column: 23
            }
          },
          loc: {
            start: {
              line: 2896,
              column: 40
            },
            end: {
              line: 3017,
              column: 9
            }
          },
          line: 2896
        },
        "76": {
          name: "(anonymous_76)",
          decl: {
            start: {
              line: 2910,
              column: 42
            },
            end: {
              line: 2910,
              column: 43
            }
          },
          loc: {
            start: {
              line: 2910,
              column: 51
            },
            end: {
              line: 2912,
              column: 13
            }
          },
          line: 2910
        },
        "77": {
          name: "(anonymous_77)",
          decl: {
            start: {
              line: 3004,
              column: 39
            },
            end: {
              line: 3004,
              column: 40
            }
          },
          loc: {
            start: {
              line: 3004,
              column: 63
            },
            end: {
              line: 3006,
              column: 13
            }
          },
          line: 3004
        },
        "78": {
          name: "(anonymous_78)",
          decl: {
            start: {
              line: 3023,
              column: 53
            },
            end: {
              line: 3023,
              column: 54
            }
          },
          loc: {
            start: {
              line: 3023,
              column: 71
            },
            end: {
              line: 3025,
              column: 5
            }
          },
          line: 3023
        },
        "79": {
          name: "(anonymous_79)",
          decl: {
            start: {
              line: 3027,
              column: 40
            },
            end: {
              line: 3027,
              column: 41
            }
          },
          loc: {
            start: {
              line: 3027,
              column: 58
            },
            end: {
              line: 3030,
              column: 5
            }
          },
          line: 3027
        },
        "80": {
          name: "(anonymous_80)",
          decl: {
            start: {
              line: 3032,
              column: 38
            },
            end: {
              line: 3032,
              column: 39
            }
          },
          loc: {
            start: {
              line: 3032,
              column: 56
            },
            end: {
              line: 3035,
              column: 5
            }
          },
          line: 3032
        },
        "81": {
          name: "(anonymous_81)",
          decl: {
            start: {
              line: 3037,
              column: 39
            },
            end: {
              line: 3037,
              column: 40
            }
          },
          loc: {
            start: {
              line: 3037,
              column: 57
            },
            end: {
              line: 3040,
              column: 5
            }
          },
          line: 3037
        },
        "82": {
          name: "removeChart",
          decl: {
            start: {
              line: 3046,
              column: 20
            },
            end: {
              line: 3046,
              column: 31
            }
          },
          loc: {
            start: {
              line: 3046,
              column: 50
            },
            end: {
              line: 3057,
              column: 5
            }
          },
          line: 3046
        },
        "83": {
          name: "donutChart",
          decl: {
            start: {
              line: 3060,
              column: 19
            },
            end: {
              line: 3060,
              column: 29
            }
          },
          loc: {
            start: {
              line: 3060,
              column: 32
            },
            end: {
              line: 3155,
              column: 5
            }
          },
          line: 3060
        },
        "84": {
          name: "occupacyBarChart1",
          decl: {
            start: {
              line: 3163,
              column: 19
            },
            end: {
              line: 3163,
              column: 36
            }
          },
          loc: {
            start: {
              line: 3163,
              column: 39
            },
            end: {
              line: 3275,
              column: 5
            }
          },
          line: 3163
        },
        "85": {
          name: "(anonymous_85)",
          decl: {
            start: {
              line: 3213,
              column: 27
            },
            end: {
              line: 3213,
              column: 28
            }
          },
          loc: {
            start: {
              line: 3213,
              column: 42
            },
            end: {
              line: 3215,
              column: 17
            }
          },
          line: 3213
        },
        "86": {
          name: "(anonymous_86)",
          decl: {
            start: {
              line: 3279,
              column: 36
            },
            end: {
              line: 3279,
              column: 37
            }
          },
          loc: {
            start: {
              line: 3279,
              column: 54
            },
            end: {
              line: 3286,
              column: 5
            }
          },
          line: 3279
        },
        "87": {
          name: "(anonymous_87)",
          decl: {
            start: {
              line: 3287,
              column: 36
            },
            end: {
              line: 3287,
              column: 37
            }
          },
          loc: {
            start: {
              line: 3287,
              column: 54
            },
            end: {
              line: 3293,
              column: 5
            }
          },
          line: 3287
        },
        "88": {
          name: "occupacyLine",
          decl: {
            start: {
              line: 3294,
              column: 19
            },
            end: {
              line: 3294,
              column: 31
            }
          },
          loc: {
            start: {
              line: 3294,
              column: 34
            },
            end: {
              line: 3442,
              column: 5
            }
          },
          line: 3294
        },
        "89": {
          name: "(anonymous_89)",
          decl: {
            start: {
              line: 3295,
              column: 22
            },
            end: {
              line: 3295,
              column: 23
            }
          },
          loc: {
            start: {
              line: 3295,
              column: 40
            },
            end: {
              line: 3441,
              column: 9
            }
          },
          line: 3295
        },
        "90": {
          name: "(anonymous_90)",
          decl: {
            start: {
              line: 3340,
              column: 71
            },
            end: {
              line: 3340,
              column: 72
            }
          },
          loc: {
            start: {
              line: 3340,
              column: 80
            },
            end: {
              line: 3340,
              column: 117
            }
          },
          line: 3340
        },
        "91": {
          name: "(anonymous_91)",
          decl: {
            start: {
              line: 3371,
              column: 32
            },
            end: {
              line: 3371,
              column: 33
            }
          },
          loc: {
            start: {
              line: 3371,
              column: 40
            },
            end: {
              line: 3383,
              column: 13
            }
          },
          line: 3371
        },
        "92": {
          name: "createSeries",
          decl: {
            start: {
              line: 3400,
              column: 21
            },
            end: {
              line: 3400,
              column: 33
            }
          },
          loc: {
            start: {
              line: 3400,
              column: 59
            },
            end: {
              line: 3422,
              column: 13
            }
          },
          line: 3400
        },
        "93": {
          name: "(anonymous_93)",
          decl: {
            start: {
              line: 3413,
              column: 43
            },
            end: {
              line: 3413,
              column: 44
            }
          },
          loc: {
            start: {
              line: 3413,
              column: 67
            },
            end: {
              line: 3419,
              column: 17
            }
          },
          line: 3413
        },
        "94": {
          name: "occupacyBar",
          decl: {
            start: {
              line: 3444,
              column: 19
            },
            end: {
              line: 3444,
              column: 30
            }
          },
          loc: {
            start: {
              line: 3444,
              column: 33
            },
            end: {
              line: 3552,
              column: 5
            }
          },
          line: 3444
        },
        "95": {
          name: "(anonymous_95)",
          decl: {
            start: {
              line: 3532,
              column: 35
            },
            end: {
              line: 3532,
              column: 36
            }
          },
          loc: {
            start: {
              line: 3532,
              column: 50
            },
            end: {
              line: 3534,
              column: 25
            }
          },
          line: 3532
        },
        "96": {
          name: "lineChartMonthlyOccupancy",
          decl: {
            start: {
              line: 3554,
              column: 19
            },
            end: {
              line: 3554,
              column: 44
            }
          },
          loc: {
            start: {
              line: 3554,
              column: 47
            },
            end: {
              line: 3704,
              column: 5
            }
          },
          line: 3554
        },
        "97": {
          name: "(anonymous_97)",
          decl: {
            start: {
              line: 3555,
              column: 22
            },
            end: {
              line: 3555,
              column: 23
            }
          },
          loc: {
            start: {
              line: 3555,
              column: 40
            },
            end: {
              line: 3702,
              column: 9
            }
          },
          line: 3555
        },
        "98": {
          name: "(anonymous_98)",
          decl: {
            start: {
              line: 3601,
              column: 71
            },
            end: {
              line: 3601,
              column: 72
            }
          },
          loc: {
            start: {
              line: 3601,
              column: 80
            },
            end: {
              line: 3601,
              column: 117
            }
          },
          line: 3601
        },
        "99": {
          name: "(anonymous_99)",
          decl: {
            start: {
              line: 3632,
              column: 32
            },
            end: {
              line: 3632,
              column: 33
            }
          },
          loc: {
            start: {
              line: 3632,
              column: 40
            },
            end: {
              line: 3644,
              column: 13
            }
          },
          line: 3632
        },
        "100": {
          name: "createSeries",
          decl: {
            start: {
              line: 3661,
              column: 21
            },
            end: {
              line: 3661,
              column: 33
            }
          },
          loc: {
            start: {
              line: 3661,
              column: 59
            },
            end: {
              line: 3683,
              column: 13
            }
          },
          line: 3661
        },
        "101": {
          name: "(anonymous_101)",
          decl: {
            start: {
              line: 3674,
              column: 43
            },
            end: {
              line: 3674,
              column: 44
            }
          },
          loc: {
            start: {
              line: 3674,
              column: 67
            },
            end: {
              line: 3680,
              column: 17
            }
          },
          line: 3674
        },
        "102": {
          name: "(anonymous_102)",
          decl: {
            start: {
              line: 3705,
              column: 61
            },
            end: {
              line: 3705,
              column: 62
            }
          },
          loc: {
            start: {
              line: 3705,
              column: 79
            },
            end: {
              line: 3707,
              column: 5
            }
          },
          line: 3705
        },
        "103": {
          name: "(anonymous_103)",
          decl: {
            start: {
              line: 3708,
              column: 42
            },
            end: {
              line: 3708,
              column: 43
            }
          },
          loc: {
            start: {
              line: 3708,
              column: 60
            },
            end: {
              line: 3711,
              column: 5
            }
          },
          line: 3708
        },
        "104": {
          name: "(anonymous_104)",
          decl: {
            start: {
              line: 3712,
              column: 44
            },
            end: {
              line: 3712,
              column: 45
            }
          },
          loc: {
            start: {
              line: 3712,
              column: 62
            },
            end: {
              line: 3715,
              column: 5
            }
          },
          line: 3712
        },
        "105": {
          name: "(anonymous_105)",
          decl: {
            start: {
              line: 3716,
              column: 43
            },
            end: {
              line: 3716,
              column: 44
            }
          },
          loc: {
            start: {
              line: 3716,
              column: 61
            },
            end: {
              line: 3719,
              column: 5
            }
          },
          line: 3716
        },
        "106": {
          name: "replaceIndoorChart",
          decl: {
            start: {
              line: 3726,
              column: 15
            },
            end: {
              line: 3726,
              column: 33
            }
          },
          loc: {
            start: {
              line: 3726,
              column: 52
            },
            end: {
              line: 3741,
              column: 1
            }
          },
          line: 3726
        },
        "107": {
          name: "createPieChart",
          decl: {
            start: {
              line: 3747,
              column: 15
            },
            end: {
              line: 3747,
              column: 29
            }
          },
          loc: {
            start: {
              line: 3747,
              column: 32
            },
            end: {
              line: 3918,
              column: 1
            }
          },
          line: 3747
        },
        "108": {
          name: "(anonymous_108)",
          decl: {
            start: {
              line: 3847,
              column: 30
            },
            end: {
              line: 3847,
              column: 31
            }
          },
          loc: {
            start: {
              line: 3847,
              column: 62
            },
            end: {
              line: 3856,
              column: 21
            }
          },
          line: 3847
        },
        "109": {
          name: "(anonymous_109)",
          decl: {
            start: {
              line: 3849,
              column: 78
            },
            end: {
              line: 3849,
              column: 79
            }
          },
          loc: {
            start: {
              line: 3849,
              column: 88
            },
            end: {
              line: 3849,
              column: 93
            }
          },
          line: 3849
        },
        "110": {
          name: "(anonymous_110)",
          decl: {
            start: {
              line: 3879,
              column: 39
            },
            end: {
              line: 3879,
              column: 40
            }
          },
          loc: {
            start: {
              line: 3879,
              column: 52
            },
            end: {
              line: 3883,
              column: 29
            }
          },
          line: 3879
        },
        "111": {
          name: "(anonymous_111)",
          decl: {
            start: {
              line: 3880,
              column: 81
            },
            end: {
              line: 3880,
              column: 82
            }
          },
          loc: {
            start: {
              line: 3880,
              column: 91
            },
            end: {
              line: 3880,
              column: 96
            }
          },
          line: 3880
        },
        "112": {
          name: "(anonymous_112)",
          decl: {
            start: {
              line: 3902,
              column: 27
            },
            end: {
              line: 3902,
              column: 28
            }
          },
          loc: {
            start: {
              line: 3902,
              column: 55
            },
            end: {
              line: 3904,
              column: 17
            }
          },
          line: 3902
        },
        "113": {
          name: "startInterval",
          decl: {
            start: {
              line: 3928,
              column: 9
            },
            end: {
              line: 3928,
              column: 22
            }
          },
          loc: {
            start: {
              line: 3928,
              column: 25
            },
            end: {
              line: 3932,
              column: 1
            }
          },
          line: 3928
        },
        "114": {
          name: "(anonymous_114)",
          decl: {
            start: {
              line: 3930,
              column: 32
            },
            end: {
              line: 3930,
              column: 33
            }
          },
          loc: {
            start: {
              line: 3930,
              column: 38
            },
            end: {
              line: 3930,
              column: 72
            }
          },
          line: 3930
        },
        "115": {
          name: "stopInterval",
          decl: {
            start: {
              line: 3935,
              column: 9
            },
            end: {
              line: 3935,
              column: 21
            }
          },
          loc: {
            start: {
              line: 3935,
              column: 24
            },
            end: {
              line: 3941,
              column: 1
            }
          },
          line: 3935
        },
        "116": {
          name: "initialize",
          decl: {
            start: {
              line: 3942,
              column: 16
            },
            end: {
              line: 3942,
              column: 26
            }
          },
          loc: {
            start: {
              line: 3942,
              column: 29
            },
            end: {
              line: 3945,
              column: 1
            }
          },
          line: 3942
        },
        "117": {
          name: "aqiDonut1",
          decl: {
            start: {
              line: 3950,
              column: 19
            },
            end: {
              line: 3950,
              column: 28
            }
          },
          loc: {
            start: {
              line: 3950,
              column: 31
            },
            end: {
              line: 4110,
              column: 5
            }
          },
          line: 3950
        },
        "118": {
          name: "(anonymous_118)",
          decl: {
            start: {
              line: 4014,
              column: 39
            },
            end: {
              line: 4014,
              column: 40
            }
          },
          loc: {
            start: {
              line: 4014,
              column: 54
            },
            end: {
              line: 4016,
              column: 29
            }
          },
          line: 4014
        },
        "119": {
          name: "(anonymous_119)",
          decl: {
            start: {
              line: 4042,
              column: 27
            },
            end: {
              line: 4042,
              column: 28
            }
          },
          loc: {
            start: {
              line: 4042,
              column: 55
            },
            end: {
              line: 4044,
              column: 17
            }
          },
          line: 4042
        },
        "120": {
          name: "(anonymous_120)",
          decl: {
            start: {
              line: 4074,
              column: 39
            },
            end: {
              line: 4074,
              column: 40
            }
          },
          loc: {
            start: {
              line: 4074,
              column: 54
            },
            end: {
              line: 4076,
              column: 29
            }
          },
          line: 4074
        },
        "121": {
          name: "(anonymous_121)",
          decl: {
            start: {
              line: 4102,
              column: 27
            },
            end: {
              line: 4102,
              column: 28
            }
          },
          loc: {
            start: {
              line: 4102,
              column: 55
            },
            end: {
              line: 4104,
              column: 17
            }
          },
          line: 4102
        },
        "122": {
          name: "(anonymous_122)",
          decl: {
            start: {
              line: 4160,
              column: 28
            },
            end: {
              line: 4160,
              column: 29
            }
          },
          loc: {
            start: {
              line: 4160,
              column: 46
            },
            end: {
              line: 4172,
              column: 1
            }
          },
          line: 4160
        },
        "123": {
          name: "(anonymous_123)",
          decl: {
            start: {
              line: 4173,
              column: 28
            },
            end: {
              line: 4173,
              column: 29
            }
          },
          loc: {
            start: {
              line: 4173,
              column: 46
            },
            end: {
              line: 4180,
              column: 1
            }
          },
          line: 4173
        },
        "124": {
          name: "createBarChart",
          decl: {
            start: {
              line: 4183,
              column: 19
            },
            end: {
              line: 4183,
              column: 33
            }
          },
          loc: {
            start: {
              line: 4183,
              column: 36
            },
            end: {
              line: 4585,
              column: 9
            }
          },
          line: 4183
        },
        "125": {
          name: "(anonymous_125)",
          decl: {
            start: {
              line: 4456,
              column: 18
            },
            end: {
              line: 4456,
              column: 19
            }
          },
          loc: {
            start: {
              line: 4456,
              column: 36
            },
            end: {
              line: 4583,
              column: 9
            }
          },
          line: 4456
        },
        "126": {
          name: "(anonymous_126)",
          decl: {
            start: {
              line: 4496,
              column: 67
            },
            end: {
              line: 4496,
              column: 68
            }
          },
          loc: {
            start: {
              line: 4496,
              column: 76
            },
            end: {
              line: 4496,
              column: 113
            }
          },
          line: 4496
        },
        "127": {
          name: "(anonymous_127)",
          decl: {
            start: {
              line: 4528,
              column: 32
            },
            end: {
              line: 4528,
              column: 33
            }
          },
          loc: {
            start: {
              line: 4528,
              column: 40
            },
            end: {
              line: 4536,
              column: 13
            }
          },
          line: 4528
        },
        "128": {
          name: "createSeries",
          decl: {
            start: {
              line: 4549,
              column: 21
            },
            end: {
              line: 4549,
              column: 33
            }
          },
          loc: {
            start: {
              line: 4549,
              column: 59
            },
            end: {
              line: 4572,
              column: 13
            }
          },
          line: 4549
        },
        "129": {
          name: "(anonymous_129)",
          decl: {
            start: {
              line: 4563,
              column: 43
            },
            end: {
              line: 4563,
              column: 44
            }
          },
          loc: {
            start: {
              line: 4563,
              column: 67
            },
            end: {
              line: 4569,
              column: 17
            }
          },
          line: 4563
        },
        "130": {
          name: "aqiBarChart",
          decl: {
            start: {
              line: 4587,
              column: 19
            },
            end: {
              line: 4587,
              column: 30
            }
          },
          loc: {
            start: {
              line: 4587,
              column: 33
            },
            end: {
              line: 4699,
              column: 5
            }
          },
          line: 4587
        },
        "131": {
          name: "(anonymous_131)",
          decl: {
            start: {
              line: 4679,
              column: 35
            },
            end: {
              line: 4679,
              column: 36
            }
          },
          loc: {
            start: {
              line: 4679,
              column: 50
            },
            end: {
              line: 4681,
              column: 25
            }
          },
          line: 4679
        },
        "132": {
          name: "lineChartMonthlyAqi",
          decl: {
            start: {
              line: 4700,
              column: 19
            },
            end: {
              line: 4700,
              column: 38
            }
          },
          loc: {
            start: {
              line: 4700,
              column: 41
            },
            end: {
              line: 4849,
              column: 5
            }
          },
          line: 4700
        },
        "133": {
          name: "(anonymous_133)",
          decl: {
            start: {
              line: 4701,
              column: 22
            },
            end: {
              line: 4701,
              column: 23
            }
          },
          loc: {
            start: {
              line: 4701,
              column: 40
            },
            end: {
              line: 4848,
              column: 9
            }
          },
          line: 4701
        },
        "134": {
          name: "(anonymous_134)",
          decl: {
            start: {
              line: 4747,
              column: 71
            },
            end: {
              line: 4747,
              column: 72
            }
          },
          loc: {
            start: {
              line: 4747,
              column: 80
            },
            end: {
              line: 4747,
              column: 117
            }
          },
          line: 4747
        },
        "135": {
          name: "(anonymous_135)",
          decl: {
            start: {
              line: 4778,
              column: 32
            },
            end: {
              line: 4778,
              column: 33
            }
          },
          loc: {
            start: {
              line: 4778,
              column: 40
            },
            end: {
              line: 4790,
              column: 13
            }
          },
          line: 4778
        },
        "136": {
          name: "createSeries",
          decl: {
            start: {
              line: 4807,
              column: 21
            },
            end: {
              line: 4807,
              column: 33
            }
          },
          loc: {
            start: {
              line: 4807,
              column: 59
            },
            end: {
              line: 4829,
              column: 13
            }
          },
          line: 4807
        },
        "137": {
          name: "(anonymous_137)",
          decl: {
            start: {
              line: 4820,
              column: 43
            },
            end: {
              line: 4820,
              column: 44
            }
          },
          loc: {
            start: {
              line: 4820,
              column: 67
            },
            end: {
              line: 4826,
              column: 17
            }
          },
          line: 4820
        },
        "138": {
          name: "(anonymous_138)",
          decl: {
            start: {
              line: 4868,
              column: 45
            },
            end: {
              line: 4868,
              column: 46
            }
          },
          loc: {
            start: {
              line: 4868,
              column: 63
            },
            end: {
              line: 4872,
              column: 5
            }
          },
          line: 4868
        },
        "139": {
          name: "(anonymous_139)",
          decl: {
            start: {
              line: 4873,
              column: 36
            },
            end: {
              line: 4873,
              column: 37
            }
          },
          loc: {
            start: {
              line: 4873,
              column: 54
            },
            end: {
              line: 4876,
              column: 5
            }
          },
          line: 4873
        },
        "140": {
          name: "(anonymous_140)",
          decl: {
            start: {
              line: 4875,
              column: 36
            },
            end: {
              line: 4875,
              column: 37
            }
          },
          loc: {
            start: {
              line: 4875,
              column: 42
            },
            end: {
              line: 4875,
              column: 76
            }
          },
          line: 4875
        },
        "141": {
          name: "(anonymous_141)",
          decl: {
            start: {
              line: 4877,
              column: 38
            },
            end: {
              line: 4877,
              column: 39
            }
          },
          loc: {
            start: {
              line: 4877,
              column: 56
            },
            end: {
              line: 4881,
              column: 5
            }
          },
          line: 4877
        },
        "142": {
          name: "(anonymous_142)",
          decl: {
            start: {
              line: 4882,
              column: 37
            },
            end: {
              line: 4882,
              column: 38
            }
          },
          loc: {
            start: {
              line: 4882,
              column: 55
            },
            end: {
              line: 4887,
              column: 5
            }
          },
          line: 4882
        },
        "143": {
          name: "replaceEpiChart",
          decl: {
            start: {
              line: 4894,
              column: 19
            },
            end: {
              line: 4894,
              column: 34
            }
          },
          loc: {
            start: {
              line: 4894,
              column: 53
            },
            end: {
              line: 4910,
              column: 5
            }
          },
          line: 4894
        },
        "144": {
          name: "epiDonutChart",
          decl: {
            start: {
              line: 5325,
              column: 15
            },
            end: {
              line: 5325,
              column: 28
            }
          },
          loc: {
            start: {
              line: 5325,
              column: 31
            },
            end: {
              line: 5611,
              column: 1
            }
          },
          line: 5325
        },
        "145": {
          name: "(anonymous_145)",
          decl: {
            start: {
              line: 5493,
              column: 45
            },
            end: {
              line: 5493,
              column: 46
            }
          },
          loc: {
            start: {
              line: 5493,
              column: 62
            },
            end: {
              line: 5530,
              column: 9
            }
          },
          line: 5493
        },
        "146": {
          name: "(anonymous_146)",
          decl: {
            start: {
              line: 5559,
              column: 44
            },
            end: {
              line: 5559,
              column: 45
            }
          },
          loc: {
            start: {
              line: 5559,
              column: 53
            },
            end: {
              line: 5563,
              column: 9
            }
          },
          line: 5559
        },
        "147": {
          name: "epiLine",
          decl: {
            start: {
              line: 5738,
              column: 19
            },
            end: {
              line: 5738,
              column: 26
            }
          },
          loc: {
            start: {
              line: 5738,
              column: 29
            },
            end: {
              line: 5890,
              column: 5
            }
          },
          line: 5738
        },
        "148": {
          name: "(anonymous_148)",
          decl: {
            start: {
              line: 5739,
              column: 22
            },
            end: {
              line: 5739,
              column: 23
            }
          },
          loc: {
            start: {
              line: 5739,
              column: 40
            },
            end: {
              line: 5889,
              column: 9
            }
          },
          line: 5739
        },
        "149": {
          name: "(anonymous_149)",
          decl: {
            start: {
              line: 5789,
              column: 71
            },
            end: {
              line: 5789,
              column: 72
            }
          },
          loc: {
            start: {
              line: 5789,
              column: 80
            },
            end: {
              line: 5789,
              column: 117
            }
          },
          line: 5789
        },
        "150": {
          name: "(anonymous_150)",
          decl: {
            start: {
              line: 5817,
              column: 32
            },
            end: {
              line: 5817,
              column: 33
            }
          },
          loc: {
            start: {
              line: 5817,
              column: 40
            },
            end: {
              line: 5829,
              column: 13
            }
          },
          line: 5817
        },
        "151": {
          name: "createSeries",
          decl: {
            start: {
              line: 5846,
              column: 21
            },
            end: {
              line: 5846,
              column: 33
            }
          },
          loc: {
            start: {
              line: 5846,
              column: 59
            },
            end: {
              line: 5868,
              column: 13
            }
          },
          line: 5846
        },
        "152": {
          name: "(anonymous_152)",
          decl: {
            start: {
              line: 5859,
              column: 43
            },
            end: {
              line: 5859,
              column: 44
            }
          },
          loc: {
            start: {
              line: 5859,
              column: 67
            },
            end: {
              line: 5865,
              column: 17
            }
          },
          line: 5859
        },
        "153": {
          name: "epiBarChart",
          decl: {
            start: {
              line: 5892,
              column: 19
            },
            end: {
              line: 5892,
              column: 30
            }
          },
          loc: {
            start: {
              line: 5892,
              column: 33
            },
            end: {
              line: 6005,
              column: 5
            }
          },
          line: 5892
        },
        "154": {
          name: "(anonymous_154)",
          decl: {
            start: {
              line: 5979,
              column: 31
            },
            end: {
              line: 5979,
              column: 32
            }
          },
          loc: {
            start: {
              line: 5979,
              column: 46
            },
            end: {
              line: 5981,
              column: 21
            }
          },
          line: 5979
        },
        "155": {
          name: "lineChartMonthlyEpi",
          decl: {
            start: {
              line: 6007,
              column: 19
            },
            end: {
              line: 6007,
              column: 38
            }
          },
          loc: {
            start: {
              line: 6007,
              column: 41
            },
            end: {
              line: 6158,
              column: 5
            }
          },
          line: 6007
        },
        "156": {
          name: "(anonymous_156)",
          decl: {
            start: {
              line: 6008,
              column: 22
            },
            end: {
              line: 6008,
              column: 23
            }
          },
          loc: {
            start: {
              line: 6008,
              column: 40
            },
            end: {
              line: 6157,
              column: 9
            }
          },
          line: 6008
        },
        "157": {
          name: "(anonymous_157)",
          decl: {
            start: {
              line: 6056,
              column: 71
            },
            end: {
              line: 6056,
              column: 72
            }
          },
          loc: {
            start: {
              line: 6056,
              column: 80
            },
            end: {
              line: 6056,
              column: 117
            }
          },
          line: 6056
        },
        "158": {
          name: "(anonymous_158)",
          decl: {
            start: {
              line: 6084,
              column: 32
            },
            end: {
              line: 6084,
              column: 33
            }
          },
          loc: {
            start: {
              line: 6084,
              column: 40
            },
            end: {
              line: 6096,
              column: 13
            }
          },
          line: 6084
        },
        "159": {
          name: "createSeries",
          decl: {
            start: {
              line: 6113,
              column: 21
            },
            end: {
              line: 6113,
              column: 33
            }
          },
          loc: {
            start: {
              line: 6113,
              column: 59
            },
            end: {
              line: 6135,
              column: 13
            }
          },
          line: 6113
        },
        "160": {
          name: "(anonymous_160)",
          decl: {
            start: {
              line: 6126,
              column: 43
            },
            end: {
              line: 6126,
              column: 44
            }
          },
          loc: {
            start: {
              line: 6126,
              column: 67
            },
            end: {
              line: 6132,
              column: 17
            }
          },
          line: 6126
        },
        "161": {
          name: "(anonymous_161)",
          decl: {
            start: {
              line: 6160,
              column: 49
            },
            end: {
              line: 6160,
              column: 50
            }
          },
          loc: {
            start: {
              line: 6160,
              column: 67
            },
            end: {
              line: 6162,
              column: 5
            }
          },
          line: 6160
        },
        "162": {
          name: "(anonymous_162)",
          decl: {
            start: {
              line: 6163,
              column: 36
            },
            end: {
              line: 6163,
              column: 37
            }
          },
          loc: {
            start: {
              line: 6163,
              column: 54
            },
            end: {
              line: 6166,
              column: 5
            }
          },
          line: 6163
        },
        "163": {
          name: "(anonymous_163)",
          decl: {
            start: {
              line: 6167,
              column: 38
            },
            end: {
              line: 6167,
              column: 39
            }
          },
          loc: {
            start: {
              line: 6167,
              column: 56
            },
            end: {
              line: 6170,
              column: 5
            }
          },
          line: 6167
        },
        "164": {
          name: "(anonymous_164)",
          decl: {
            start: {
              line: 6171,
              column: 37
            },
            end: {
              line: 6171,
              column: 38
            }
          },
          loc: {
            start: {
              line: 6171,
              column: 55
            },
            end: {
              line: 6174,
              column: 5
            }
          },
          line: 6171
        },
        "165": {
          name: "epiColumnChart",
          decl: {
            start: {
              line: 6177,
              column: 19
            },
            end: {
              line: 6177,
              column: 33
            }
          },
          loc: {
            start: {
              line: 6177,
              column: 36
            },
            end: {
              line: 6307,
              column: 5
            }
          },
          line: 6177
        },
        "166": {
          name: "(anonymous_166)",
          decl: {
            start: {
              line: 6242,
              column: 27
            },
            end: {
              line: 6242,
              column: 28
            }
          },
          loc: {
            start: {
              line: 6242,
              column: 42
            },
            end: {
              line: 6244,
              column: 17
            }
          },
          line: 6242
        },
        "167": {
          name: "(anonymous_167)",
          decl: {
            start: {
              line: 6285,
              column: 31
            },
            end: {
              line: 6285,
              column: 32
            }
          },
          loc: {
            start: {
              line: 6285,
              column: 46
            },
            end: {
              line: 6287,
              column: 21
            }
          },
          line: 6285
        },
        "168": {
          name: "(anonymous_168)",
          decl: {
            start: {
              line: 6309,
              column: 32
            },
            end: {
              line: 6309,
              column: 33
            }
          },
          loc: {
            start: {
              line: 6309,
              column: 55
            },
            end: {
              line: 6318,
              column: 5
            }
          },
          line: 6309
        },
        "169": {
          name: "(anonymous_169)",
          decl: {
            start: {
              line: 6319,
              column: 32
            },
            end: {
              line: 6319,
              column: 33
            }
          },
          loc: {
            start: {
              line: 6319,
              column: 55
            },
            end: {
              line: 6327,
              column: 5
            }
          },
          line: 6319
        },
        "170": {
          name: "getLast12Months",
          decl: {
            start: {
              line: 6331,
              column: 13
            },
            end: {
              line: 6331,
              column: 28
            }
          },
          loc: {
            start: {
              line: 6331,
              column: 31
            },
            end: {
              line: 6342,
              column: 5
            }
          },
          line: 6331
        },
        "171": {
          name: "getLast12Months1",
          decl: {
            start: {
              line: 6366,
              column: 13
            },
            end: {
              line: 6366,
              column: 29
            }
          },
          loc: {
            start: {
              line: 6366,
              column: 32
            },
            end: {
              line: 6381,
              column: 5
            }
          },
          line: 6366
        },
        "172": {
          name: "getRandomData",
          decl: {
            start: {
              line: 6383,
              column: 13
            },
            end: {
              line: 6383,
              column: 26
            }
          },
          loc: {
            start: {
              line: 6383,
              column: 29
            },
            end: {
              line: 6385,
              column: 5
            }
          },
          line: 6383
        },
        "173": {
          name: "(anonymous_173)",
          decl: {
            start: {
              line: 6384,
              column: 42
            },
            end: {
              line: 6384,
              column: 43
            }
          },
          loc: {
            start: {
              line: 6384,
              column: 48
            },
            end: {
              line: 6384,
              column: 84
            }
          },
          line: 6384
        },
        "174": {
          name: "showAlert",
          decl: {
            start: {
              line: 6386,
              column: 19
            },
            end: {
              line: 6386,
              column: 28
            }
          },
          loc: {
            start: {
              line: 6386,
              column: 49
            },
            end: {
              line: 6401,
              column: 5
            }
          },
          line: 6386
        },
        "175": {
          name: "validateDateRange",
          decl: {
            start: {
              line: 6403,
              column: 19
            },
            end: {
              line: 6403,
              column: 36
            }
          },
          loc: {
            start: {
              line: 6403,
              column: 57
            },
            end: {
              line: 6454,
              column: 5
            }
          },
          line: 6403
        },
        "176": {
          name: "normalizeDate",
          decl: {
            start: {
              line: 6500,
              column: 9
            },
            end: {
              line: 6500,
              column: 22
            }
          },
          loc: {
            start: {
              line: 6500,
              column: 29
            },
            end: {
              line: 6505,
              column: 1
            }
          },
          line: 6500
        },
        "177": {
          name: "checkDataAvailability",
          decl: {
            start: {
              line: 6508,
              column: 9
            },
            end: {
              line: 6508,
              column: 30
            }
          },
          loc: {
            start: {
              line: 6508,
              column: 55
            },
            end: {
              line: 6514,
              column: 1
            }
          },
          line: 6508
        },
        "178": {
          name: "(anonymous_178)",
          decl: {
            start: {
              line: 6509,
              column: 54
            },
            end: {
              line: 6509,
              column: 55
            }
          },
          loc: {
            start: {
              line: 6509,
              column: 63
            },
            end: {
              line: 6509,
              column: 74
            }
          },
          line: 6509
        },
        "179": {
          name: "clearDateInputs",
          decl: {
            start: {
              line: 6524,
              column: 19
            },
            end: {
              line: 6524,
              column: 34
            }
          },
          loc: {
            start: {
              line: 6524,
              column: 37
            },
            end: {
              line: 6527,
              column: 5
            }
          },
          line: 6524
        },
        "180": {
          name: "clearDateInputsWater",
          decl: {
            start: {
              line: 6528,
              column: 19
            },
            end: {
              line: 6528,
              column: 39
            }
          },
          loc: {
            start: {
              line: 6528,
              column: 42
            },
            end: {
              line: 6531,
              column: 5
            }
          },
          line: 6528
        },
        "181": {
          name: "clearDateInputsPower",
          decl: {
            start: {
              line: 6532,
              column: 19
            },
            end: {
              line: 6532,
              column: 39
            }
          },
          loc: {
            start: {
              line: 6532,
              column: 42
            },
            end: {
              line: 6535,
              column: 5
            }
          },
          line: 6532
        },
        "182": {
          name: "clearDateInputsOccupancy",
          decl: {
            start: {
              line: 6536,
              column: 19
            },
            end: {
              line: 6536,
              column: 43
            }
          },
          loc: {
            start: {
              line: 6536,
              column: 46
            },
            end: {
              line: 6539,
              column: 5
            }
          },
          line: 6536
        },
        "183": {
          name: "clearDateInputsAqi",
          decl: {
            start: {
              line: 6540,
              column: 19
            },
            end: {
              line: 6540,
              column: 37
            }
          },
          loc: {
            start: {
              line: 6540,
              column: 40
            },
            end: {
              line: 6543,
              column: 5
            }
          },
          line: 6540
        },
        "184": {
          name: "clearDateInputsEpi",
          decl: {
            start: {
              line: 6544,
              column: 19
            },
            end: {
              line: 6544,
              column: 37
            }
          },
          loc: {
            start: {
              line: 6544,
              column: 40
            },
            end: {
              line: 6547,
              column: 5
            }
          },
          line: 6544
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 29,
              column: 8
            },
            end: {
              line: 37,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 29,
              column: 8
            },
            end: {
              line: 37,
              column: 9
            }
          }, {
            start: {
              line: 29,
              column: 8
            },
            end: {
              line: 37,
              column: 9
            }
          }],
          line: 29
        },
        "1": {
          loc: {
            start: {
              line: 31,
              column: 12
            },
            end: {
              line: 34,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 31,
              column: 12
            },
            end: {
              line: 34,
              column: 13
            }
          }, {
            start: {
              line: 31,
              column: 12
            },
            end: {
              line: 34,
              column: 13
            }
          }],
          line: 31
        },
        "2": {
          loc: {
            start: {
              line: 94,
              column: 4
            },
            end: {
              line: 97,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 94,
              column: 4
            },
            end: {
              line: 97,
              column: 5
            }
          }, {
            start: {
              line: 94,
              column: 4
            },
            end: {
              line: 97,
              column: 5
            }
          }],
          line: 94
        },
        "3": {
          loc: {
            start: {
              line: 96,
              column: 15
            },
            end: {
              line: 96,
              column: 65
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 96,
              column: 27
            },
            end: {
              line: 96,
              column: 59
            }
          }, {
            start: {
              line: 96,
              column: 62
            },
            end: {
              line: 96,
              column: 65
            }
          }],
          line: 96
        },
        "4": {
          loc: {
            start: {
              line: 121,
              column: 8
            },
            end: {
              line: 129,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 121,
              column: 8
            },
            end: {
              line: 129,
              column: 9
            }
          }, {
            start: {
              line: 121,
              column: 8
            },
            end: {
              line: 129,
              column: 9
            }
          }],
          line: 121
        },
        "5": {
          loc: {
            start: {
              line: 122,
              column: 12
            },
            end: {
              line: 128,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 122,
              column: 12
            },
            end: {
              line: 128,
              column: 13
            }
          }, {
            start: {
              line: 122,
              column: 12
            },
            end: {
              line: 128,
              column: 13
            }
          }],
          line: 122
        },
        "6": {
          loc: {
            start: {
              line: 341,
              column: 12
            },
            end: {
              line: 351,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 341,
              column: 12
            },
            end: {
              line: 351,
              column: 13
            }
          }, {
            start: {
              line: 341,
              column: 12
            },
            end: {
              line: 351,
              column: 13
            }
          }],
          line: 341
        },
        "7": {
          loc: {
            start: {
              line: 343,
              column: 16
            },
            end: {
              line: 350,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 343,
              column: 16
            },
            end: {
              line: 350,
              column: 17
            }
          }, {
            start: {
              line: 343,
              column: 16
            },
            end: {
              line: 350,
              column: 17
            }
          }],
          line: 343
        },
        "8": {
          loc: {
            start: {
              line: 345,
              column: 20
            },
            end: {
              line: 349,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 345,
              column: 20
            },
            end: {
              line: 349,
              column: 21
            }
          }, {
            start: {
              line: 345,
              column: 20
            },
            end: {
              line: 349,
              column: 21
            }
          }],
          line: 345
        },
        "9": {
          loc: {
            start: {
              line: 455,
              column: 40
            },
            end: {
              line: 455,
              column: 82
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 455,
              column: 40
            },
            end: {
              line: 455,
              column: 69
            }
          }, {
            start: {
              line: 455,
              column: 73
            },
            end: {
              line: 455,
              column: 82
            }
          }],
          line: 455
        },
        "10": {
          loc: {
            start: {
              line: 497,
              column: 20
            },
            end: {
              line: 500,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 497,
              column: 20
            },
            end: {
              line: 500,
              column: 21
            }
          }, {
            start: {
              line: 497,
              column: 20
            },
            end: {
              line: 500,
              column: 21
            }
          }],
          line: 497
        },
        "11": {
          loc: {
            start: {
              line: 512,
              column: 24
            },
            end: {
              line: 536,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 512,
              column: 24
            },
            end: {
              line: 536,
              column: 25
            }
          }, {
            start: {
              line: 512,
              column: 24
            },
            end: {
              line: 536,
              column: 25
            }
          }],
          line: 512
        },
        "12": {
          loc: {
            start: {
              line: 512,
              column: 28
            },
            end: {
              line: 512,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 512,
              column: 28
            },
            end: {
              line: 512,
              column: 35
            }
          }, {
            start: {
              line: 512,
              column: 39
            },
            end: {
              line: 512,
              column: 43
            }
          }],
          line: 512
        },
        "13": {
          loc: {
            start: {
              line: 516,
              column: 28
            },
            end: {
              line: 535,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 516,
              column: 28
            },
            end: {
              line: 535,
              column: 29
            }
          }, {
            start: {
              line: 516,
              column: 28
            },
            end: {
              line: 535,
              column: 29
            }
          }],
          line: 516
        },
        "14": {
          loc: {
            start: {
              line: 516,
              column: 32
            },
            end: {
              line: 516,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 516,
              column: 32
            },
            end: {
              line: 516,
              column: 41
            }
          }, {
            start: {
              line: 516,
              column: 45
            },
            end: {
              line: 516,
              column: 53
            }
          }],
          line: 516
        },
        "15": {
          loc: {
            start: {
              line: 527,
              column: 32
            },
            end: {
              line: 534,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 527,
              column: 32
            },
            end: {
              line: 534,
              column: 33
            }
          }, {
            start: {
              line: 527,
              column: 32
            },
            end: {
              line: 534,
              column: 33
            }
          }],
          line: 527
        },
        "16": {
          loc: {
            start: {
              line: 597,
              column: 20
            },
            end: {
              line: 599,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 597,
              column: 20
            },
            end: {
              line: 599,
              column: 21
            }
          }, {
            start: {
              line: 597,
              column: 20
            },
            end: {
              line: 599,
              column: 21
            }
          }],
          line: 597
        },
        "17": {
          loc: {
            start: {
              line: 782,
              column: 4
            },
            end: {
              line: 785,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 782,
              column: 4
            },
            end: {
              line: 785,
              column: 5
            }
          }, {
            start: {
              line: 782,
              column: 4
            },
            end: {
              line: 785,
              column: 5
            }
          }],
          line: 782
        },
        "18": {
          loc: {
            start: {
              line: 796,
              column: 16
            },
            end: {
              line: 799,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 796,
              column: 16
            },
            end: {
              line: 799,
              column: 17
            }
          }, {
            start: {
              line: 796,
              column: 16
            },
            end: {
              line: 799,
              column: 17
            }
          }],
          line: 796
        },
        "19": {
          loc: {
            start: {
              line: 811,
              column: 20
            },
            end: {
              line: 835,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 811,
              column: 20
            },
            end: {
              line: 835,
              column: 21
            }
          }, {
            start: {
              line: 811,
              column: 20
            },
            end: {
              line: 835,
              column: 21
            }
          }],
          line: 811
        },
        "20": {
          loc: {
            start: {
              line: 811,
              column: 24
            },
            end: {
              line: 811,
              column: 39
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 811,
              column: 24
            },
            end: {
              line: 811,
              column: 31
            }
          }, {
            start: {
              line: 811,
              column: 35
            },
            end: {
              line: 811,
              column: 39
            }
          }],
          line: 811
        },
        "21": {
          loc: {
            start: {
              line: 815,
              column: 24
            },
            end: {
              line: 834,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 815,
              column: 24
            },
            end: {
              line: 834,
              column: 25
            }
          }, {
            start: {
              line: 815,
              column: 24
            },
            end: {
              line: 834,
              column: 25
            }
          }],
          line: 815
        },
        "22": {
          loc: {
            start: {
              line: 815,
              column: 28
            },
            end: {
              line: 815,
              column: 49
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 815,
              column: 28
            },
            end: {
              line: 815,
              column: 37
            }
          }, {
            start: {
              line: 815,
              column: 41
            },
            end: {
              line: 815,
              column: 49
            }
          }],
          line: 815
        },
        "23": {
          loc: {
            start: {
              line: 826,
              column: 28
            },
            end: {
              line: 833,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 826,
              column: 28
            },
            end: {
              line: 833,
              column: 29
            }
          }, {
            start: {
              line: 826,
              column: 28
            },
            end: {
              line: 833,
              column: 29
            }
          }],
          line: 826
        },
        "24": {
          loc: {
            start: {
              line: 893,
              column: 16
            },
            end: {
              line: 895,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 893,
              column: 16
            },
            end: {
              line: 895,
              column: 17
            }
          }, {
            start: {
              line: 893,
              column: 16
            },
            end: {
              line: 895,
              column: 17
            }
          }],
          line: 893
        },
        "25": {
          loc: {
            start: {
              line: 937,
              column: 20
            },
            end: {
              line: 937,
              column: 96
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 937,
              column: 20
            },
            end: {
              line: 937,
              column: 96
            }
          }, {
            start: {
              line: 937,
              column: 20
            },
            end: {
              line: 937,
              column: 96
            }
          }],
          line: 937
        },
        "26": {
          loc: {
            start: {
              line: 950,
              column: 24
            },
            end: {
              line: 957,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 950,
              column: 24
            },
            end: {
              line: 957,
              column: 25
            }
          }, {
            start: {
              line: 950,
              column: 24
            },
            end: {
              line: 957,
              column: 25
            }
          }],
          line: 950
        },
        "27": {
          loc: {
            start: {
              line: 950,
              column: 28
            },
            end: {
              line: 950,
              column: 48
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 950,
              column: 28
            },
            end: {
              line: 950,
              column: 35
            }
          }, {
            start: {
              line: 950,
              column: 39
            },
            end: {
              line: 950,
              column: 48
            }
          }],
          line: 950
        },
        "28": {
          loc: {
            start: {
              line: 954,
              column: 28
            },
            end: {
              line: 956,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 954,
              column: 28
            },
            end: {
              line: 956,
              column: 29
            }
          }, {
            start: {
              line: 954,
              column: 28
            },
            end: {
              line: 956,
              column: 29
            }
          }],
          line: 954
        },
        "29": {
          loc: {
            start: {
              line: 968,
              column: 12
            },
            end: {
              line: 970,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 968,
              column: 12
            },
            end: {
              line: 970,
              column: 13
            }
          }, {
            start: {
              line: 968,
              column: 12
            },
            end: {
              line: 970,
              column: 13
            }
          }],
          line: 968
        },
        "30": {
          loc: {
            start: {
              line: 1047,
              column: 8
            },
            end: {
              line: 1054,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1047,
              column: 8
            },
            end: {
              line: 1054,
              column: 9
            }
          }, {
            start: {
              line: 1047,
              column: 8
            },
            end: {
              line: 1054,
              column: 9
            }
          }],
          line: 1047
        },
        "31": {
          loc: {
            start: {
              line: 1048,
              column: 12
            },
            end: {
              line: 1052,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1048,
              column: 12
            },
            end: {
              line: 1052,
              column: 13
            }
          }, {
            start: {
              line: 1048,
              column: 12
            },
            end: {
              line: 1052,
              column: 13
            }
          }],
          line: 1048
        },
        "32": {
          loc: {
            start: {
              line: 1050,
              column: 19
            },
            end: {
              line: 1052,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1050,
              column: 19
            },
            end: {
              line: 1052,
              column: 13
            }
          }, {
            start: {
              line: 1050,
              column: 19
            },
            end: {
              line: 1052,
              column: 13
            }
          }],
          line: 1050
        },
        "33": {
          loc: {
            start: {
              line: 1166,
              column: 16
            },
            end: {
              line: 1169,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1166,
              column: 16
            },
            end: {
              line: 1169,
              column: 17
            }
          }, {
            start: {
              line: 1166,
              column: 16
            },
            end: {
              line: 1169,
              column: 17
            }
          }],
          line: 1166
        },
        "34": {
          loc: {
            start: {
              line: 1178,
              column: 16
            },
            end: {
              line: 1186,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1178,
              column: 16
            },
            end: {
              line: 1186,
              column: 17
            }
          }, {
            start: {
              line: 1178,
              column: 16
            },
            end: {
              line: 1186,
              column: 17
            }
          }],
          line: 1178
        },
        "35": {
          loc: {
            start: {
              line: 1180,
              column: 20
            },
            end: {
              line: 1185,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1180,
              column: 20
            },
            end: {
              line: 1185,
              column: 21
            }
          }, {
            start: {
              line: 1180,
              column: 20
            },
            end: {
              line: 1185,
              column: 21
            }
          }],
          line: 1180
        },
        "36": {
          loc: {
            start: {
              line: 1287,
              column: 20
            },
            end: {
              line: 1290,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1287,
              column: 20
            },
            end: {
              line: 1290,
              column: 21
            }
          }, {
            start: {
              line: 1287,
              column: 20
            },
            end: {
              line: 1290,
              column: 21
            }
          }],
          line: 1287
        },
        "37": {
          loc: {
            start: {
              line: 1302,
              column: 24
            },
            end: {
              line: 1326,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1302,
              column: 24
            },
            end: {
              line: 1326,
              column: 25
            }
          }, {
            start: {
              line: 1302,
              column: 24
            },
            end: {
              line: 1326,
              column: 25
            }
          }],
          line: 1302
        },
        "38": {
          loc: {
            start: {
              line: 1302,
              column: 28
            },
            end: {
              line: 1302,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 1302,
              column: 28
            },
            end: {
              line: 1302,
              column: 35
            }
          }, {
            start: {
              line: 1302,
              column: 39
            },
            end: {
              line: 1302,
              column: 43
            }
          }],
          line: 1302
        },
        "39": {
          loc: {
            start: {
              line: 1306,
              column: 28
            },
            end: {
              line: 1325,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1306,
              column: 28
            },
            end: {
              line: 1325,
              column: 29
            }
          }, {
            start: {
              line: 1306,
              column: 28
            },
            end: {
              line: 1325,
              column: 29
            }
          }],
          line: 1306
        },
        "40": {
          loc: {
            start: {
              line: 1306,
              column: 32
            },
            end: {
              line: 1306,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 1306,
              column: 32
            },
            end: {
              line: 1306,
              column: 41
            }
          }, {
            start: {
              line: 1306,
              column: 45
            },
            end: {
              line: 1306,
              column: 53
            }
          }],
          line: 1306
        },
        "41": {
          loc: {
            start: {
              line: 1317,
              column: 32
            },
            end: {
              line: 1324,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1317,
              column: 32
            },
            end: {
              line: 1324,
              column: 33
            }
          }, {
            start: {
              line: 1317,
              column: 32
            },
            end: {
              line: 1324,
              column: 33
            }
          }],
          line: 1317
        },
        "42": {
          loc: {
            start: {
              line: 1387,
              column: 20
            },
            end: {
              line: 1389,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1387,
              column: 20
            },
            end: {
              line: 1389,
              column: 21
            }
          }, {
            start: {
              line: 1387,
              column: 20
            },
            end: {
              line: 1389,
              column: 21
            }
          }],
          line: 1387
        },
        "43": {
          loc: {
            start: {
              line: 1549,
              column: 12
            },
            end: {
              line: 1552,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1549,
              column: 12
            },
            end: {
              line: 1552,
              column: 13
            }
          }, {
            start: {
              line: 1549,
              column: 12
            },
            end: {
              line: 1552,
              column: 13
            }
          }],
          line: 1549
        },
        "44": {
          loc: {
            start: {
              line: 1564,
              column: 20
            },
            end: {
              line: 1567,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1564,
              column: 20
            },
            end: {
              line: 1567,
              column: 21
            }
          }, {
            start: {
              line: 1564,
              column: 20
            },
            end: {
              line: 1567,
              column: 21
            }
          }],
          line: 1564
        },
        "45": {
          loc: {
            start: {
              line: 1581,
              column: 24
            },
            end: {
              line: 1605,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1581,
              column: 24
            },
            end: {
              line: 1605,
              column: 25
            }
          }, {
            start: {
              line: 1581,
              column: 24
            },
            end: {
              line: 1605,
              column: 25
            }
          }],
          line: 1581
        },
        "46": {
          loc: {
            start: {
              line: 1581,
              column: 28
            },
            end: {
              line: 1581,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 1581,
              column: 28
            },
            end: {
              line: 1581,
              column: 35
            }
          }, {
            start: {
              line: 1581,
              column: 39
            },
            end: {
              line: 1581,
              column: 43
            }
          }],
          line: 1581
        },
        "47": {
          loc: {
            start: {
              line: 1585,
              column: 28
            },
            end: {
              line: 1604,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1585,
              column: 28
            },
            end: {
              line: 1604,
              column: 29
            }
          }, {
            start: {
              line: 1585,
              column: 28
            },
            end: {
              line: 1604,
              column: 29
            }
          }],
          line: 1585
        },
        "48": {
          loc: {
            start: {
              line: 1585,
              column: 32
            },
            end: {
              line: 1585,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 1585,
              column: 32
            },
            end: {
              line: 1585,
              column: 41
            }
          }, {
            start: {
              line: 1585,
              column: 45
            },
            end: {
              line: 1585,
              column: 53
            }
          }],
          line: 1585
        },
        "49": {
          loc: {
            start: {
              line: 1596,
              column: 32
            },
            end: {
              line: 1603,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1596,
              column: 32
            },
            end: {
              line: 1603,
              column: 33
            }
          }, {
            start: {
              line: 1596,
              column: 32
            },
            end: {
              line: 1603,
              column: 33
            }
          }],
          line: 1596
        },
        "50": {
          loc: {
            start: {
              line: 1666,
              column: 20
            },
            end: {
              line: 1668,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 1666,
              column: 20
            },
            end: {
              line: 1668,
              column: 21
            }
          }, {
            start: {
              line: 1666,
              column: 20
            },
            end: {
              line: 1668,
              column: 21
            }
          }],
          line: 1666
        },
        "51": {
          loc: {
            start: {
              line: 2150,
              column: 12
            },
            end: {
              line: 2150,
              column: 88
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2150,
              column: 12
            },
            end: {
              line: 2150,
              column: 88
            }
          }, {
            start: {
              line: 2150,
              column: 12
            },
            end: {
              line: 2150,
              column: 88
            }
          }],
          line: 2150
        },
        "52": {
          loc: {
            start: {
              line: 2163,
              column: 16
            },
            end: {
              line: 2174,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2163,
              column: 16
            },
            end: {
              line: 2174,
              column: 17
            }
          }, {
            start: {
              line: 2163,
              column: 16
            },
            end: {
              line: 2174,
              column: 17
            }
          }],
          line: 2163
        },
        "53": {
          loc: {
            start: {
              line: 2163,
              column: 20
            },
            end: {
              line: 2163,
              column: 40
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2163,
              column: 20
            },
            end: {
              line: 2163,
              column: 27
            }
          }, {
            start: {
              line: 2163,
              column: 31
            },
            end: {
              line: 2163,
              column: 40
            }
          }],
          line: 2163
        },
        "54": {
          loc: {
            start: {
              line: 2167,
              column: 20
            },
            end: {
              line: 2173,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2167,
              column: 20
            },
            end: {
              line: 2173,
              column: 21
            }
          }, {
            start: {
              line: 2167,
              column: 20
            },
            end: {
              line: 2173,
              column: 21
            }
          }],
          line: 2167
        },
        "55": {
          loc: {
            start: {
              line: 2168,
              column: 24
            },
            end: {
              line: 2172,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2168,
              column: 24
            },
            end: {
              line: 2172,
              column: 25
            }
          }, {
            start: {
              line: 2168,
              column: 24
            },
            end: {
              line: 2172,
              column: 25
            }
          }],
          line: 2168
        },
        "56": {
          loc: {
            start: {
              line: 2170,
              column: 31
            },
            end: {
              line: 2172,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2170,
              column: 31
            },
            end: {
              line: 2172,
              column: 25
            }
          }, {
            start: {
              line: 2170,
              column: 31
            },
            end: {
              line: 2172,
              column: 25
            }
          }],
          line: 2170
        },
        "57": {
          loc: {
            start: {
              line: 2178,
              column: 12
            },
            end: {
              line: 2182,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2178,
              column: 12
            },
            end: {
              line: 2182,
              column: 13
            }
          }, {
            start: {
              line: 2178,
              column: 12
            },
            end: {
              line: 2182,
              column: 13
            }
          }],
          line: 2178
        },
        "58": {
          loc: {
            start: {
              line: 2180,
              column: 19
            },
            end: {
              line: 2182,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2180,
              column: 19
            },
            end: {
              line: 2182,
              column: 13
            }
          }, {
            start: {
              line: 2180,
              column: 19
            },
            end: {
              line: 2182,
              column: 13
            }
          }],
          line: 2180
        },
        "59": {
          loc: {
            start: {
              line: 2255,
              column: 24
            },
            end: {
              line: 2255,
              column: 49
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2255,
              column: 24
            },
            end: {
              line: 2255,
              column: 44
            }
          }, {
            start: {
              line: 2255,
              column: 48
            },
            end: {
              line: 2255,
              column: 49
            }
          }],
          line: 2255
        },
        "60": {
          loc: {
            start: {
              line: 2256,
              column: 24
            },
            end: {
              line: 2256,
              column: 49
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2256,
              column: 24
            },
            end: {
              line: 2256,
              column: 44
            }
          }, {
            start: {
              line: 2256,
              column: 48
            },
            end: {
              line: 2256,
              column: 49
            }
          }],
          line: 2256
        },
        "61": {
          loc: {
            start: {
              line: 2271,
              column: 25
            },
            end: {
              line: 2271,
              column: 92
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2271,
              column: 25
            },
            end: {
              line: 2271,
              column: 87
            }
          }, {
            start: {
              line: 2271,
              column: 91
            },
            end: {
              line: 2271,
              column: 92
            }
          }],
          line: 2271
        },
        "62": {
          loc: {
            start: {
              line: 2321,
              column: 12
            },
            end: {
              line: 2327,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2321,
              column: 12
            },
            end: {
              line: 2327,
              column: 13
            }
          }, {
            start: {
              line: 2321,
              column: 12
            },
            end: {
              line: 2327,
              column: 13
            }
          }],
          line: 2321
        },
        "63": {
          loc: {
            start: {
              line: 2322,
              column: 16
            },
            end: {
              line: 2326,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2322,
              column: 16
            },
            end: {
              line: 2326,
              column: 17
            }
          }, {
            start: {
              line: 2322,
              column: 16
            },
            end: {
              line: 2326,
              column: 17
            }
          }],
          line: 2322
        },
        "64": {
          loc: {
            start: {
              line: 2495,
              column: 12
            },
            end: {
              line: 2509,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2495,
              column: 12
            },
            end: {
              line: 2509,
              column: 13
            }
          }, {
            start: {
              line: 2495,
              column: 12
            },
            end: {
              line: 2509,
              column: 13
            }
          }],
          line: 2495
        },
        "65": {
          loc: {
            start: {
              line: 2495,
              column: 16
            },
            end: {
              line: 2495,
              column: 48
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2495,
              column: 16
            },
            end: {
              line: 2495,
              column: 32
            }
          }, {
            start: {
              line: 2495,
              column: 36
            },
            end: {
              line: 2495,
              column: 48
            }
          }],
          line: 2495
        },
        "66": {
          loc: {
            start: {
              line: 2499,
              column: 16
            },
            end: {
              line: 2508,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2499,
              column: 16
            },
            end: {
              line: 2508,
              column: 17
            }
          }, {
            start: {
              line: 2499,
              column: 16
            },
            end: {
              line: 2508,
              column: 17
            }
          }],
          line: 2499
        },
        "67": {
          loc: {
            start: {
              line: 2499,
              column: 20
            },
            end: {
              line: 2499,
              column: 38
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2499,
              column: 20
            },
            end: {
              line: 2499,
              column: 29
            }
          }, {
            start: {
              line: 2499,
              column: 33
            },
            end: {
              line: 2499,
              column: 38
            }
          }],
          line: 2499
        },
        "68": {
          loc: {
            start: {
              line: 2504,
              column: 20
            },
            end: {
              line: 2507,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2504,
              column: 20
            },
            end: {
              line: 2507,
              column: 21
            }
          }, {
            start: {
              line: 2504,
              column: 20
            },
            end: {
              line: 2507,
              column: 21
            }
          }],
          line: 2504
        },
        "69": {
          loc: {
            start: {
              line: 2597,
              column: 4
            },
            end: {
              line: 2600,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2597,
              column: 4
            },
            end: {
              line: 2600,
              column: 5
            }
          }, {
            start: {
              line: 2597,
              column: 4
            },
            end: {
              line: 2600,
              column: 5
            }
          }],
          line: 2597
        },
        "70": {
          loc: {
            start: {
              line: 2624,
              column: 24
            },
            end: {
              line: 2650,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2624,
              column: 24
            },
            end: {
              line: 2650,
              column: 25
            }
          }, {
            start: {
              line: 2624,
              column: 24
            },
            end: {
              line: 2650,
              column: 25
            }
          }],
          line: 2624
        },
        "71": {
          loc: {
            start: {
              line: 2624,
              column: 28
            },
            end: {
              line: 2624,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2624,
              column: 28
            },
            end: {
              line: 2624,
              column: 35
            }
          }, {
            start: {
              line: 2624,
              column: 39
            },
            end: {
              line: 2624,
              column: 43
            }
          }],
          line: 2624
        },
        "72": {
          loc: {
            start: {
              line: 2628,
              column: 28
            },
            end: {
              line: 2649,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2628,
              column: 28
            },
            end: {
              line: 2649,
              column: 29
            }
          }, {
            start: {
              line: 2628,
              column: 28
            },
            end: {
              line: 2649,
              column: 29
            }
          }],
          line: 2628
        },
        "73": {
          loc: {
            start: {
              line: 2628,
              column: 32
            },
            end: {
              line: 2628,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2628,
              column: 32
            },
            end: {
              line: 2628,
              column: 41
            }
          }, {
            start: {
              line: 2628,
              column: 45
            },
            end: {
              line: 2628,
              column: 53
            }
          }],
          line: 2628
        },
        "74": {
          loc: {
            start: {
              line: 2639,
              column: 32
            },
            end: {
              line: 2648,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2639,
              column: 32
            },
            end: {
              line: 2648,
              column: 33
            }
          }, {
            start: {
              line: 2639,
              column: 32
            },
            end: {
              line: 2648,
              column: 33
            }
          }],
          line: 2639
        },
        "75": {
          loc: {
            start: {
              line: 2712,
              column: 20
            },
            end: {
              line: 2714,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2712,
              column: 20
            },
            end: {
              line: 2714,
              column: 21
            }
          }, {
            start: {
              line: 2712,
              column: 20
            },
            end: {
              line: 2714,
              column: 21
            }
          }],
          line: 2712
        },
        "76": {
          loc: {
            start: {
              line: 2776,
              column: 24
            },
            end: {
              line: 2802,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2776,
              column: 24
            },
            end: {
              line: 2802,
              column: 25
            }
          }, {
            start: {
              line: 2776,
              column: 24
            },
            end: {
              line: 2802,
              column: 25
            }
          }],
          line: 2776
        },
        "77": {
          loc: {
            start: {
              line: 2776,
              column: 28
            },
            end: {
              line: 2776,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2776,
              column: 28
            },
            end: {
              line: 2776,
              column: 35
            }
          }, {
            start: {
              line: 2776,
              column: 39
            },
            end: {
              line: 2776,
              column: 43
            }
          }],
          line: 2776
        },
        "78": {
          loc: {
            start: {
              line: 2780,
              column: 28
            },
            end: {
              line: 2801,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2780,
              column: 28
            },
            end: {
              line: 2801,
              column: 29
            }
          }, {
            start: {
              line: 2780,
              column: 28
            },
            end: {
              line: 2801,
              column: 29
            }
          }],
          line: 2780
        },
        "79": {
          loc: {
            start: {
              line: 2780,
              column: 32
            },
            end: {
              line: 2780,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2780,
              column: 32
            },
            end: {
              line: 2780,
              column: 41
            }
          }, {
            start: {
              line: 2780,
              column: 45
            },
            end: {
              line: 2780,
              column: 53
            }
          }],
          line: 2780
        },
        "80": {
          loc: {
            start: {
              line: 2791,
              column: 32
            },
            end: {
              line: 2800,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2791,
              column: 32
            },
            end: {
              line: 2800,
              column: 33
            }
          }, {
            start: {
              line: 2791,
              column: 32
            },
            end: {
              line: 2800,
              column: 33
            }
          }],
          line: 2791
        },
        "81": {
          loc: {
            start: {
              line: 2864,
              column: 20
            },
            end: {
              line: 2866,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2864,
              column: 20
            },
            end: {
              line: 2866,
              column: 21
            }
          }, {
            start: {
              line: 2864,
              column: 20
            },
            end: {
              line: 2866,
              column: 21
            }
          }],
          line: 2864
        },
        "82": {
          loc: {
            start: {
              line: 2953,
              column: 24
            },
            end: {
              line: 2953,
              column: 59
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 2953,
              column: 24
            },
            end: {
              line: 2953,
              column: 59
            }
          }, {
            start: {
              line: 2953,
              column: 24
            },
            end: {
              line: 2953,
              column: 59
            }
          }],
          line: 2953
        },
        "83": {
          loc: {
            start: {
              line: 2953,
              column: 28
            },
            end: {
              line: 2953,
              column: 48
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 2953,
              column: 28
            },
            end: {
              line: 2953,
              column: 38
            }
          }, {
            start: {
              line: 2953,
              column: 42
            },
            end: {
              line: 2953,
              column: 48
            }
          }],
          line: 2953
        },
        "84": {
          loc: {
            start: {
              line: 3047,
              column: 8
            },
            end: {
              line: 3054,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3047,
              column: 8
            },
            end: {
              line: 3054,
              column: 9
            }
          }, {
            start: {
              line: 3047,
              column: 8
            },
            end: {
              line: 3054,
              column: 9
            }
          }],
          line: 3047
        },
        "85": {
          loc: {
            start: {
              line: 3048,
              column: 12
            },
            end: {
              line: 3053,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3048,
              column: 12
            },
            end: {
              line: 3053,
              column: 13
            }
          }, {
            start: {
              line: 3048,
              column: 12
            },
            end: {
              line: 3053,
              column: 13
            }
          }],
          line: 3048
        },
        "86": {
          loc: {
            start: {
              line: 3300,
              column: 4
            },
            end: {
              line: 3303,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3300,
              column: 4
            },
            end: {
              line: 3303,
              column: 5
            }
          }, {
            start: {
              line: 3300,
              column: 4
            },
            end: {
              line: 3303,
              column: 5
            }
          }],
          line: 3300
        },
        "87": {
          loc: {
            start: {
              line: 3327,
              column: 24
            },
            end: {
              line: 3353,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3327,
              column: 24
            },
            end: {
              line: 3353,
              column: 25
            }
          }, {
            start: {
              line: 3327,
              column: 24
            },
            end: {
              line: 3353,
              column: 25
            }
          }],
          line: 3327
        },
        "88": {
          loc: {
            start: {
              line: 3327,
              column: 28
            },
            end: {
              line: 3327,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 3327,
              column: 28
            },
            end: {
              line: 3327,
              column: 35
            }
          }, {
            start: {
              line: 3327,
              column: 39
            },
            end: {
              line: 3327,
              column: 43
            }
          }],
          line: 3327
        },
        "89": {
          loc: {
            start: {
              line: 3331,
              column: 28
            },
            end: {
              line: 3352,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3331,
              column: 28
            },
            end: {
              line: 3352,
              column: 29
            }
          }, {
            start: {
              line: 3331,
              column: 28
            },
            end: {
              line: 3352,
              column: 29
            }
          }],
          line: 3331
        },
        "90": {
          loc: {
            start: {
              line: 3331,
              column: 32
            },
            end: {
              line: 3331,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 3331,
              column: 32
            },
            end: {
              line: 3331,
              column: 41
            }
          }, {
            start: {
              line: 3331,
              column: 45
            },
            end: {
              line: 3331,
              column: 53
            }
          }],
          line: 3331
        },
        "91": {
          loc: {
            start: {
              line: 3342,
              column: 32
            },
            end: {
              line: 3351,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3342,
              column: 32
            },
            end: {
              line: 3351,
              column: 33
            }
          }, {
            start: {
              line: 3342,
              column: 32
            },
            end: {
              line: 3351,
              column: 33
            }
          }],
          line: 3342
        },
        "92": {
          loc: {
            start: {
              line: 3415,
              column: 20
            },
            end: {
              line: 3417,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3415,
              column: 20
            },
            end: {
              line: 3417,
              column: 21
            }
          }, {
            start: {
              line: 3415,
              column: 20
            },
            end: {
              line: 3417,
              column: 21
            }
          }],
          line: 3415
        },
        "93": {
          loc: {
            start: {
              line: 3460,
              column: 20
            },
            end: {
              line: 3464,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3460,
              column: 20
            },
            end: {
              line: 3464,
              column: 21
            }
          }, {
            start: {
              line: 3460,
              column: 20
            },
            end: {
              line: 3464,
              column: 21
            }
          }],
          line: 3460
        },
        "94": {
          loc: {
            start: {
              line: 3475,
              column: 20
            },
            end: {
              line: 3486,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3475,
              column: 20
            },
            end: {
              line: 3486,
              column: 21
            }
          }, {
            start: {
              line: 3475,
              column: 20
            },
            end: {
              line: 3486,
              column: 21
            }
          }],
          line: 3475
        },
        "95": {
          loc: {
            start: {
              line: 3475,
              column: 24
            },
            end: {
              line: 3475,
              column: 44
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 3475,
              column: 24
            },
            end: {
              line: 3475,
              column: 31
            }
          }, {
            start: {
              line: 3475,
              column: 35
            },
            end: {
              line: 3475,
              column: 44
            }
          }],
          line: 3475
        },
        "96": {
          loc: {
            start: {
              line: 3479,
              column: 24
            },
            end: {
              line: 3483,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3479,
              column: 24
            },
            end: {
              line: 3483,
              column: 25
            }
          }, {
            start: {
              line: 3479,
              column: 24
            },
            end: {
              line: 3483,
              column: 25
            }
          }],
          line: 3479
        },
        "97": {
          loc: {
            start: {
              line: 3588,
              column: 24
            },
            end: {
              line: 3614,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3588,
              column: 24
            },
            end: {
              line: 3614,
              column: 25
            }
          }, {
            start: {
              line: 3588,
              column: 24
            },
            end: {
              line: 3614,
              column: 25
            }
          }],
          line: 3588
        },
        "98": {
          loc: {
            start: {
              line: 3588,
              column: 28
            },
            end: {
              line: 3588,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 3588,
              column: 28
            },
            end: {
              line: 3588,
              column: 35
            }
          }, {
            start: {
              line: 3588,
              column: 39
            },
            end: {
              line: 3588,
              column: 43
            }
          }],
          line: 3588
        },
        "99": {
          loc: {
            start: {
              line: 3592,
              column: 28
            },
            end: {
              line: 3613,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3592,
              column: 28
            },
            end: {
              line: 3613,
              column: 29
            }
          }, {
            start: {
              line: 3592,
              column: 28
            },
            end: {
              line: 3613,
              column: 29
            }
          }],
          line: 3592
        },
        "100": {
          loc: {
            start: {
              line: 3592,
              column: 32
            },
            end: {
              line: 3592,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 3592,
              column: 32
            },
            end: {
              line: 3592,
              column: 41
            }
          }, {
            start: {
              line: 3592,
              column: 45
            },
            end: {
              line: 3592,
              column: 53
            }
          }],
          line: 3592
        },
        "101": {
          loc: {
            start: {
              line: 3603,
              column: 32
            },
            end: {
              line: 3612,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3603,
              column: 32
            },
            end: {
              line: 3612,
              column: 33
            }
          }, {
            start: {
              line: 3603,
              column: 32
            },
            end: {
              line: 3612,
              column: 33
            }
          }],
          line: 3603
        },
        "102": {
          loc: {
            start: {
              line: 3676,
              column: 20
            },
            end: {
              line: 3678,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3676,
              column: 20
            },
            end: {
              line: 3678,
              column: 21
            }
          }, {
            start: {
              line: 3676,
              column: 20
            },
            end: {
              line: 3678,
              column: 21
            }
          }],
          line: 3676
        },
        "103": {
          loc: {
            start: {
              line: 3728,
              column: 4
            },
            end: {
              line: 3737,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3728,
              column: 4
            },
            end: {
              line: 3737,
              column: 5
            }
          }, {
            start: {
              line: 3728,
              column: 4
            },
            end: {
              line: 3737,
              column: 5
            }
          }],
          line: 3728
        },
        "104": {
          loc: {
            start: {
              line: 3729,
              column: 6
            },
            end: {
              line: 3734,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3729,
              column: 6
            },
            end: {
              line: 3734,
              column: 7
            }
          }, {
            start: {
              line: 3729,
              column: 6
            },
            end: {
              line: 3734,
              column: 7
            }
          }],
          line: 3729
        },
        "105": {
          loc: {
            start: {
              line: 3853,
              column: 24
            },
            end: {
              line: 3855,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3853,
              column: 24
            },
            end: {
              line: 3855,
              column: 25
            }
          }, {
            start: {
              line: 3853,
              column: 24
            },
            end: {
              line: 3855,
              column: 25
            }
          }],
          line: 3853
        },
        "106": {
          loc: {
            start: {
              line: 3854,
              column: 58
            },
            end: {
              line: 3854,
              column: 92
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 3854,
              column: 77
            },
            end: {
              line: 3854,
              column: 84
            }
          }, {
            start: {
              line: 3854,
              column: 87
            },
            end: {
              line: 3854,
              column: 92
            }
          }],
          line: 3854
        },
        "107": {
          loc: {
            start: {
              line: 3882,
              column: 53
            },
            end: {
              line: 3882,
              column: 87
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 3882,
              column: 71
            },
            end: {
              line: 3882,
              column: 78
            }
          }, {
            start: {
              line: 3882,
              column: 81
            },
            end: {
              line: 3882,
              column: 87
            }
          }],
          line: 3882
        },
        "108": {
          loc: {
            start: {
              line: 3936,
              column: 4
            },
            end: {
              line: 3940,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3936,
              column: 4
            },
            end: {
              line: 3940,
              column: 5
            }
          }, {
            start: {
              line: 3936,
              column: 4
            },
            end: {
              line: 3940,
              column: 5
            }
          }],
          line: 3936
        },
        "109": {
          loc: {
            start: {
              line: 3959,
              column: 8
            },
            end: {
              line: 3966,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3959,
              column: 8
            },
            end: {
              line: 3966,
              column: 9
            }
          }, {
            start: {
              line: 3959,
              column: 8
            },
            end: {
              line: 3966,
              column: 9
            }
          }],
          line: 3959
        },
        "110": {
          loc: {
            start: {
              line: 3959,
              column: 12
            },
            end: {
              line: 3959,
              column: 36
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 3959,
              column: 12
            },
            end: {
              line: 3959,
              column: 22
            }
          }, {
            start: {
              line: 3959,
              column: 26
            },
            end: {
              line: 3959,
              column: 36
            }
          }],
          line: 3959
        },
        "111": {
          loc: {
            start: {
              line: 3960,
              column: 12
            },
            end: {
              line: 3965,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 3960,
              column: 12
            },
            end: {
              line: 3965,
              column: 13
            }
          }, {
            start: {
              line: 3960,
              column: 12
            },
            end: {
              line: 3965,
              column: 13
            }
          }],
          line: 3960
        },
        "112": {
          loc: {
            start: {
              line: 3960,
              column: 16
            },
            end: {
              line: 3960,
              column: 84
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 3960,
              column: 16
            },
            end: {
              line: 3960,
              column: 48
            }
          }, {
            start: {
              line: 3960,
              column: 52
            },
            end: {
              line: 3960,
              column: 84
            }
          }],
          line: 3960
        },
        "113": {
          loc: {
            start: {
              line: 4460,
              column: 4
            },
            end: {
              line: 4463,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4460,
              column: 4
            },
            end: {
              line: 4463,
              column: 5
            }
          }, {
            start: {
              line: 4460,
              column: 4
            },
            end: {
              line: 4463,
              column: 5
            }
          }],
          line: 4460
        },
        "114": {
          loc: {
            start: {
              line: 4483,
              column: 20
            },
            end: {
              line: 4509,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4483,
              column: 20
            },
            end: {
              line: 4509,
              column: 21
            }
          }, {
            start: {
              line: 4483,
              column: 20
            },
            end: {
              line: 4509,
              column: 21
            }
          }],
          line: 4483
        },
        "115": {
          loc: {
            start: {
              line: 4483,
              column: 24
            },
            end: {
              line: 4483,
              column: 39
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 4483,
              column: 24
            },
            end: {
              line: 4483,
              column: 31
            }
          }, {
            start: {
              line: 4483,
              column: 35
            },
            end: {
              line: 4483,
              column: 39
            }
          }],
          line: 4483
        },
        "116": {
          loc: {
            start: {
              line: 4487,
              column: 24
            },
            end: {
              line: 4508,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4487,
              column: 24
            },
            end: {
              line: 4508,
              column: 25
            }
          }, {
            start: {
              line: 4487,
              column: 24
            },
            end: {
              line: 4508,
              column: 25
            }
          }],
          line: 4487
        },
        "117": {
          loc: {
            start: {
              line: 4487,
              column: 28
            },
            end: {
              line: 4487,
              column: 49
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 4487,
              column: 28
            },
            end: {
              line: 4487,
              column: 37
            }
          }, {
            start: {
              line: 4487,
              column: 41
            },
            end: {
              line: 4487,
              column: 49
            }
          }],
          line: 4487
        },
        "118": {
          loc: {
            start: {
              line: 4498,
              column: 28
            },
            end: {
              line: 4507,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4498,
              column: 28
            },
            end: {
              line: 4507,
              column: 29
            }
          }, {
            start: {
              line: 4498,
              column: 28
            },
            end: {
              line: 4507,
              column: 29
            }
          }],
          line: 4498
        },
        "119": {
          loc: {
            start: {
              line: 4565,
              column: 20
            },
            end: {
              line: 4567,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4565,
              column: 20
            },
            end: {
              line: 4567,
              column: 21
            }
          }, {
            start: {
              line: 4565,
              column: 20
            },
            end: {
              line: 4567,
              column: 21
            }
          }],
          line: 4565
        },
        "120": {
          loc: {
            start: {
              line: 4604,
              column: 20
            },
            end: {
              line: 4608,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4604,
              column: 20
            },
            end: {
              line: 4608,
              column: 21
            }
          }, {
            start: {
              line: 4604,
              column: 20
            },
            end: {
              line: 4608,
              column: 21
            }
          }],
          line: 4604
        },
        "121": {
          loc: {
            start: {
              line: 4619,
              column: 20
            },
            end: {
              line: 4630,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4619,
              column: 20
            },
            end: {
              line: 4630,
              column: 21
            }
          }, {
            start: {
              line: 4619,
              column: 20
            },
            end: {
              line: 4630,
              column: 21
            }
          }],
          line: 4619
        },
        "122": {
          loc: {
            start: {
              line: 4619,
              column: 24
            },
            end: {
              line: 4619,
              column: 44
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 4619,
              column: 24
            },
            end: {
              line: 4619,
              column: 31
            }
          }, {
            start: {
              line: 4619,
              column: 35
            },
            end: {
              line: 4619,
              column: 44
            }
          }],
          line: 4619
        },
        "123": {
          loc: {
            start: {
              line: 4623,
              column: 24
            },
            end: {
              line: 4627,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4623,
              column: 24
            },
            end: {
              line: 4627,
              column: 25
            }
          }, {
            start: {
              line: 4623,
              column: 24
            },
            end: {
              line: 4627,
              column: 25
            }
          }],
          line: 4623
        },
        "124": {
          loc: {
            start: {
              line: 4637,
              column: 12
            },
            end: {
              line: 4639,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4637,
              column: 12
            },
            end: {
              line: 4639,
              column: 13
            }
          }, {
            start: {
              line: 4637,
              column: 12
            },
            end: {
              line: 4639,
              column: 13
            }
          }],
          line: 4637
        },
        "125": {
          loc: {
            start: {
              line: 4734,
              column: 24
            },
            end: {
              line: 4760,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4734,
              column: 24
            },
            end: {
              line: 4760,
              column: 25
            }
          }, {
            start: {
              line: 4734,
              column: 24
            },
            end: {
              line: 4760,
              column: 25
            }
          }],
          line: 4734
        },
        "126": {
          loc: {
            start: {
              line: 4734,
              column: 28
            },
            end: {
              line: 4734,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 4734,
              column: 28
            },
            end: {
              line: 4734,
              column: 35
            }
          }, {
            start: {
              line: 4734,
              column: 39
            },
            end: {
              line: 4734,
              column: 43
            }
          }],
          line: 4734
        },
        "127": {
          loc: {
            start: {
              line: 4738,
              column: 28
            },
            end: {
              line: 4759,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4738,
              column: 28
            },
            end: {
              line: 4759,
              column: 29
            }
          }, {
            start: {
              line: 4738,
              column: 28
            },
            end: {
              line: 4759,
              column: 29
            }
          }],
          line: 4738
        },
        "128": {
          loc: {
            start: {
              line: 4738,
              column: 32
            },
            end: {
              line: 4738,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 4738,
              column: 32
            },
            end: {
              line: 4738,
              column: 41
            }
          }, {
            start: {
              line: 4738,
              column: 45
            },
            end: {
              line: 4738,
              column: 53
            }
          }],
          line: 4738
        },
        "129": {
          loc: {
            start: {
              line: 4749,
              column: 32
            },
            end: {
              line: 4758,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4749,
              column: 32
            },
            end: {
              line: 4758,
              column: 33
            }
          }, {
            start: {
              line: 4749,
              column: 32
            },
            end: {
              line: 4758,
              column: 33
            }
          }],
          line: 4749
        },
        "130": {
          loc: {
            start: {
              line: 4822,
              column: 20
            },
            end: {
              line: 4824,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4822,
              column: 20
            },
            end: {
              line: 4824,
              column: 21
            }
          }, {
            start: {
              line: 4822,
              column: 20
            },
            end: {
              line: 4824,
              column: 21
            }
          }],
          line: 4822
        },
        "131": {
          loc: {
            start: {
              line: 4896,
              column: 8
            },
            end: {
              line: 4906,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4896,
              column: 8
            },
            end: {
              line: 4906,
              column: 9
            }
          }, {
            start: {
              line: 4896,
              column: 8
            },
            end: {
              line: 4906,
              column: 9
            }
          }],
          line: 4896
        },
        "132": {
          loc: {
            start: {
              line: 4898,
              column: 12
            },
            end: {
              line: 4905,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 4898,
              column: 12
            },
            end: {
              line: 4905,
              column: 13
            }
          }, {
            start: {
              line: 4898,
              column: 12
            },
            end: {
              line: 4905,
              column: 13
            }
          }],
          line: 4898
        },
        "133": {
          loc: {
            start: {
              line: 5498,
              column: 16
            },
            end: {
              line: 5501,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5498,
              column: 16
            },
            end: {
              line: 5501,
              column: 17
            }
          }, {
            start: {
              line: 5498,
              column: 16
            },
            end: {
              line: 5501,
              column: 17
            }
          }],
          line: 5498
        },
        "134": {
          loc: {
            start: {
              line: 5513,
              column: 16
            },
            end: {
              line: 5519,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5513,
              column: 16
            },
            end: {
              line: 5519,
              column: 17
            }
          }, {
            start: {
              line: 5513,
              column: 16
            },
            end: {
              line: 5519,
              column: 17
            }
          }],
          line: 5513
        },
        "135": {
          loc: {
            start: {
              line: 5515,
              column: 23
            },
            end: {
              line: 5519,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5515,
              column: 23
            },
            end: {
              line: 5519,
              column: 17
            }
          }, {
            start: {
              line: 5515,
              column: 23
            },
            end: {
              line: 5519,
              column: 17
            }
          }],
          line: 5515
        },
        "136": {
          loc: {
            start: {
              line: 5517,
              column: 23
            },
            end: {
              line: 5519,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5517,
              column: 23
            },
            end: {
              line: 5519,
              column: 17
            }
          }, {
            start: {
              line: 5517,
              column: 23
            },
            end: {
              line: 5519,
              column: 17
            }
          }],
          line: 5517
        },
        "137": {
          loc: {
            start: {
              line: 5521,
              column: 16
            },
            end: {
              line: 5525,
              column: 17
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5521,
              column: 16
            },
            end: {
              line: 5525,
              column: 17
            }
          }, {
            start: {
              line: 5521,
              column: 16
            },
            end: {
              line: 5525,
              column: 17
            }
          }],
          line: 5521
        },
        "138": {
          loc: {
            start: {
              line: 5536,
              column: 8
            },
            end: {
              line: 5539,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5536,
              column: 8
            },
            end: {
              line: 5539,
              column: 9
            }
          }, {
            start: {
              line: 5536,
              column: 8
            },
            end: {
              line: 5539,
              column: 9
            }
          }],
          line: 5536
        },
        "139": {
          loc: {
            start: {
              line: 5551,
              column: 8
            },
            end: {
              line: 5554,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5551,
              column: 8
            },
            end: {
              line: 5554,
              column: 9
            }
          }, {
            start: {
              line: 5551,
              column: 8
            },
            end: {
              line: 5554,
              column: 9
            }
          }],
          line: 5551
        },
        "140": {
          loc: {
            start: {
              line: 5551,
              column: 12
            },
            end: {
              line: 5551,
              column: 38
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 5551,
              column: 12
            },
            end: {
              line: 5551,
              column: 21
            }
          }, {
            start: {
              line: 5551,
              column: 25
            },
            end: {
              line: 5551,
              column: 38
            }
          }],
          line: 5551
        },
        "141": {
          loc: {
            start: {
              line: 5744,
              column: 4
            },
            end: {
              line: 5747,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5744,
              column: 4
            },
            end: {
              line: 5747,
              column: 5
            }
          }, {
            start: {
              line: 5744,
              column: 4
            },
            end: {
              line: 5747,
              column: 5
            }
          }],
          line: 5744
        },
        "142": {
          loc: {
            start: {
              line: 5759,
              column: 20
            },
            end: {
              line: 5762,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5759,
              column: 20
            },
            end: {
              line: 5762,
              column: 21
            }
          }, {
            start: {
              line: 5759,
              column: 20
            },
            end: {
              line: 5762,
              column: 21
            }
          }],
          line: 5759
        },
        "143": {
          loc: {
            start: {
              line: 5776,
              column: 24
            },
            end: {
              line: 5800,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5776,
              column: 24
            },
            end: {
              line: 5800,
              column: 25
            }
          }, {
            start: {
              line: 5776,
              column: 24
            },
            end: {
              line: 5800,
              column: 25
            }
          }],
          line: 5776
        },
        "144": {
          loc: {
            start: {
              line: 5776,
              column: 28
            },
            end: {
              line: 5776,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 5776,
              column: 28
            },
            end: {
              line: 5776,
              column: 35
            }
          }, {
            start: {
              line: 5776,
              column: 39
            },
            end: {
              line: 5776,
              column: 43
            }
          }],
          line: 5776
        },
        "145": {
          loc: {
            start: {
              line: 5780,
              column: 28
            },
            end: {
              line: 5799,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5780,
              column: 28
            },
            end: {
              line: 5799,
              column: 29
            }
          }, {
            start: {
              line: 5780,
              column: 28
            },
            end: {
              line: 5799,
              column: 29
            }
          }],
          line: 5780
        },
        "146": {
          loc: {
            start: {
              line: 5780,
              column: 32
            },
            end: {
              line: 5780,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 5780,
              column: 32
            },
            end: {
              line: 5780,
              column: 41
            }
          }, {
            start: {
              line: 5780,
              column: 45
            },
            end: {
              line: 5780,
              column: 53
            }
          }],
          line: 5780
        },
        "147": {
          loc: {
            start: {
              line: 5791,
              column: 32
            },
            end: {
              line: 5798,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5791,
              column: 32
            },
            end: {
              line: 5798,
              column: 33
            }
          }, {
            start: {
              line: 5791,
              column: 32
            },
            end: {
              line: 5798,
              column: 33
            }
          }],
          line: 5791
        },
        "148": {
          loc: {
            start: {
              line: 5861,
              column: 20
            },
            end: {
              line: 5863,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5861,
              column: 20
            },
            end: {
              line: 5863,
              column: 21
            }
          }, {
            start: {
              line: 5861,
              column: 20
            },
            end: {
              line: 5863,
              column: 21
            }
          }],
          line: 5861
        },
        "149": {
          loc: {
            start: {
              line: 5907,
              column: 20
            },
            end: {
              line: 5907,
              column: 96
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5907,
              column: 20
            },
            end: {
              line: 5907,
              column: 96
            }
          }, {
            start: {
              line: 5907,
              column: 20
            },
            end: {
              line: 5907,
              column: 96
            }
          }],
          line: 5907
        },
        "150": {
          loc: {
            start: {
              line: 5920,
              column: 24
            },
            end: {
              line: 5927,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5920,
              column: 24
            },
            end: {
              line: 5927,
              column: 25
            }
          }, {
            start: {
              line: 5920,
              column: 24
            },
            end: {
              line: 5927,
              column: 25
            }
          }],
          line: 5920
        },
        "151": {
          loc: {
            start: {
              line: 5920,
              column: 28
            },
            end: {
              line: 5920,
              column: 48
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 5920,
              column: 28
            },
            end: {
              line: 5920,
              column: 35
            }
          }, {
            start: {
              line: 5920,
              column: 39
            },
            end: {
              line: 5920,
              column: 48
            }
          }],
          line: 5920
        },
        "152": {
          loc: {
            start: {
              line: 5924,
              column: 28
            },
            end: {
              line: 5926,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5924,
              column: 28
            },
            end: {
              line: 5926,
              column: 29
            }
          }, {
            start: {
              line: 5924,
              column: 28
            },
            end: {
              line: 5926,
              column: 29
            }
          }],
          line: 5924
        },
        "153": {
          loc: {
            start: {
              line: 5936,
              column: 12
            },
            end: {
              line: 5938,
              column: 13
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 5936,
              column: 12
            },
            end: {
              line: 5938,
              column: 13
            }
          }, {
            start: {
              line: 5936,
              column: 12
            },
            end: {
              line: 5938,
              column: 13
            }
          }],
          line: 5936
        },
        "154": {
          loc: {
            start: {
              line: 6028,
              column: 20
            },
            end: {
              line: 6031,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6028,
              column: 20
            },
            end: {
              line: 6031,
              column: 21
            }
          }, {
            start: {
              line: 6028,
              column: 20
            },
            end: {
              line: 6031,
              column: 21
            }
          }],
          line: 6028
        },
        "155": {
          loc: {
            start: {
              line: 6043,
              column: 24
            },
            end: {
              line: 6067,
              column: 25
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6043,
              column: 24
            },
            end: {
              line: 6067,
              column: 25
            }
          }, {
            start: {
              line: 6043,
              column: 24
            },
            end: {
              line: 6067,
              column: 25
            }
          }],
          line: 6043
        },
        "156": {
          loc: {
            start: {
              line: 6043,
              column: 28
            },
            end: {
              line: 6043,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 6043,
              column: 28
            },
            end: {
              line: 6043,
              column: 35
            }
          }, {
            start: {
              line: 6043,
              column: 39
            },
            end: {
              line: 6043,
              column: 43
            }
          }],
          line: 6043
        },
        "157": {
          loc: {
            start: {
              line: 6047,
              column: 28
            },
            end: {
              line: 6066,
              column: 29
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6047,
              column: 28
            },
            end: {
              line: 6066,
              column: 29
            }
          }, {
            start: {
              line: 6047,
              column: 28
            },
            end: {
              line: 6066,
              column: 29
            }
          }],
          line: 6047
        },
        "158": {
          loc: {
            start: {
              line: 6047,
              column: 32
            },
            end: {
              line: 6047,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 6047,
              column: 32
            },
            end: {
              line: 6047,
              column: 41
            }
          }, {
            start: {
              line: 6047,
              column: 45
            },
            end: {
              line: 6047,
              column: 53
            }
          }],
          line: 6047
        },
        "159": {
          loc: {
            start: {
              line: 6058,
              column: 32
            },
            end: {
              line: 6065,
              column: 33
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6058,
              column: 32
            },
            end: {
              line: 6065,
              column: 33
            }
          }, {
            start: {
              line: 6058,
              column: 32
            },
            end: {
              line: 6065,
              column: 33
            }
          }],
          line: 6058
        },
        "160": {
          loc: {
            start: {
              line: 6128,
              column: 20
            },
            end: {
              line: 6130,
              column: 21
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6128,
              column: 20
            },
            end: {
              line: 6130,
              column: 21
            }
          }, {
            start: {
              line: 6128,
              column: 20
            },
            end: {
              line: 6130,
              column: 21
            }
          }],
          line: 6128
        },
        "161": {
          loc: {
            start: {
              line: 6207,
              column: 8
            },
            end: {
              line: 6210,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6207,
              column: 8
            },
            end: {
              line: 6210,
              column: 9
            }
          }, {
            start: {
              line: 6207,
              column: 8
            },
            end: {
              line: 6210,
              column: 9
            }
          }],
          line: 6207
        },
        "162": {
          loc: {
            start: {
              line: 6411,
              column: 8
            },
            end: {
              line: 6415,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6411,
              column: 8
            },
            end: {
              line: 6415,
              column: 9
            }
          }, {
            start: {
              line: 6411,
              column: 8
            },
            end: {
              line: 6415,
              column: 9
            }
          }],
          line: 6411
        },
        "163": {
          loc: {
            start: {
              line: 6418,
              column: 8
            },
            end: {
              line: 6422,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6418,
              column: 8
            },
            end: {
              line: 6422,
              column: 9
            }
          }, {
            start: {
              line: 6418,
              column: 8
            },
            end: {
              line: 6422,
              column: 9
            }
          }],
          line: 6418
        },
        "164": {
          loc: {
            start: {
              line: 6425,
              column: 8
            },
            end: {
              line: 6428,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6425,
              column: 8
            },
            end: {
              line: 6428,
              column: 9
            }
          }, {
            start: {
              line: 6425,
              column: 8
            },
            end: {
              line: 6428,
              column: 9
            }
          }],
          line: 6425
        },
        "165": {
          loc: {
            start: {
              line: 6431,
              column: 8
            },
            end: {
              line: 6434,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6431,
              column: 8
            },
            end: {
              line: 6434,
              column: 9
            }
          }, {
            start: {
              line: 6431,
              column: 8
            },
            end: {
              line: 6434,
              column: 9
            }
          }],
          line: 6431
        },
        "166": {
          loc: {
            start: {
              line: 6436,
              column: 8
            },
            end: {
              line: 6439,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6436,
              column: 8
            },
            end: {
              line: 6439,
              column: 9
            }
          }, {
            start: {
              line: 6436,
              column: 8
            },
            end: {
              line: 6439,
              column: 9
            }
          }],
          line: 6436
        },
        "167": {
          loc: {
            start: {
              line: 6448,
              column: 8
            },
            end: {
              line: 6451,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6448,
              column: 8
            },
            end: {
              line: 6451,
              column: 9
            }
          }, {
            start: {
              line: 6448,
              column: 8
            },
            end: {
              line: 6451,
              column: 9
            }
          }],
          line: 6448
        },
        "168": {
          loc: {
            start: {
              line: 6509,
              column: 4
            },
            end: {
              line: 6513,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 6509,
              column: 4
            },
            end: {
              line: 6513,
              column: 5
            }
          }, {
            start: {
              line: 6509,
              column: 4
            },
            end: {
              line: 6513,
              column: 5
            }
          }],
          line: 6509
        },
        "169": {
          loc: {
            start: {
              line: 6509,
              column: 8
            },
            end: {
              line: 6509,
              column: 75
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 6509,
              column: 8
            },
            end: {
              line: 6509,
              column: 32
            }
          }, {
            start: {
              line: 6509,
              column: 36
            },
            end: {
              line: 6509,
              column: 75
            }
          }],
          line: 6509
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "129": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "137": 0,
        "138": 0,
        "139": 0,
        "140": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0,
        "156": 0,
        "157": 0,
        "158": 0,
        "159": 0,
        "160": 0,
        "161": 0,
        "162": 0,
        "163": 0,
        "164": 0,
        "165": 0,
        "166": 0,
        "167": 0,
        "168": 0,
        "169": 0,
        "170": 0,
        "171": 0,
        "172": 0,
        "173": 0,
        "174": 0,
        "175": 0,
        "176": 0,
        "177": 0,
        "178": 0,
        "179": 0,
        "180": 0,
        "181": 0,
        "182": 0,
        "183": 0,
        "184": 0,
        "185": 0,
        "186": 0,
        "187": 0,
        "188": 0,
        "189": 0,
        "190": 0,
        "191": 0,
        "192": 0,
        "193": 0,
        "194": 0,
        "195": 0,
        "196": 0,
        "197": 0,
        "198": 0,
        "199": 0,
        "200": 0,
        "201": 0,
        "202": 0,
        "203": 0,
        "204": 0,
        "205": 0,
        "206": 0,
        "207": 0,
        "208": 0,
        "209": 0,
        "210": 0,
        "211": 0,
        "212": 0,
        "213": 0,
        "214": 0,
        "215": 0,
        "216": 0,
        "217": 0,
        "218": 0,
        "219": 0,
        "220": 0,
        "221": 0,
        "222": 0,
        "223": 0,
        "224": 0,
        "225": 0,
        "226": 0,
        "227": 0,
        "228": 0,
        "229": 0,
        "230": 0,
        "231": 0,
        "232": 0,
        "233": 0,
        "234": 0,
        "235": 0,
        "236": 0,
        "237": 0,
        "238": 0,
        "239": 0,
        "240": 0,
        "241": 0,
        "242": 0,
        "243": 0,
        "244": 0,
        "245": 0,
        "246": 0,
        "247": 0,
        "248": 0,
        "249": 0,
        "250": 0,
        "251": 0,
        "252": 0,
        "253": 0,
        "254": 0,
        "255": 0,
        "256": 0,
        "257": 0,
        "258": 0,
        "259": 0,
        "260": 0,
        "261": 0,
        "262": 0,
        "263": 0,
        "264": 0,
        "265": 0,
        "266": 0,
        "267": 0,
        "268": 0,
        "269": 0,
        "270": 0,
        "271": 0,
        "272": 0,
        "273": 0,
        "274": 0,
        "275": 0,
        "276": 0,
        "277": 0,
        "278": 0,
        "279": 0,
        "280": 0,
        "281": 0,
        "282": 0,
        "283": 0,
        "284": 0,
        "285": 0,
        "286": 0,
        "287": 0,
        "288": 0,
        "289": 0,
        "290": 0,
        "291": 0,
        "292": 0,
        "293": 0,
        "294": 0,
        "295": 0,
        "296": 0,
        "297": 0,
        "298": 0,
        "299": 0,
        "300": 0,
        "301": 0,
        "302": 0,
        "303": 0,
        "304": 0,
        "305": 0,
        "306": 0,
        "307": 0,
        "308": 0,
        "309": 0,
        "310": 0,
        "311": 0,
        "312": 0,
        "313": 0,
        "314": 0,
        "315": 0,
        "316": 0,
        "317": 0,
        "318": 0,
        "319": 0,
        "320": 0,
        "321": 0,
        "322": 0,
        "323": 0,
        "324": 0,
        "325": 0,
        "326": 0,
        "327": 0,
        "328": 0,
        "329": 0,
        "330": 0,
        "331": 0,
        "332": 0,
        "333": 0,
        "334": 0,
        "335": 0,
        "336": 0,
        "337": 0,
        "338": 0,
        "339": 0,
        "340": 0,
        "341": 0,
        "342": 0,
        "343": 0,
        "344": 0,
        "345": 0,
        "346": 0,
        "347": 0,
        "348": 0,
        "349": 0,
        "350": 0,
        "351": 0,
        "352": 0,
        "353": 0,
        "354": 0,
        "355": 0,
        "356": 0,
        "357": 0,
        "358": 0,
        "359": 0,
        "360": 0,
        "361": 0,
        "362": 0,
        "363": 0,
        "364": 0,
        "365": 0,
        "366": 0,
        "367": 0,
        "368": 0,
        "369": 0,
        "370": 0,
        "371": 0,
        "372": 0,
        "373": 0,
        "374": 0,
        "375": 0,
        "376": 0,
        "377": 0,
        "378": 0,
        "379": 0,
        "380": 0,
        "381": 0,
        "382": 0,
        "383": 0,
        "384": 0,
        "385": 0,
        "386": 0,
        "387": 0,
        "388": 0,
        "389": 0,
        "390": 0,
        "391": 0,
        "392": 0,
        "393": 0,
        "394": 0,
        "395": 0,
        "396": 0,
        "397": 0,
        "398": 0,
        "399": 0,
        "400": 0,
        "401": 0,
        "402": 0,
        "403": 0,
        "404": 0,
        "405": 0,
        "406": 0,
        "407": 0,
        "408": 0,
        "409": 0,
        "410": 0,
        "411": 0,
        "412": 0,
        "413": 0,
        "414": 0,
        "415": 0,
        "416": 0,
        "417": 0,
        "418": 0,
        "419": 0,
        "420": 0,
        "421": 0,
        "422": 0,
        "423": 0,
        "424": 0,
        "425": 0,
        "426": 0,
        "427": 0,
        "428": 0,
        "429": 0,
        "430": 0,
        "431": 0,
        "432": 0,
        "433": 0,
        "434": 0,
        "435": 0,
        "436": 0,
        "437": 0,
        "438": 0,
        "439": 0,
        "440": 0,
        "441": 0,
        "442": 0,
        "443": 0,
        "444": 0,
        "445": 0,
        "446": 0,
        "447": 0,
        "448": 0,
        "449": 0,
        "450": 0,
        "451": 0,
        "452": 0,
        "453": 0,
        "454": 0,
        "455": 0,
        "456": 0,
        "457": 0,
        "458": 0,
        "459": 0,
        "460": 0,
        "461": 0,
        "462": 0,
        "463": 0,
        "464": 0,
        "465": 0,
        "466": 0,
        "467": 0,
        "468": 0,
        "469": 0,
        "470": 0,
        "471": 0,
        "472": 0,
        "473": 0,
        "474": 0,
        "475": 0,
        "476": 0,
        "477": 0,
        "478": 0,
        "479": 0,
        "480": 0,
        "481": 0,
        "482": 0,
        "483": 0,
        "484": 0,
        "485": 0,
        "486": 0,
        "487": 0,
        "488": 0,
        "489": 0,
        "490": 0,
        "491": 0,
        "492": 0,
        "493": 0,
        "494": 0,
        "495": 0,
        "496": 0,
        "497": 0,
        "498": 0,
        "499": 0,
        "500": 0,
        "501": 0,
        "502": 0,
        "503": 0,
        "504": 0,
        "505": 0,
        "506": 0,
        "507": 0,
        "508": 0,
        "509": 0,
        "510": 0,
        "511": 0,
        "512": 0,
        "513": 0,
        "514": 0,
        "515": 0,
        "516": 0,
        "517": 0,
        "518": 0,
        "519": 0,
        "520": 0,
        "521": 0,
        "522": 0,
        "523": 0,
        "524": 0,
        "525": 0,
        "526": 0,
        "527": 0,
        "528": 0,
        "529": 0,
        "530": 0,
        "531": 0,
        "532": 0,
        "533": 0,
        "534": 0,
        "535": 0,
        "536": 0,
        "537": 0,
        "538": 0,
        "539": 0,
        "540": 0,
        "541": 0,
        "542": 0,
        "543": 0,
        "544": 0,
        "545": 0,
        "546": 0,
        "547": 0,
        "548": 0,
        "549": 0,
        "550": 0,
        "551": 0,
        "552": 0,
        "553": 0,
        "554": 0,
        "555": 0,
        "556": 0,
        "557": 0,
        "558": 0,
        "559": 0,
        "560": 0,
        "561": 0,
        "562": 0,
        "563": 0,
        "564": 0,
        "565": 0,
        "566": 0,
        "567": 0,
        "568": 0,
        "569": 0,
        "570": 0,
        "571": 0,
        "572": 0,
        "573": 0,
        "574": 0,
        "575": 0,
        "576": 0,
        "577": 0,
        "578": 0,
        "579": 0,
        "580": 0,
        "581": 0,
        "582": 0,
        "583": 0,
        "584": 0,
        "585": 0,
        "586": 0,
        "587": 0,
        "588": 0,
        "589": 0,
        "590": 0,
        "591": 0,
        "592": 0,
        "593": 0,
        "594": 0,
        "595": 0,
        "596": 0,
        "597": 0,
        "598": 0,
        "599": 0,
        "600": 0,
        "601": 0,
        "602": 0,
        "603": 0,
        "604": 0,
        "605": 0,
        "606": 0,
        "607": 0,
        "608": 0,
        "609": 0,
        "610": 0,
        "611": 0,
        "612": 0,
        "613": 0,
        "614": 0,
        "615": 0,
        "616": 0,
        "617": 0,
        "618": 0,
        "619": 0,
        "620": 0,
        "621": 0,
        "622": 0,
        "623": 0,
        "624": 0,
        "625": 0,
        "626": 0,
        "627": 0,
        "628": 0,
        "629": 0,
        "630": 0,
        "631": 0,
        "632": 0,
        "633": 0,
        "634": 0,
        "635": 0,
        "636": 0,
        "637": 0,
        "638": 0,
        "639": 0,
        "640": 0,
        "641": 0,
        "642": 0,
        "643": 0,
        "644": 0,
        "645": 0,
        "646": 0,
        "647": 0,
        "648": 0,
        "649": 0,
        "650": 0,
        "651": 0,
        "652": 0,
        "653": 0,
        "654": 0,
        "655": 0,
        "656": 0,
        "657": 0,
        "658": 0,
        "659": 0,
        "660": 0,
        "661": 0,
        "662": 0,
        "663": 0,
        "664": 0,
        "665": 0,
        "666": 0,
        "667": 0,
        "668": 0,
        "669": 0,
        "670": 0,
        "671": 0,
        "672": 0,
        "673": 0,
        "674": 0,
        "675": 0,
        "676": 0,
        "677": 0,
        "678": 0,
        "679": 0,
        "680": 0,
        "681": 0,
        "682": 0,
        "683": 0,
        "684": 0,
        "685": 0,
        "686": 0,
        "687": 0,
        "688": 0,
        "689": 0,
        "690": 0,
        "691": 0,
        "692": 0,
        "693": 0,
        "694": 0,
        "695": 0,
        "696": 0,
        "697": 0,
        "698": 0,
        "699": 0,
        "700": 0,
        "701": 0,
        "702": 0,
        "703": 0,
        "704": 0,
        "705": 0,
        "706": 0,
        "707": 0,
        "708": 0,
        "709": 0,
        "710": 0,
        "711": 0,
        "712": 0,
        "713": 0,
        "714": 0,
        "715": 0,
        "716": 0,
        "717": 0,
        "718": 0,
        "719": 0,
        "720": 0,
        "721": 0,
        "722": 0,
        "723": 0,
        "724": 0,
        "725": 0,
        "726": 0,
        "727": 0,
        "728": 0,
        "729": 0,
        "730": 0,
        "731": 0,
        "732": 0,
        "733": 0,
        "734": 0,
        "735": 0,
        "736": 0,
        "737": 0,
        "738": 0,
        "739": 0,
        "740": 0,
        "741": 0,
        "742": 0,
        "743": 0,
        "744": 0,
        "745": 0,
        "746": 0,
        "747": 0,
        "748": 0,
        "749": 0,
        "750": 0,
        "751": 0,
        "752": 0,
        "753": 0,
        "754": 0,
        "755": 0,
        "756": 0,
        "757": 0,
        "758": 0,
        "759": 0,
        "760": 0,
        "761": 0,
        "762": 0,
        "763": 0,
        "764": 0,
        "765": 0,
        "766": 0,
        "767": 0,
        "768": 0,
        "769": 0,
        "770": 0,
        "771": 0,
        "772": 0,
        "773": 0,
        "774": 0,
        "775": 0,
        "776": 0,
        "777": 0,
        "778": 0,
        "779": 0,
        "780": 0,
        "781": 0,
        "782": 0,
        "783": 0,
        "784": 0,
        "785": 0,
        "786": 0,
        "787": 0,
        "788": 0,
        "789": 0,
        "790": 0,
        "791": 0,
        "792": 0,
        "793": 0,
        "794": 0,
        "795": 0,
        "796": 0,
        "797": 0,
        "798": 0,
        "799": 0,
        "800": 0,
        "801": 0,
        "802": 0,
        "803": 0,
        "804": 0,
        "805": 0,
        "806": 0,
        "807": 0,
        "808": 0,
        "809": 0,
        "810": 0,
        "811": 0,
        "812": 0,
        "813": 0,
        "814": 0,
        "815": 0,
        "816": 0,
        "817": 0,
        "818": 0,
        "819": 0,
        "820": 0,
        "821": 0,
        "822": 0,
        "823": 0,
        "824": 0,
        "825": 0,
        "826": 0,
        "827": 0,
        "828": 0,
        "829": 0,
        "830": 0,
        "831": 0,
        "832": 0,
        "833": 0,
        "834": 0,
        "835": 0,
        "836": 0,
        "837": 0,
        "838": 0,
        "839": 0,
        "840": 0,
        "841": 0,
        "842": 0,
        "843": 0,
        "844": 0,
        "845": 0,
        "846": 0,
        "847": 0,
        "848": 0,
        "849": 0,
        "850": 0,
        "851": 0,
        "852": 0,
        "853": 0,
        "854": 0,
        "855": 0,
        "856": 0,
        "857": 0,
        "858": 0,
        "859": 0,
        "860": 0,
        "861": 0,
        "862": 0,
        "863": 0,
        "864": 0,
        "865": 0,
        "866": 0,
        "867": 0,
        "868": 0,
        "869": 0,
        "870": 0,
        "871": 0,
        "872": 0,
        "873": 0,
        "874": 0,
        "875": 0,
        "876": 0,
        "877": 0,
        "878": 0,
        "879": 0,
        "880": 0,
        "881": 0,
        "882": 0,
        "883": 0,
        "884": 0,
        "885": 0,
        "886": 0,
        "887": 0,
        "888": 0,
        "889": 0,
        "890": 0,
        "891": 0,
        "892": 0,
        "893": 0,
        "894": 0,
        "895": 0,
        "896": 0,
        "897": 0,
        "898": 0,
        "899": 0,
        "900": 0,
        "901": 0,
        "902": 0,
        "903": 0,
        "904": 0,
        "905": 0,
        "906": 0,
        "907": 0,
        "908": 0,
        "909": 0,
        "910": 0,
        "911": 0,
        "912": 0,
        "913": 0,
        "914": 0,
        "915": 0,
        "916": 0,
        "917": 0,
        "918": 0,
        "919": 0,
        "920": 0,
        "921": 0,
        "922": 0,
        "923": 0,
        "924": 0,
        "925": 0,
        "926": 0,
        "927": 0,
        "928": 0,
        "929": 0,
        "930": 0,
        "931": 0,
        "932": 0,
        "933": 0,
        "934": 0,
        "935": 0,
        "936": 0,
        "937": 0,
        "938": 0,
        "939": 0,
        "940": 0,
        "941": 0,
        "942": 0,
        "943": 0,
        "944": 0,
        "945": 0,
        "946": 0,
        "947": 0,
        "948": 0,
        "949": 0,
        "950": 0,
        "951": 0,
        "952": 0,
        "953": 0,
        "954": 0,
        "955": 0,
        "956": 0,
        "957": 0,
        "958": 0,
        "959": 0,
        "960": 0,
        "961": 0,
        "962": 0,
        "963": 0,
        "964": 0,
        "965": 0,
        "966": 0,
        "967": 0,
        "968": 0,
        "969": 0,
        "970": 0,
        "971": 0,
        "972": 0,
        "973": 0,
        "974": 0,
        "975": 0,
        "976": 0,
        "977": 0,
        "978": 0,
        "979": 0,
        "980": 0,
        "981": 0,
        "982": 0,
        "983": 0,
        "984": 0,
        "985": 0,
        "986": 0,
        "987": 0,
        "988": 0,
        "989": 0,
        "990": 0,
        "991": 0,
        "992": 0,
        "993": 0,
        "994": 0,
        "995": 0,
        "996": 0,
        "997": 0,
        "998": 0,
        "999": 0,
        "1000": 0,
        "1001": 0,
        "1002": 0,
        "1003": 0,
        "1004": 0,
        "1005": 0,
        "1006": 0,
        "1007": 0,
        "1008": 0,
        "1009": 0,
        "1010": 0,
        "1011": 0,
        "1012": 0,
        "1013": 0,
        "1014": 0,
        "1015": 0,
        "1016": 0,
        "1017": 0,
        "1018": 0,
        "1019": 0,
        "1020": 0,
        "1021": 0,
        "1022": 0,
        "1023": 0,
        "1024": 0,
        "1025": 0,
        "1026": 0,
        "1027": 0,
        "1028": 0,
        "1029": 0,
        "1030": 0,
        "1031": 0,
        "1032": 0,
        "1033": 0,
        "1034": 0,
        "1035": 0,
        "1036": 0,
        "1037": 0,
        "1038": 0,
        "1039": 0,
        "1040": 0,
        "1041": 0,
        "1042": 0,
        "1043": 0,
        "1044": 0,
        "1045": 0,
        "1046": 0,
        "1047": 0,
        "1048": 0,
        "1049": 0,
        "1050": 0,
        "1051": 0,
        "1052": 0,
        "1053": 0,
        "1054": 0,
        "1055": 0,
        "1056": 0,
        "1057": 0,
        "1058": 0,
        "1059": 0,
        "1060": 0,
        "1061": 0,
        "1062": 0,
        "1063": 0,
        "1064": 0,
        "1065": 0,
        "1066": 0,
        "1067": 0,
        "1068": 0,
        "1069": 0,
        "1070": 0,
        "1071": 0,
        "1072": 0,
        "1073": 0,
        "1074": 0,
        "1075": 0,
        "1076": 0,
        "1077": 0,
        "1078": 0,
        "1079": 0,
        "1080": 0,
        "1081": 0,
        "1082": 0,
        "1083": 0,
        "1084": 0,
        "1085": 0,
        "1086": 0,
        "1087": 0,
        "1088": 0,
        "1089": 0,
        "1090": 0,
        "1091": 0,
        "1092": 0,
        "1093": 0,
        "1094": 0,
        "1095": 0,
        "1096": 0,
        "1097": 0,
        "1098": 0,
        "1099": 0,
        "1100": 0,
        "1101": 0,
        "1102": 0,
        "1103": 0,
        "1104": 0,
        "1105": 0,
        "1106": 0,
        "1107": 0,
        "1108": 0,
        "1109": 0,
        "1110": 0,
        "1111": 0,
        "1112": 0,
        "1113": 0,
        "1114": 0,
        "1115": 0,
        "1116": 0,
        "1117": 0,
        "1118": 0,
        "1119": 0,
        "1120": 0,
        "1121": 0,
        "1122": 0,
        "1123": 0,
        "1124": 0,
        "1125": 0,
        "1126": 0,
        "1127": 0,
        "1128": 0,
        "1129": 0,
        "1130": 0,
        "1131": 0,
        "1132": 0,
        "1133": 0,
        "1134": 0,
        "1135": 0,
        "1136": 0,
        "1137": 0,
        "1138": 0,
        "1139": 0,
        "1140": 0,
        "1141": 0,
        "1142": 0,
        "1143": 0,
        "1144": 0,
        "1145": 0,
        "1146": 0,
        "1147": 0,
        "1148": 0,
        "1149": 0,
        "1150": 0,
        "1151": 0,
        "1152": 0,
        "1153": 0,
        "1154": 0,
        "1155": 0,
        "1156": 0,
        "1157": 0,
        "1158": 0,
        "1159": 0,
        "1160": 0,
        "1161": 0,
        "1162": 0,
        "1163": 0,
        "1164": 0,
        "1165": 0,
        "1166": 0,
        "1167": 0,
        "1168": 0,
        "1169": 0,
        "1170": 0,
        "1171": 0,
        "1172": 0,
        "1173": 0,
        "1174": 0,
        "1175": 0,
        "1176": 0,
        "1177": 0,
        "1178": 0,
        "1179": 0,
        "1180": 0,
        "1181": 0,
        "1182": 0,
        "1183": 0,
        "1184": 0,
        "1185": 0,
        "1186": 0,
        "1187": 0,
        "1188": 0,
        "1189": 0,
        "1190": 0,
        "1191": 0,
        "1192": 0,
        "1193": 0,
        "1194": 0,
        "1195": 0,
        "1196": 0,
        "1197": 0,
        "1198": 0,
        "1199": 0,
        "1200": 0,
        "1201": 0,
        "1202": 0,
        "1203": 0,
        "1204": 0,
        "1205": 0,
        "1206": 0,
        "1207": 0,
        "1208": 0,
        "1209": 0,
        "1210": 0,
        "1211": 0,
        "1212": 0,
        "1213": 0,
        "1214": 0,
        "1215": 0,
        "1216": 0,
        "1217": 0,
        "1218": 0,
        "1219": 0,
        "1220": 0,
        "1221": 0,
        "1222": 0,
        "1223": 0,
        "1224": 0,
        "1225": 0,
        "1226": 0,
        "1227": 0,
        "1228": 0,
        "1229": 0,
        "1230": 0,
        "1231": 0,
        "1232": 0,
        "1233": 0,
        "1234": 0,
        "1235": 0,
        "1236": 0,
        "1237": 0,
        "1238": 0,
        "1239": 0,
        "1240": 0,
        "1241": 0,
        "1242": 0,
        "1243": 0,
        "1244": 0,
        "1245": 0,
        "1246": 0,
        "1247": 0,
        "1248": 0,
        "1249": 0,
        "1250": 0,
        "1251": 0,
        "1252": 0,
        "1253": 0,
        "1254": 0,
        "1255": 0,
        "1256": 0,
        "1257": 0,
        "1258": 0,
        "1259": 0,
        "1260": 0,
        "1261": 0,
        "1262": 0,
        "1263": 0,
        "1264": 0,
        "1265": 0,
        "1266": 0,
        "1267": 0,
        "1268": 0,
        "1269": 0,
        "1270": 0,
        "1271": 0,
        "1272": 0,
        "1273": 0,
        "1274": 0,
        "1275": 0,
        "1276": 0,
        "1277": 0,
        "1278": 0,
        "1279": 0,
        "1280": 0,
        "1281": 0,
        "1282": 0,
        "1283": 0,
        "1284": 0,
        "1285": 0,
        "1286": 0,
        "1287": 0,
        "1288": 0,
        "1289": 0,
        "1290": 0,
        "1291": 0,
        "1292": 0,
        "1293": 0,
        "1294": 0,
        "1295": 0,
        "1296": 0,
        "1297": 0,
        "1298": 0,
        "1299": 0,
        "1300": 0,
        "1301": 0,
        "1302": 0,
        "1303": 0,
        "1304": 0,
        "1305": 0,
        "1306": 0,
        "1307": 0,
        "1308": 0,
        "1309": 0,
        "1310": 0,
        "1311": 0,
        "1312": 0,
        "1313": 0,
        "1314": 0,
        "1315": 0,
        "1316": 0,
        "1317": 0,
        "1318": 0,
        "1319": 0,
        "1320": 0,
        "1321": 0,
        "1322": 0,
        "1323": 0,
        "1324": 0,
        "1325": 0,
        "1326": 0,
        "1327": 0,
        "1328": 0,
        "1329": 0,
        "1330": 0,
        "1331": 0,
        "1332": 0,
        "1333": 0,
        "1334": 0,
        "1335": 0,
        "1336": 0,
        "1337": 0,
        "1338": 0,
        "1339": 0,
        "1340": 0,
        "1341": 0,
        "1342": 0,
        "1343": 0,
        "1344": 0,
        "1345": 0,
        "1346": 0,
        "1347": 0,
        "1348": 0,
        "1349": 0,
        "1350": 0,
        "1351": 0,
        "1352": 0,
        "1353": 0,
        "1354": 0,
        "1355": 0,
        "1356": 0,
        "1357": 0,
        "1358": 0,
        "1359": 0,
        "1360": 0,
        "1361": 0,
        "1362": 0,
        "1363": 0,
        "1364": 0,
        "1365": 0,
        "1366": 0,
        "1367": 0,
        "1368": 0,
        "1369": 0,
        "1370": 0,
        "1371": 0,
        "1372": 0,
        "1373": 0,
        "1374": 0,
        "1375": 0,
        "1376": 0,
        "1377": 0,
        "1378": 0,
        "1379": 0,
        "1380": 0,
        "1381": 0,
        "1382": 0,
        "1383": 0,
        "1384": 0,
        "1385": 0,
        "1386": 0,
        "1387": 0,
        "1388": 0,
        "1389": 0,
        "1390": 0,
        "1391": 0,
        "1392": 0,
        "1393": 0,
        "1394": 0,
        "1395": 0,
        "1396": 0,
        "1397": 0,
        "1398": 0,
        "1399": 0,
        "1400": 0,
        "1401": 0,
        "1402": 0,
        "1403": 0,
        "1404": 0,
        "1405": 0,
        "1406": 0,
        "1407": 0,
        "1408": 0,
        "1409": 0,
        "1410": 0,
        "1411": 0,
        "1412": 0,
        "1413": 0,
        "1414": 0,
        "1415": 0,
        "1416": 0,
        "1417": 0,
        "1418": 0,
        "1419": 0,
        "1420": 0,
        "1421": 0,
        "1422": 0,
        "1423": 0,
        "1424": 0,
        "1425": 0,
        "1426": 0,
        "1427": 0,
        "1428": 0,
        "1429": 0,
        "1430": 0,
        "1431": 0,
        "1432": 0,
        "1433": 0,
        "1434": 0,
        "1435": 0,
        "1436": 0,
        "1437": 0,
        "1438": 0,
        "1439": 0,
        "1440": 0,
        "1441": 0,
        "1442": 0,
        "1443": 0,
        "1444": 0,
        "1445": 0,
        "1446": 0,
        "1447": 0,
        "1448": 0,
        "1449": 0,
        "1450": 0,
        "1451": 0,
        "1452": 0,
        "1453": 0,
        "1454": 0,
        "1455": 0,
        "1456": 0,
        "1457": 0,
        "1458": 0,
        "1459": 0,
        "1460": 0,
        "1461": 0,
        "1462": 0,
        "1463": 0,
        "1464": 0,
        "1465": 0,
        "1466": 0,
        "1467": 0,
        "1468": 0,
        "1469": 0,
        "1470": 0,
        "1471": 0,
        "1472": 0,
        "1473": 0,
        "1474": 0,
        "1475": 0,
        "1476": 0,
        "1477": 0,
        "1478": 0,
        "1479": 0,
        "1480": 0,
        "1481": 0,
        "1482": 0,
        "1483": 0,
        "1484": 0,
        "1485": 0,
        "1486": 0,
        "1487": 0,
        "1488": 0,
        "1489": 0,
        "1490": 0,
        "1491": 0,
        "1492": 0,
        "1493": 0,
        "1494": 0,
        "1495": 0,
        "1496": 0,
        "1497": 0,
        "1498": 0,
        "1499": 0,
        "1500": 0,
        "1501": 0,
        "1502": 0,
        "1503": 0,
        "1504": 0,
        "1505": 0,
        "1506": 0,
        "1507": 0,
        "1508": 0,
        "1509": 0,
        "1510": 0,
        "1511": 0,
        "1512": 0,
        "1513": 0,
        "1514": 0,
        "1515": 0,
        "1516": 0,
        "1517": 0,
        "1518": 0,
        "1519": 0,
        "1520": 0,
        "1521": 0,
        "1522": 0,
        "1523": 0,
        "1524": 0,
        "1525": 0,
        "1526": 0,
        "1527": 0,
        "1528": 0,
        "1529": 0,
        "1530": 0,
        "1531": 0,
        "1532": 0,
        "1533": 0,
        "1534": 0,
        "1535": 0,
        "1536": 0,
        "1537": 0,
        "1538": 0,
        "1539": 0,
        "1540": 0,
        "1541": 0,
        "1542": 0,
        "1543": 0,
        "1544": 0,
        "1545": 0,
        "1546": 0,
        "1547": 0,
        "1548": 0,
        "1549": 0,
        "1550": 0,
        "1551": 0,
        "1552": 0,
        "1553": 0,
        "1554": 0,
        "1555": 0,
        "1556": 0,
        "1557": 0,
        "1558": 0,
        "1559": 0,
        "1560": 0,
        "1561": 0,
        "1562": 0,
        "1563": 0,
        "1564": 0,
        "1565": 0,
        "1566": 0,
        "1567": 0,
        "1568": 0,
        "1569": 0,
        "1570": 0,
        "1571": 0,
        "1572": 0,
        "1573": 0,
        "1574": 0,
        "1575": 0,
        "1576": 0,
        "1577": 0,
        "1578": 0,
        "1579": 0,
        "1580": 0,
        "1581": 0,
        "1582": 0,
        "1583": 0,
        "1584": 0,
        "1585": 0,
        "1586": 0,
        "1587": 0,
        "1588": 0,
        "1589": 0,
        "1590": 0,
        "1591": 0,
        "1592": 0,
        "1593": 0,
        "1594": 0,
        "1595": 0,
        "1596": 0,
        "1597": 0,
        "1598": 0,
        "1599": 0,
        "1600": 0,
        "1601": 0,
        "1602": 0,
        "1603": 0,
        "1604": 0,
        "1605": 0,
        "1606": 0,
        "1607": 0,
        "1608": 0,
        "1609": 0,
        "1610": 0,
        "1611": 0,
        "1612": 0,
        "1613": 0,
        "1614": 0,
        "1615": 0,
        "1616": 0,
        "1617": 0,
        "1618": 0,
        "1619": 0,
        "1620": 0,
        "1621": 0,
        "1622": 0,
        "1623": 0,
        "1624": 0,
        "1625": 0,
        "1626": 0,
        "1627": 0,
        "1628": 0,
        "1629": 0,
        "1630": 0,
        "1631": 0,
        "1632": 0,
        "1633": 0,
        "1634": 0,
        "1635": 0,
        "1636": 0,
        "1637": 0,
        "1638": 0,
        "1639": 0,
        "1640": 0,
        "1641": 0,
        "1642": 0,
        "1643": 0,
        "1644": 0,
        "1645": 0,
        "1646": 0,
        "1647": 0,
        "1648": 0,
        "1649": 0,
        "1650": 0,
        "1651": 0,
        "1652": 0,
        "1653": 0,
        "1654": 0,
        "1655": 0,
        "1656": 0,
        "1657": 0,
        "1658": 0,
        "1659": 0,
        "1660": 0,
        "1661": 0,
        "1662": 0,
        "1663": 0,
        "1664": 0,
        "1665": 0,
        "1666": 0,
        "1667": 0,
        "1668": 0,
        "1669": 0,
        "1670": 0,
        "1671": 0,
        "1672": 0,
        "1673": 0,
        "1674": 0,
        "1675": 0,
        "1676": 0,
        "1677": 0,
        "1678": 0,
        "1679": 0,
        "1680": 0,
        "1681": 0,
        "1682": 0,
        "1683": 0,
        "1684": 0,
        "1685": 0,
        "1686": 0,
        "1687": 0,
        "1688": 0,
        "1689": 0,
        "1690": 0,
        "1691": 0,
        "1692": 0,
        "1693": 0,
        "1694": 0,
        "1695": 0,
        "1696": 0,
        "1697": 0,
        "1698": 0,
        "1699": 0,
        "1700": 0,
        "1701": 0,
        "1702": 0,
        "1703": 0,
        "1704": 0,
        "1705": 0,
        "1706": 0,
        "1707": 0,
        "1708": 0,
        "1709": 0,
        "1710": 0,
        "1711": 0,
        "1712": 0,
        "1713": 0,
        "1714": 0,
        "1715": 0,
        "1716": 0,
        "1717": 0,
        "1718": 0,
        "1719": 0,
        "1720": 0,
        "1721": 0,
        "1722": 0,
        "1723": 0,
        "1724": 0,
        "1725": 0,
        "1726": 0,
        "1727": 0,
        "1728": 0,
        "1729": 0,
        "1730": 0,
        "1731": 0,
        "1732": 0,
        "1733": 0,
        "1734": 0,
        "1735": 0,
        "1736": 0,
        "1737": 0,
        "1738": 0,
        "1739": 0,
        "1740": 0,
        "1741": 0,
        "1742": 0,
        "1743": 0,
        "1744": 0,
        "1745": 0,
        "1746": 0,
        "1747": 0,
        "1748": 0,
        "1749": 0,
        "1750": 0,
        "1751": 0,
        "1752": 0,
        "1753": 0,
        "1754": 0,
        "1755": 0,
        "1756": 0,
        "1757": 0,
        "1758": 0,
        "1759": 0,
        "1760": 0,
        "1761": 0,
        "1762": 0,
        "1763": 0,
        "1764": 0,
        "1765": 0,
        "1766": 0,
        "1767": 0,
        "1768": 0,
        "1769": 0,
        "1770": 0,
        "1771": 0,
        "1772": 0,
        "1773": 0,
        "1774": 0,
        "1775": 0,
        "1776": 0,
        "1777": 0,
        "1778": 0,
        "1779": 0,
        "1780": 0,
        "1781": 0,
        "1782": 0,
        "1783": 0,
        "1784": 0,
        "1785": 0,
        "1786": 0,
        "1787": 0,
        "1788": 0,
        "1789": 0,
        "1790": 0,
        "1791": 0,
        "1792": 0,
        "1793": 0,
        "1794": 0,
        "1795": 0,
        "1796": 0,
        "1797": 0,
        "1798": 0,
        "1799": 0,
        "1800": 0,
        "1801": 0,
        "1802": 0,
        "1803": 0,
        "1804": 0,
        "1805": 0,
        "1806": 0,
        "1807": 0,
        "1808": 0,
        "1809": 0,
        "1810": 0,
        "1811": 0,
        "1812": 0,
        "1813": 0,
        "1814": 0,
        "1815": 0,
        "1816": 0,
        "1817": 0,
        "1818": 0,
        "1819": 0,
        "1820": 0,
        "1821": 0,
        "1822": 0,
        "1823": 0,
        "1824": 0,
        "1825": 0,
        "1826": 0,
        "1827": 0,
        "1828": 0,
        "1829": 0,
        "1830": 0,
        "1831": 0,
        "1832": 0,
        "1833": 0,
        "1834": 0,
        "1835": 0,
        "1836": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "129": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "137": 0,
        "138": 0,
        "139": 0,
        "140": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0,
        "156": 0,
        "157": 0,
        "158": 0,
        "159": 0,
        "160": 0,
        "161": 0,
        "162": 0,
        "163": 0,
        "164": 0,
        "165": 0,
        "166": 0,
        "167": 0,
        "168": 0,
        "169": 0,
        "170": 0,
        "171": 0,
        "172": 0,
        "173": 0,
        "174": 0,
        "175": 0,
        "176": 0,
        "177": 0,
        "178": 0,
        "179": 0,
        "180": 0,
        "181": 0,
        "182": 0,
        "183": 0,
        "184": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0, 0],
        "7": [0, 0],
        "8": [0, 0],
        "9": [0, 0],
        "10": [0, 0],
        "11": [0, 0],
        "12": [0, 0],
        "13": [0, 0],
        "14": [0, 0],
        "15": [0, 0],
        "16": [0, 0],
        "17": [0, 0],
        "18": [0, 0],
        "19": [0, 0],
        "20": [0, 0],
        "21": [0, 0],
        "22": [0, 0],
        "23": [0, 0],
        "24": [0, 0],
        "25": [0, 0],
        "26": [0, 0],
        "27": [0, 0],
        "28": [0, 0],
        "29": [0, 0],
        "30": [0, 0],
        "31": [0, 0],
        "32": [0, 0],
        "33": [0, 0],
        "34": [0, 0],
        "35": [0, 0],
        "36": [0, 0],
        "37": [0, 0],
        "38": [0, 0],
        "39": [0, 0],
        "40": [0, 0],
        "41": [0, 0],
        "42": [0, 0],
        "43": [0, 0],
        "44": [0, 0],
        "45": [0, 0],
        "46": [0, 0],
        "47": [0, 0],
        "48": [0, 0],
        "49": [0, 0],
        "50": [0, 0],
        "51": [0, 0],
        "52": [0, 0],
        "53": [0, 0],
        "54": [0, 0],
        "55": [0, 0],
        "56": [0, 0],
        "57": [0, 0],
        "58": [0, 0],
        "59": [0, 0],
        "60": [0, 0],
        "61": [0, 0],
        "62": [0, 0],
        "63": [0, 0],
        "64": [0, 0],
        "65": [0, 0],
        "66": [0, 0],
        "67": [0, 0],
        "68": [0, 0],
        "69": [0, 0],
        "70": [0, 0],
        "71": [0, 0],
        "72": [0, 0],
        "73": [0, 0],
        "74": [0, 0],
        "75": [0, 0],
        "76": [0, 0],
        "77": [0, 0],
        "78": [0, 0],
        "79": [0, 0],
        "80": [0, 0],
        "81": [0, 0],
        "82": [0, 0],
        "83": [0, 0],
        "84": [0, 0],
        "85": [0, 0],
        "86": [0, 0],
        "87": [0, 0],
        "88": [0, 0],
        "89": [0, 0],
        "90": [0, 0],
        "91": [0, 0],
        "92": [0, 0],
        "93": [0, 0],
        "94": [0, 0],
        "95": [0, 0],
        "96": [0, 0],
        "97": [0, 0],
        "98": [0, 0],
        "99": [0, 0],
        "100": [0, 0],
        "101": [0, 0],
        "102": [0, 0],
        "103": [0, 0],
        "104": [0, 0],
        "105": [0, 0],
        "106": [0, 0],
        "107": [0, 0],
        "108": [0, 0],
        "109": [0, 0],
        "110": [0, 0],
        "111": [0, 0],
        "112": [0, 0],
        "113": [0, 0],
        "114": [0, 0],
        "115": [0, 0],
        "116": [0, 0],
        "117": [0, 0],
        "118": [0, 0],
        "119": [0, 0],
        "120": [0, 0],
        "121": [0, 0],
        "122": [0, 0],
        "123": [0, 0],
        "124": [0, 0],
        "125": [0, 0],
        "126": [0, 0],
        "127": [0, 0],
        "128": [0, 0],
        "129": [0, 0],
        "130": [0, 0],
        "131": [0, 0],
        "132": [0, 0],
        "133": [0, 0],
        "134": [0, 0],
        "135": [0, 0],
        "136": [0, 0],
        "137": [0, 0],
        "138": [0, 0],
        "139": [0, 0],
        "140": [0, 0],
        "141": [0, 0],
        "142": [0, 0],
        "143": [0, 0],
        "144": [0, 0],
        "145": [0, 0],
        "146": [0, 0],
        "147": [0, 0],
        "148": [0, 0],
        "149": [0, 0],
        "150": [0, 0],
        "151": [0, 0],
        "152": [0, 0],
        "153": [0, 0],
        "154": [0, 0],
        "155": [0, 0],
        "156": [0, 0],
        "157": [0, 0],
        "158": [0, 0],
        "159": [0, 0],
        "160": [0, 0],
        "161": [0, 0],
        "162": [0, 0],
        "163": [0, 0],
        "164": [0, 0],
        "165": [0, 0],
        "166": [0, 0],
        "167": [0, 0],
        "168": [0, 0],
        "169": [0, 0]
      },
      _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
    },
    coverage = global[gcv] || (global[gcv] = {});
  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }
  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
cov_2f40l1qxdw.s[0]++;
jQuery(function () {
  cov_2f40l1qxdw.f[0]++;
  var url = (cov_2f40l1qxdw.s[1]++, "https://192.168.1.103");
  var currentDate = (cov_2f40l1qxdw.s[2]++, new Date());
  var previousDate = (cov_2f40l1qxdw.s[3]++, new Date(currentDate));
  cov_2f40l1qxdw.s[4]++;
  previousDate.setDate(previousDate.getDate() - 1);

  // Format the date to 'YYYY-MM-DD'
  var formattedDate = (cov_2f40l1qxdw.s[5]++, previousDate.toISOString().split('T')[0]);

  // Use the formatted date
  cov_2f40l1qxdw.s[6]++;
  console.log("Previous day: ".concat(formattedDate));
  function fetchCO2Emission() {
    return _fetchCO2Emission.apply(this, arguments);
  } // Helper function to format the date to the required format
  function _fetchCO2Emission() {
    _fetchCO2Emission = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {
      var today, previousDate, startDate, endDate, url, response, text, parser, xmlDoc, objs, valueText, value;
      return _regeneratorRuntime().wrap(function _callee32$(_context32) {
        while (1) switch (_context32.prev = _context32.next) {
          case 0:
            cov_2f40l1qxdw.f[1]++;
            today = (cov_2f40l1qxdw.s[7]++, new Date());
            previousDate = (cov_2f40l1qxdw.s[8]++, new Date(today.setDate(today.getDate() - 1))); // Get previous date
            startDate = (cov_2f40l1qxdw.s[9]++, formatDate(previousDate)); // Format the previous date to match the required format
            endDate = (cov_2f40l1qxdw.s[10]++, startDate); // End date is same as start date for single day data
            url = (cov_2f40l1qxdw.s[11]++, "https://192.168.1.103/obix/histories/Barclays_Sup/Co2$20Emission$20in$20Ton_Daily/~historyQuery?start=".concat(startDate, "T00:00:00.000+05:30&end=").concat(endDate, "T23:59:59.000+05:30"));
            cov_2f40l1qxdw.s[12]++;
            _context32.prev = 7;
            cov_2f40l1qxdw.s[13]++;
            _context32.next = 11;
            return fetch(url);
          case 11:
            response = _context32.sent;
            cov_2f40l1qxdw.s[14]++;
            _context32.next = 15;
            return response.text();
          case 15:
            text = _context32.sent;
            parser = (cov_2f40l1qxdw.s[15]++, new DOMParser());
            xmlDoc = (cov_2f40l1qxdw.s[16]++, parser.parseFromString(text, "text/xml"));
            objs = (cov_2f40l1qxdw.s[17]++, xmlDoc.getElementsByTagName("obj"));
            cov_2f40l1qxdw.s[18]++;
            if (objs.length > 0) {
              cov_2f40l1qxdw.b[0][0]++;
              valueText = (cov_2f40l1qxdw.s[19]++, objs[0].getElementsByTagName("real")[0].getAttribute("val"));
              cov_2f40l1qxdw.s[20]++;
              if (valueText) {
                cov_2f40l1qxdw.b[1][0]++;
                value = (cov_2f40l1qxdw.s[21]++, parseFloat(valueText).toFixed(2));
                cov_2f40l1qxdw.s[22]++;
                document.getElementById("co2-emission-value").textContent = value;
              } else {
                cov_2f40l1qxdw.b[1][1]++;
              }
            } else {
              cov_2f40l1qxdw.b[0][1]++;
              cov_2f40l1qxdw.s[23]++;
              console.log("No data available for previous date.");
            }
            _context32.next = 27;
            break;
          case 23:
            _context32.prev = 23;
            _context32.t0 = _context32["catch"](7);
            cov_2f40l1qxdw.s[24]++;
            console.error("Error fetching CO2 emission data:", _context32.t0);
          case 27:
          case "end":
            return _context32.stop();
        }
      }, _callee32, null, [[7, 23]]);
    }));
    return _fetchCO2Emission.apply(this, arguments);
  }
  function formatDate(date) {
    cov_2f40l1qxdw.f[2]++;
    var year = (cov_2f40l1qxdw.s[25]++, date.getFullYear());
    var month = (cov_2f40l1qxdw.s[26]++, String(date.getMonth() + 1).padStart(2, '0'));
    var day = (cov_2f40l1qxdw.s[27]++, String(date.getDate()).padStart(2, '0'));
    cov_2f40l1qxdw.s[28]++;
    return "".concat(year, "-").concat(month, "-").concat(day);
  }

  // Call the function to fetch CO2 emission data
  cov_2f40l1qxdw.s[29]++;
  fetchCO2Emission();
  function fetchWaterData() {
    return _fetchWaterData.apply(this, arguments);
  } // Helper function to extract the value from the XML
  function _fetchWaterData() {
    _fetchWaterData = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee33() {
      var today, previousDate, startDate, endDate, waterUrls, _i, _waterUrls, water, response, data, xmlDoc, objs, value;
      return _regeneratorRuntime().wrap(function _callee33$(_context33) {
        while (1) switch (_context33.prev = _context33.next) {
          case 0:
            cov_2f40l1qxdw.f[3]++;
            today = (cov_2f40l1qxdw.s[30]++, new Date());
            previousDate = (cov_2f40l1qxdw.s[31]++, new Date(today.setDate(today.getDate() - 1))); // Get previous date
            startDate = (cov_2f40l1qxdw.s[32]++, formatDate(previousDate)); // Format the previous date to match the required format
            endDate = (cov_2f40l1qxdw.s[33]++, startDate); // End date is same as start date for single day data
            // Water URLs and corresponding element IDs
            waterUrls = (cov_2f40l1qxdw.s[34]++, [{
              type: "Domestic",
              // For identifying the water type
              url: "https://192.168.1.103/obix/histories/Barclays_Sup/Water$20Consumption_Domestic_Daily/~historyQuery?start=".concat(startDate, "T00:00:00.000+05:30&end=").concat(endDate, "T23:59:59.000+05:30"),
              elementId: "water-domestic-value"
            }, {
              type: "Flushing",
              // For identifying the water type
              url: "https://192.168.1.103/obix/histories/Barclays_Sup/Water$20Consumption_Flushing_Daily/~historyQuery?start=".concat(startDate, "T00:00:00.000+05:30&end=").concat(endDate, "T23:59:59.000+05:30"),
              elementId: "water-flushing-value"
            }]);
            cov_2f40l1qxdw.s[35]++;
            _context33.prev = 7;
            cov_2f40l1qxdw.s[36]++;
            _i = 0, _waterUrls = waterUrls;
          case 10:
            if (!(_i < _waterUrls.length)) {
              _context33.next = 28;
              break;
            }
            water = _waterUrls[_i];
            cov_2f40l1qxdw.s[37]++;
            _context33.next = 15;
            return fetch(water.url);
          case 15:
            response = _context33.sent;
            cov_2f40l1qxdw.s[38]++;
            _context33.next = 19;
            return response.text();
          case 19:
            data = _context33.sent;
            xmlDoc = (cov_2f40l1qxdw.s[39]++, new DOMParser().parseFromString(data, "text/xml"));
            objs = (cov_2f40l1qxdw.s[40]++, xmlDoc.getElementsByTagName("obj"));
            value = (cov_2f40l1qxdw.s[41]++, extractValueFromXml(objs)); // Update the corresponding HTML element with the value
            cov_2f40l1qxdw.s[42]++;
            document.getElementById(water.elementId).textContent = value;
          case 25:
            _i++;
            _context33.next = 10;
            break;
          case 28:
            _context33.next = 34;
            break;
          case 30:
            _context33.prev = 30;
            _context33.t0 = _context33["catch"](7);
            cov_2f40l1qxdw.s[43]++;
            console.error("Error fetching water data:", _context33.t0);
          case 34:
          case "end":
            return _context33.stop();
        }
      }, _callee33, null, [[7, 30]]);
    }));
    return _fetchWaterData.apply(this, arguments);
  }
  function extractValueFromXml(objs) {
    cov_2f40l1qxdw.f[4]++;
    cov_2f40l1qxdw.s[44]++;
    if (objs.length > 0) {
      cov_2f40l1qxdw.b[2][0]++;
      var valueText = (cov_2f40l1qxdw.s[45]++, objs[0].getElementsByTagName("real")[0].getAttribute("val"));
      cov_2f40l1qxdw.s[46]++;
      return valueText ? (cov_2f40l1qxdw.b[3][0]++, parseFloat(valueText).toFixed(2)) : (cov_2f40l1qxdw.b[3][1]++, "0");
    } else {
      cov_2f40l1qxdw.b[2][1]++;
    }
    cov_2f40l1qxdw.s[47]++;
    return "0";
  }

  // Helper function to format the date to the required format
  function formatDate(date) {
    cov_2f40l1qxdw.f[5]++;
    var year = (cov_2f40l1qxdw.s[48]++, date.getFullYear());
    var month = (cov_2f40l1qxdw.s[49]++, String(date.getMonth() + 1).padStart(2, '0'));
    var day = (cov_2f40l1qxdw.s[50]++, String(date.getDate()).padStart(2, '0'));
    cov_2f40l1qxdw.s[51]++;
    return "".concat(year, "-").concat(month, "-").concat(day);
  }

  // Call the function to fetch water data
  cov_2f40l1qxdw.s[52]++;
  fetchWaterData();

  //console.log("Previous day: " + previousDate);

  var intervalId; // Variable to store the interval ID

  //  intervalId=setInterval(pieChart, 5000);

  var emissionChart;
  function disposeChartCo(_x) {
    return _disposeChartCo.apply(this, arguments);
  } //     async function pieChart() {
  //         // Append a style block to customize the text appearance in the chart
  //         const style = document.createElement('style');
  //         style.innerHTML = `
  //             #chartdiv .apexcharts-text {
  //                 fill: #000000; /* Change this to your desired color */
  //                 font-weight: bold; /* Ensure bold text */
  //             }
  //         `;
  //         style.id = 'chartdiv-styles';
  //         document.head.appendChild(style);
  //         // // Initialize scopeValues as an empty array
  //         let scopeValues = [];
  //         const scopes = ['Scope1', 'Scope2', 'Scope3'];
  //         // Fetch data for each scope
  //         for (let scope of scopes) {
  //             const responses = await fetch(`${url}/obix/histories/Barclays_Sup/Co2$20Emission$20in$20Ton_${scope}_Daily/~historyQuery?start=${formattedDate}T23:58:00.000+05:30&limit=1`); ///~historyQuery?start=${previousDate}T23:59:59.000+05:30&limit=1
  //             console.log("response for scope " + scope, responses);
  //             const text = await responses.text();
  //             //console.log("text " + text);
  //             // Parse the XML data
  //             const parser = new DOMParser();
  //             const xmlDoc = parser.parseFromString(text, "text/xml");
  //             // Get all <obj> elements
  //             const objs = xmlDoc.getElementsByTagName("list");
  //             //console.log("length " + objs.length);
  //             // Process each <obj> element
  //             for (let i = 0; i < objs.length; i++) {
  //             const obj = objs[i];
  //             const real = obj.getElementsByTagName("real")[0]; // Get the <real> tag
  //     if (real) {
  //         const valueText = real.getAttribute("val"); // Get the value as a string
  //         //console.log("value text (raw):", valueText);
  //         if (valueText) {
  //             const value = parseFloat(valueText); // Parse to a number
  //             if (!isNaN(value)) { // Ensure it's a valid number
  //                 // Format value with two decimal places
  //                 // const formattedValue = value.toFixed(2); // Use .toFixed(3) to ensure 3 decimal places
  //                 // console.log("formatted value:", formattedValue);
  //                 // Add the formatted value to the scopeValues array
  //                 scopeValues.push(parseFloat(value));
  //             } else {
  //                 console.warn("Invalid numeric value:", valueText);
  //             }
  //         }
  //     }
  // }
  //         }
  //         // scopeValues = scopeValues.map(value => Math.min(value, 100));
  //         console.log("Scope Values: ", scopeValues);
  //         // Calculate the total value
  //         const totalValue = scopeValues.reduce((sum, value) => sum + value, 0); // Sum the values for each scope
  //       // console.log("total value " + totalValue);
  //         let percentages = scopeValues.map(value => (value / totalValue) * 100);
  //         //console.log("percentages " + percentages);
  //         // Radial bar chart options
  //         var options = {
  //             series: percentages, // Use the calculated series values
  //             chart: {
  //                 height: '100%',
  //                 type: 'radialBar', // Set chart type to radialBar
  //             },
  //             plotOptions: {
  //                 radialBar: {
  //                     offsetY: 10,
  //                     offsetX: -10,
  //                     startAngle: -180, // Define starting angle
  //                     endAngle: 90, // Define ending angle
  //                     track: {
  //                         background: '#f5f5f5', // Track background color
  //                         strokeWidth: '100%',
  //                         margin: 4, // Margin between tracks
  //                     },
  //                     hollow: {
  //                         margin: 0,
  //                         size: '50%', // Hollow size
  //                         background: 'transparent',
  //                     },
  //                     dataLabels: {
  //                         show: true,
  //                         name: {
  //                             show: true,
  //                             fontSize: '30px',
  //                             fontWeight: 'bold',
  //                             color: '#000000',
  //                             formatter: function () {
  //                                 return 'Total'; // Static 'Total' label in the center
  //                             }
  //                         },
  //                         value: {
  //                             show: true,
  //                             fontSize: '30px',
  //                             fontWeight: 'bold',
  //                             color: '#000000',
  //                             formatter: function () {
  //                                 return totalValue.toFixed(2); // Display static total value in the center
  //                             }
  //                         },
  //                         total: {
  //                             show: true,
  //                             label: 'Total',
  //                             fontSize: '30px',
  //                             fontWeight: 'bold',
  //                             color: '#000000',
  //                             formatter: function () {
  //                                 return totalValue.toFixed(2); // Static total value
  //                             }
  //                         }
  //                     }
  //                 }
  //             },
  //             colors: ["#ff7d03", "#A4CE95", "#FFD93D"], // Segment colors
  //             fill: { opacity: [0.85, 0.85, 0.85] }, // Set opacity for each segment
  //             labels: ["Scope 1", "Scope 2", "Scope 3"], // Labels for each segment
  //             legend: {
  //                 show: true,
  //                 floating: true,
  //                 fontSize: '16px',
  //                 position: 'right', // Position legend on the right
  //                 offsetX: 10,
  //                 offsetY: -20,
  //                 labels: { useSeriesColors: true }, // Use colors from the series
  //                 markers: { size: 0 }, // No markers in the legend
  //                 // formatter: function(seriesName, opts) {
  //                 //     return seriesName + ": " + opts.w.globals.series[opts.seriesIndex] + "%"; // Custom legend formatting
  //                 // },
  //                 itemMargin: { vertical: 1 }, // Margin between legend items
  //             },
  //             tooltip: {
  //                 enabled: true,
  //                 shared: false, // Disable shared tooltip
  //                 style: {
  //                     fontSize: '16px', // Optional: set font size for the tooltip text
  //                 },
  //                 custom: function ({ series, seriesIndex, w }) {
  //                     const name = w.globals.labels[seriesIndex]; // Get the label
  //                     let value = series[seriesIndex]; // Get the value
  //                     value = value.toFixed(2);
  //                     // Define background colors for each series
  //                     const backgroundColors = [
  //                         '#FFB22C', // Color for Series 1
  //                         '#A4CE95', // Color for Series 2
  //                         '#FFD93D'  // Color for Series 3 (if applicable)
  //                     ];
  //                     // Get the background color based on the series index
  //                     const backgroundColor = backgroundColors[seriesIndex] || '#F7F7F7'; // Default color if index is out of bounds
  //                     return `<div style="color: #00000; background: ${backgroundColor}; padding: 8px; border-radius: 4px; box-shadow: 0 2px 10px rgba(0,0,0,0.2);">
  //                         <strong style="color: #000000;">${name}</strong>: <span style="color: #000000;">${value}</span>
  //                     </div>`; // Show name and value in tooltip
  //                 },
  //             },
  //             responsive: [{
  //                 breakpoint: 480,
  //                 options: { legend: { show: true } } // Show legend on small screens
  //             }]
  //         };
  //         // Create and render the new radial bar chart
  //         emissionChart = new ApexCharts(document.querySelector("#chartdiv"), options);
  //         emissionChart.render();
  //     }
  function _disposeChartCo() {
    _disposeChartCo = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee34(newChartFunction) {
      return _regeneratorRuntime().wrap(function _callee34$(_context34) {
        while (1) switch (_context34.prev = _context34.next) {
          case 0:
            cov_2f40l1qxdw.f[6]++;
            cov_2f40l1qxdw.s[53]++;
            // Destroy the existing chart if it exists
            if (emissionChart) {
              cov_2f40l1qxdw.b[4][0]++;
              cov_2f40l1qxdw.s[54]++;
              if (emissionChart instanceof ApexCharts) {
                cov_2f40l1qxdw.b[5][0]++;
                cov_2f40l1qxdw.s[55]++;
                emissionChart.destroy(); // Dispose the existing ApexCharts instance
                cov_2f40l1qxdw.s[56]++;
                console.log("destroyed");
              } else {
                cov_2f40l1qxdw.b[5][1]++;
                cov_2f40l1qxdw.s[57]++;
                emissionChart.dispose(); // Dispose the existing am4charts instance
                cov_2f40l1qxdw.s[58]++;
                console.log("disposed");
              }
            } else {
              cov_2f40l1qxdw.b[4][1]++;
            }
            cov_2f40l1qxdw.s[59]++;
            newChartFunction();
          case 5:
          case "end":
            return _context34.stop();
        }
      }, _callee34);
    }));
    return _disposeChartCo.apply(this, arguments);
  }
  function pieChart() {
    return _pieChart.apply(this, arguments);
  }
  function _pieChart() {
    _pieChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee35() {
      var style, scopeValues, scopes, _i2, _scopes, scope, responses, text, parser, xmlDoc, objs, i, obj, real, valueText, value, totalValue, percentages, options, emissionChart;
      return _regeneratorRuntime().wrap(function _callee35$(_context35) {
        while (1) switch (_context35.prev = _context35.next) {
          case 0:
            cov_2f40l1qxdw.f[7]++;
            // Append a style block to customize the text appearance in the chart
            style = (cov_2f40l1qxdw.s[60]++, document.createElement('style'));
            cov_2f40l1qxdw.s[61]++;
            style.innerHTML = "\n        #chartdiv .apexcharts-text {\n            fill: #000000; /* Change this to your desired color */\n            font-weight: bold; /* Ensure bold text */\n        }\n    ";
            cov_2f40l1qxdw.s[62]++;
            style.id = 'chartdiv-styles';
            cov_2f40l1qxdw.s[63]++;
            document.head.appendChild(style);

            // Initialize scopeValues as an empty array
            scopeValues = (cov_2f40l1qxdw.s[64]++, []);
            scopes = (cov_2f40l1qxdw.s[65]++, ['Scope1', 'Scope2', 'Scope3']); // Fetch data for each scope
            cov_2f40l1qxdw.s[66]++;
            _i2 = 0, _scopes = scopes;
          case 12:
            if (!(_i2 < _scopes.length)) {
              _context35.next = 32;
              break;
            }
            scope = _scopes[_i2];
            cov_2f40l1qxdw.s[67]++;
            _context35.next = 17;
            return fetch("".concat(url, "/obix/histories/Barclays_Sup/Co2$20Emission$20in$20Ton_").concat(scope, "_Daily/~historyQuery?start=").concat(formattedDate, "T23:58:00.000+05:30&limit=1"));
          case 17:
            responses = _context35.sent;
            cov_2f40l1qxdw.s[68]++;
            console.log("response for scope " + scope, responses);
            cov_2f40l1qxdw.s[69]++;
            _context35.next = 23;
            return responses.text();
          case 23:
            text = _context35.sent;
            // Parse the XML data
            parser = (cov_2f40l1qxdw.s[70]++, new DOMParser());
            xmlDoc = (cov_2f40l1qxdw.s[71]++, parser.parseFromString(text, "text/xml")); // Get all <obj> elements
            objs = (cov_2f40l1qxdw.s[72]++, xmlDoc.getElementsByTagName("list")); // Process each <obj> element
            cov_2f40l1qxdw.s[73]++;
            for (i = 0; i < objs.length; i++) {
              obj = (cov_2f40l1qxdw.s[74]++, objs[i]);
              real = (cov_2f40l1qxdw.s[75]++, obj.getElementsByTagName("real")[0]); // Get the <real> tag
              cov_2f40l1qxdw.s[76]++;
              if (real) {
                cov_2f40l1qxdw.b[6][0]++;
                valueText = (cov_2f40l1qxdw.s[77]++, real.getAttribute("val")); // Get the value as a string
                cov_2f40l1qxdw.s[78]++;
                if (valueText) {
                  cov_2f40l1qxdw.b[7][0]++;
                  value = (cov_2f40l1qxdw.s[79]++, parseFloat(valueText)); // Parse to a number
                  cov_2f40l1qxdw.s[80]++;
                  if (!isNaN(value)) {
                    cov_2f40l1qxdw.b[8][0]++;
                    cov_2f40l1qxdw.s[81]++;
                    // Ensure it's a valid number
                    scopeValues.push(parseFloat(value));
                  } else {
                    cov_2f40l1qxdw.b[8][1]++;
                    cov_2f40l1qxdw.s[82]++;
                    console.warn("Invalid numeric value:", valueText);
                  }
                } else {
                  cov_2f40l1qxdw.b[7][1]++;
                }
              } else {
                cov_2f40l1qxdw.b[6][1]++;
              }
            }
          case 29:
            _i2++;
            _context35.next = 12;
            break;
          case 32:
            cov_2f40l1qxdw.s[83]++;
            // Check if data is available
            // if (scopeValues.length === 0 || scopeValues.every(value => value === 0)) {
            //     // Show a message when no data is available or all values are 0
            //     document.querySelector("#chartdiv").innerHTML = "<p style='text-align: center; display: flex; justify-content: center; align-items: center; height: 100%;'>No data available</p>";
            //     return; // Exit the function early if no data is available
            // }

            console.log("Scope Values: ", scopeValues);
            // Calculate the total value
            totalValue = (cov_2f40l1qxdw.s[84]++, scopeValues.reduce(function (sum, value) {
              cov_2f40l1qxdw.f[8]++;
              cov_2f40l1qxdw.s[85]++;
              return sum + value;
            }, 0)); // Sum the values for each scope
            percentages = (cov_2f40l1qxdw.s[86]++, scopeValues.map(function (value) {
              cov_2f40l1qxdw.f[9]++;
              cov_2f40l1qxdw.s[87]++;
              return value / totalValue * 100;
            })); // Radial bar chart options
            options = (cov_2f40l1qxdw.s[88]++, {
              series: percentages,
              // Use the calculated series values
              chart: {
                height: '100%',
                type: 'radialBar' // Set chart type to radialBar
              },
              plotOptions: {
                radialBar: {
                  offsetY: 10,
                  offsetX: -10,
                  startAngle: -180,
                  // Define starting angle
                  endAngle: 90,
                  // Define ending angle
                  track: {
                    background: '#f5f5f5',
                    // Track background color
                    strokeWidth: '100%',
                    margin: 4 // Margin between tracks
                  },
                  hollow: {
                    margin: 0,
                    size: '50%',
                    // Hollow size
                    background: 'transparent'
                  },
                  dataLabels: {
                    show: true,
                    name: {
                      show: true,
                      fontSize: '30px',
                      fontWeight: 'bold',
                      color: '#000000',
                      formatter: function formatter() {
                        cov_2f40l1qxdw.f[10]++;
                        cov_2f40l1qxdw.s[89]++;
                        return 'Total'; // Static 'Total' label in the center
                      }
                    },
                    value: {
                      show: true,
                      fontSize: '30px',
                      fontWeight: 'bold',
                      color: '#000000',
                      formatter: function formatter() {
                        cov_2f40l1qxdw.f[11]++;
                        cov_2f40l1qxdw.s[90]++;
                        return totalValue.toFixed(2); // Display static total value in the center
                      }
                    },
                    total: {
                      show: true,
                      label: 'Total',
                      fontSize: '30px',
                      fontWeight: 'bold',
                      color: '#000000',
                      formatter: function formatter() {
                        cov_2f40l1qxdw.f[12]++;
                        cov_2f40l1qxdw.s[91]++;
                        return totalValue.toFixed(2); // Static total value
                      }
                    }
                  }
                }
              },
              colors: ["#ff7d03", "#A4CE95", "#FFD93D"],
              // Segment colors
              fill: {
                opacity: [0.85, 0.85, 0.85]
              },
              // Set opacity for each segment
              labels: ["Scope 1", "Scope 2", "Scope 3"],
              // Labels for each segment
              legend: {
                show: true,
                floating: true,
                fontSize: '16px',
                position: 'right',
                // Position legend on the right
                offsetX: 10,
                offsetY: -20,
                labels: {
                  useSeriesColors: true
                },
                // Use colors from the series
                markers: {
                  size: 0
                },
                // No markers in the legend
                itemMargin: {
                  vertical: 1
                } // Margin between legend items
              },
              tooltip: {
                enabled: true,
                shared: false,
                // Disable shared tooltip
                style: {
                  fontSize: '16px' // Optional: set font size for the tooltip text
                },
                custom: function custom(_ref31) {
                  var series = _ref31.series,
                    seriesIndex = _ref31.seriesIndex,
                    w = _ref31.w;
                  cov_2f40l1qxdw.f[13]++;
                  var name = (cov_2f40l1qxdw.s[92]++, w.globals.labels[seriesIndex]); // Get the label
                  var value = (cov_2f40l1qxdw.s[93]++, series[seriesIndex]); // Get the value
                  cov_2f40l1qxdw.s[94]++;
                  value = value.toFixed(2);
                  var backgroundColors = (cov_2f40l1qxdw.s[95]++, ['#FFB22C',
                  // Color for Series 1
                  '#A4CE95',
                  // Color for Series 2
                  '#FFD93D' // Color for Series 3
                  ]);
                  var backgroundColor = (cov_2f40l1qxdw.s[96]++, (cov_2f40l1qxdw.b[9][0]++, backgroundColors[seriesIndex]) || (cov_2f40l1qxdw.b[9][1]++, '#F7F7F7')); // Default color if index is out of bounds
                  cov_2f40l1qxdw.s[97]++;
                  return "<div style=\"color: #00000; background: ".concat(backgroundColor, "; padding: 8px; border-radius: 4px; box-shadow: 0 2px 10px rgba(0,0,0,0.2);\">\n                    <strong style=\"color: #000000;\">").concat(name, "</strong>: <span style=\"color: #000000;\">").concat(value, "</span>\n                </div>"); // Show name and value in tooltip
                }
              },
              responsive: [{
                breakpoint: 480,
                options: {
                  legend: {
                    show: true
                  }
                } // Show legend on small screens
              }]
            }); // Create and render the new radial bar chart
            emissionChart = (cov_2f40l1qxdw.s[98]++, new ApexCharts(document.querySelector("#chartdiv"), options));
            cov_2f40l1qxdw.s[99]++;
            emissionChart.render();
          case 40:
          case "end":
            return _context35.stop();
        }
      }, _callee35);
    }));
    return _pieChart.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[100]++;
  disposeChartCo(pieChart);
  function lineChartMonthlyCo25() {
    return _lineChartMonthlyCo.apply(this, arguments);
  } // async function dateRangeCo2() {
  //     am4core.ready(async function () {
  //         var startDateValue = $("#startDate").val();
  //         var endDateValue = $("#endDate").val();
  //         const waters = ['Scope1', 'Scope2', 'Scope3'];
  //         let waterValues = [];
  //         // Fetch data asynchronously for each scope
  //         for (let scope of waters) {
  //             const urlToFetch = `${url}/obix/histories/Barclays_Sup/Co2$20Emission$20in$20Ton_${scope}/~historyQuery?start=${startDateValue}T13:15:00.059+05:30&end=${endDateValue}T13:15:00.059+05:30`;
  //             console.log(urlToFetch);
  //             try {
  //                 const response = await fetch(urlToFetch);
  //                 console.log(response);
  //                 if (!response.ok) {
  //                     console.error(`Error fetching data for ${scope}: ${response.status} - ${response.statusText}`);
  //                     continue;
  //                 }
  //                 const text = await response.text();
  //                 const parser = new DOMParser();
  //                 const xmlDoc = parser.parseFromString(text, "text/xml");
  //                 const objs = xmlDoc.getElementsByTagName("obj");
  //                 for (let i = 0; i < objs.length; i++) {
  //                     const obj = objs[i];
  //                     const abstime = obj.getElementsByTagName("abstime")[0];
  //                     const real = obj.getElementsByTagName("real")[0];
  //                     if (abstime && real) {
  //                         const dateText = abstime.getAttribute("val");
  //                         const valueText = real.getAttribute("val");
  //                         if (valueText && dateText) {
  //                             const value = parseFloat(valueText).toFixed(4);
  //                             const date = new Date(dateText);
  //                             const formattedDate = date.toLocaleDateString("en-US", {
  //                                 month: "short",
  //                                 day: "numeric"
  //                             });
  //                             const dateStr = date.toDateString();  // Use toDateString to compare without time
  //                             const existingEntry = waterValues.find(entry => entry.date.toDateString() === dateStr);
  //                             if (existingEntry) {
  //                                 existingEntry[scope] = parseFloat(value);
  //                             } else {
  //                                 waterValues.push({
  //                                     date: date,
  //                                     [scope]: parseFloat(value)
  //                                 });
  //                             }
  //                         }
  //                     }
  //                 }
  //             } catch (error) {
  //                 console.error(`Error fetching data for ${scope}: ${error.message}`);
  //             }
  //         }
  //         console.log("monthly co2 " + waterValues);
  //         // Themes begin
  //         am4core.useTheme(am4themes_animated);
  //         // Themes end
  //         // Create chart instance
  //         var emissionChart = am4core.create("chartdiv", am4charts.XYChart);
  //         emissionChart.paddingRight = 20;
  //         // Add data
  //         emissionChart.data = waterValues;
  //         waterValues.forEach(item => {
  //         item.date = new Date(item.date).getTime();  // Convert to timestamp
  //     });
  //         // waterValues.forEach(item => {
  //         //     item.date = new Date(item.date).getTime();  // Convert to timestamp
  //         //     console.log("item date (timestamp): " + item.date);
  //         //     // Convert timestamp back to a readable date
  //         //     const formattedDate = new Date(item.date).toLocaleDateString("en-US", {
  //         //         // year: "numeric",
  //         //         month: "short",
  //         //         day: "numeric"
  //         //     });
  //         //     item.date = formattedDate;
  //         //     console.log("Formatted item date: " + formattedDate);
  //         // });
  //         // Create axes
  //         var categoryAxis = emissionChart.xAxes.push(new am4charts.CategoryAxis());
  //         categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
  //         categoryAxis.renderer.minGridDistance = 80;
  //         // categoryAxis.renderer.grid.template.location = 2;
  //         // categoryAxis.startLocation = 1;
  //         // categoryAxis.endLocation = 1.5;
  //         categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
  //         categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
  //         var valueAxis = emissionChart.yAxes.push(new am4charts.ValueAxis());
  //         valueAxis.baseValue = 0;
  //         // Function to create series
  //         function createSeries(valueField, name, color) {
  //             var series = emissionChart.series.push(new am4charts.LineSeries());
  //             series.dataFields.valueY = valueField;
  //             series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
  //             series.name = name;
  //             series.strokeWidth = 2;
  //             series.tensionX = 0.77;
  //             series.stroke = color;
  //             // Bullet to display tooltips
  //             var bullet = series.bullets.push(new am4charts.Bullet());
  //             bullet.tooltipText = "{valueY}";
  //             bullet.adapter.add("fill", function (fill, target) {
  //                 // If the value is negative, color the bullet red, else use the series color
  //                 if (target.dataItem.valueY < 0) {
  //                     return am4core.color("#FF0000"); // Red for negative values
  //                 }
  //                 return series.stroke; // Use the series stroke color (the color passed to createSeries)
  //             });
  //             return series;
  //         }
  //         emissionChart.legend = new am4charts.Legend();
  //         emissionChart.legend.position = "top";
  //         emissionChart.legend.paddingBottom = 10;
  //         emissionChart.legend.labels.template.maxWidth = 95;
  //         // Create three series with different data fields and colors
  //         createSeries("scope1date", "Scope 1", am4core.color("#FFB22C"));
  //         createSeries("scope2date", "Scope 2", am4core.color("#A4CE95"));
  //         createSeries("scope3date", "Scope 3", am4core.color("#FFD93D"));
  //         // Add scrollbar
  //         // var scrollbarX = new am4charts.XYChartScrollbar();
  //         // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
  //         // chart.scrollbarX = scrollbarX;
  //         // scrollbarX.height = 30;
  //         emissionChart.scrollbarX = new am4core.Scrollbar();
  //         emissionChart.scrollbarX.marginBottom = 20;
  //         emissionChart.cursor = new am4charts.XYCursor();
  //         emissionChart.logo.disabled = true;
  //     });
  // }
  function _lineChartMonthlyCo() {
    _lineChartMonthlyCo = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee37() {
      return _regeneratorRuntime().wrap(function _callee37$(_context38) {
        while (1) switch (_context38.prev = _context38.next) {
          case 0:
            cov_2f40l1qxdw.f[14]++;
            cov_2f40l1qxdw.s[101]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {
              var today, currentMonth, startDate, endDate, startISO, endISO, waters, waterValues, _i3, _waters, scope, urlToFetch, response, text, parser, xmlDoc, objs, _loop, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee36$(_context37) {
                while (1) switch (_context37.prev = _context37.next) {
                  case 0:
                    createSeries = function _createSeries(valueField, name, color) {
                      cov_2f40l1qxdw.f[18]++;
                      var series = (cov_2f40l1qxdw.s[158]++, emissionChart.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[159]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[160]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[161]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[162]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[163]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[164]++;
                      series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[165]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[166]++;
                      bullet.tooltipText = "{valueY}";
                      cov_2f40l1qxdw.s[167]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[19]++;
                        cov_2f40l1qxdw.s[168]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[16][0]++;
                          cov_2f40l1qxdw.s[169]++;
                          return am4core.color("#FF0000"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[16][1]++;
                        }
                        cov_2f40l1qxdw.s[170]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[171]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[15]++;
                    today = (cov_2f40l1qxdw.s[102]++, new Date());
                    currentMonth = (cov_2f40l1qxdw.s[103]++, today.getMonth());
                    startDate = (cov_2f40l1qxdw.s[104]++, new Date(today.getFullYear(), currentMonth - 1, 1));
                    endDate = (cov_2f40l1qxdw.s[105]++, new Date(today.getFullYear(), currentMonth, 0));
                    startISO = (cov_2f40l1qxdw.s[106]++, "".concat(startDate.getFullYear(), "-").concat(String(startDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(startDate.getDate()).padStart(2, '0')));
                    endISO = (cov_2f40l1qxdw.s[107]++, "".concat(endDate.getFullYear(), "-").concat(String(endDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(endDate.getDate()).padStart(2, '0')));
                    waters = (cov_2f40l1qxdw.s[108]++, ['Scope1', 'Scope2', 'Scope3']);
                    waterValues = (cov_2f40l1qxdw.s[109]++, []); // Fetch data asynchronously for each scope
                    cov_2f40l1qxdw.s[110]++;
                    _i3 = 0, _waters = waters;
                  case 12:
                    if (!(_i3 < _waters.length)) {
                      _context37.next = 59;
                      break;
                    }
                    scope = _waters[_i3];
                    urlToFetch = (cov_2f40l1qxdw.s[111]++, "".concat(url, "/obix/histories/Barclays_Sup/Co2$20Emission$20in$20Ton_").concat(scope, "/~historyQuery?start=").concat(startISO, "T23:58:00.000+05:30&end=").concat(endISO, "T23:58:00.000+05:30"));
                    cov_2f40l1qxdw.s[112]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[113]++;
                    _context37.prev = 18;
                    cov_2f40l1qxdw.s[114]++;
                    _context37.next = 22;
                    return fetch(urlToFetch);
                  case 22:
                    response = _context37.sent;
                    cov_2f40l1qxdw.s[115]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[116]++;
                    if (response.ok) {
                      _context37.next = 34;
                      break;
                    }
                    cov_2f40l1qxdw.b[10][0]++;
                    cov_2f40l1qxdw.s[117]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(response.status, " - ").concat(response.statusText));
                    cov_2f40l1qxdw.s[118]++;
                    return _context37.abrupt("continue", 56);
                  case 34:
                    cov_2f40l1qxdw.b[10][1]++;
                  case 35:
                    cov_2f40l1qxdw.s[119]++;
                    _context37.next = 38;
                    return response.text();
                  case 38:
                    text = _context37.sent;
                    parser = (cov_2f40l1qxdw.s[120]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[121]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[122]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[123]++;
                    _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop$(_context36) {
                        while (1) switch (_context36.prev = _context36.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[124]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[125]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[126]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[127]++;
                            if ((cov_2f40l1qxdw.b[12][0]++, abstime) && (cov_2f40l1qxdw.b[12][1]++, real)) {
                              cov_2f40l1qxdw.b[11][0]++;
                              dateText = (cov_2f40l1qxdw.s[128]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[129]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[130]++;
                              if ((cov_2f40l1qxdw.b[14][0]++, valueText) && (cov_2f40l1qxdw.b[14][1]++, dateText)) {
                                cov_2f40l1qxdw.b[13][0]++;
                                value = (cov_2f40l1qxdw.s[131]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[132]++, new Date(dateText));
                                _formattedDate = (cov_2f40l1qxdw.s[133]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[134]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[135]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[16]++;
                                  cov_2f40l1qxdw.s[136]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[137]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[15][0]++;
                                  cov_2f40l1qxdw.s[138]++;
                                  existingEntry[scope] = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[15][1]++;
                                  cov_2f40l1qxdw.s[139]++;
                                  waterValues.push(_defineProperty({
                                    date: date
                                  }, scope, parseFloat(value)));
                                }
                              } else {
                                cov_2f40l1qxdw.b[13][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[11][1]++;
                            }
                          case 5:
                          case "end":
                            return _context36.stop();
                        }
                      }, _loop);
                    });
                    i = 0;
                  case 45:
                    if (!(i < objs.length)) {
                      _context37.next = 50;
                      break;
                    }
                    return _context37.delegateYield(_loop(), "t0", 47);
                  case 47:
                    i++;
                    _context37.next = 45;
                    break;
                  case 50:
                    _context37.next = 56;
                    break;
                  case 52:
                    _context37.prev = 52;
                    _context37.t1 = _context37["catch"](18);
                    cov_2f40l1qxdw.s[140]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(_context37.t1.message));
                  case 56:
                    _i3++;
                    _context37.next = 12;
                    break;
                  case 59:
                    cov_2f40l1qxdw.s[141]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    cov_2f40l1qxdw.s[142]++;
                    emissionChart = am4core.create("chartdiv", am4charts.XYChart);
                    cov_2f40l1qxdw.s[143]++;
                    emissionChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[144]++;
                    emissionChart.data = waterValues;
                    cov_2f40l1qxdw.s[145]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[17]++;
                      cov_2f40l1qxdw.s[146]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[147]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[148]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[149]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[150]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[151]++, emissionChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[152]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[153]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[154]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[155]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[156]++, emissionChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[157]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[172]++;
                    emissionChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[173]++;
                    emissionChart.legend.position = "top";
                    cov_2f40l1qxdw.s[174]++;
                    emissionChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[175]++;
                    emissionChart.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[176]++;
                    createSeries("scope1date", "Scope 1", am4core.color("#FFB22C"));
                    cov_2f40l1qxdw.s[177]++;
                    createSeries("scope2date", "Scope 2", am4core.color("#A4CE95"));
                    cov_2f40l1qxdw.s[178]++;
                    createSeries("scope3date", "Scope 3", am4core.color("#FFD93D"));

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[179]++;
                    emissionChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[180]++;
                    emissionChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[181]++;
                    emissionChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[182]++;
                    emissionChart.logo.disabled = true;
                  case 103:
                  case "end":
                    return _context37.stop();
                }
              }, _callee36, null, [[18, 52]]);
            })));
          case 3:
          case "end":
            return _context38.stop();
        }
      }, _callee37);
    }));
    return _lineChartMonthlyCo.apply(this, arguments);
  }
  function dateRangeCo2() {
    return _dateRangeCo.apply(this, arguments);
  }
  function _dateRangeCo() {
    _dateRangeCo = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee39() {
      return _regeneratorRuntime().wrap(function _callee39$(_context41) {
        while (1) switch (_context41.prev = _context41.next) {
          case 0:
            cov_2f40l1qxdw.f[20]++;
            cov_2f40l1qxdw.s[183]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee38() {
              var startDateValue, endDateValue, isValid, waters, waterValues, _i4, _waters2, scope, urlToFetch, response, text, parser, xmlDoc, objs, _loop2, i, emissionChart, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee38$(_context40) {
                while (1) switch (_context40.prev = _context40.next) {
                  case 0:
                    createSeries = function _createSeries2(valueField, name, color) {
                      cov_2f40l1qxdw.f[24]++;
                      var series = (cov_2f40l1qxdw.s[239]++, emissionChart.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[240]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[241]++;
                      series.dataFields.categoryX = "date";
                      cov_2f40l1qxdw.s[242]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[243]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[244]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[245]++;
                      series.stroke = color;
                      var bullet = (cov_2f40l1qxdw.s[246]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[247]++;
                      bullet.tooltipText = "{valueY}";
                      cov_2f40l1qxdw.s[248]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[25]++;
                        cov_2f40l1qxdw.s[249]++;
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[24][0]++;
                          cov_2f40l1qxdw.s[250]++;
                          return am4core.color("#FF0000"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[24][1]++;
                        }
                        cov_2f40l1qxdw.s[251]++;
                        return series.stroke;
                      });
                      cov_2f40l1qxdw.s[252]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[21]++;
                    startDateValue = (cov_2f40l1qxdw.s[184]++, $("#startDate").val());
                    endDateValue = (cov_2f40l1qxdw.s[185]++, $("#endDate").val()); // Validate the date range
                    cov_2f40l1qxdw.s[186]++;
                    _context40.next = 7;
                    return validateDateRange(startDateValue, endDateValue);
                  case 7:
                    isValid = _context40.sent;
                    cov_2f40l1qxdw.s[187]++;
                    if (isValid) {
                      _context40.next = 15;
                      break;
                    }
                    cov_2f40l1qxdw.b[17][0]++;
                    cov_2f40l1qxdw.s[188]++;
                    return _context40.abrupt("return");
                  case 15:
                    cov_2f40l1qxdw.b[17][1]++;
                  case 16:
                    waters = (cov_2f40l1qxdw.s[189]++, ['Scope1', 'Scope2', 'Scope3']);
                    waterValues = (cov_2f40l1qxdw.s[190]++, []); // Fetch data asynchronously for each scope
                    cov_2f40l1qxdw.s[191]++;
                    _i4 = 0, _waters2 = waters;
                  case 20:
                    if (!(_i4 < _waters2.length)) {
                      _context40.next = 65;
                      break;
                    }
                    scope = _waters2[_i4];
                    urlToFetch = (cov_2f40l1qxdw.s[192]++, "".concat(url, "/obix/histories/Barclays_Sup/Co2$20Emission$20in$20Ton_").concat(scope, "_Daily/~historyQuery?start=").concat(startDateValue, "T23:58:00.000+05:30&end=").concat(endDateValue, "T23:58:00.000+05:30"));
                    cov_2f40l1qxdw.s[193]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[194]++;
                    _context40.prev = 26;
                    cov_2f40l1qxdw.s[195]++;
                    _context40.next = 30;
                    return fetch(urlToFetch);
                  case 30:
                    response = _context40.sent;
                    cov_2f40l1qxdw.s[196]++;
                    if (response.ok) {
                      _context40.next = 40;
                      break;
                    }
                    cov_2f40l1qxdw.b[18][0]++;
                    cov_2f40l1qxdw.s[197]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(response.status, " - ").concat(response.statusText));
                    cov_2f40l1qxdw.s[198]++;
                    return _context40.abrupt("continue", 62);
                  case 40:
                    cov_2f40l1qxdw.b[18][1]++;
                  case 41:
                    cov_2f40l1qxdw.s[199]++;
                    _context40.next = 44;
                    return response.text();
                  case 44:
                    text = _context40.sent;
                    parser = (cov_2f40l1qxdw.s[200]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[201]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[202]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[203]++;
                    _loop2 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop2() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate2, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop2$(_context39) {
                        while (1) switch (_context39.prev = _context39.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[204]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[205]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[206]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[207]++;
                            if ((cov_2f40l1qxdw.b[20][0]++, abstime) && (cov_2f40l1qxdw.b[20][1]++, real)) {
                              cov_2f40l1qxdw.b[19][0]++;
                              dateText = (cov_2f40l1qxdw.s[208]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[209]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[210]++;
                              if ((cov_2f40l1qxdw.b[22][0]++, valueText) && (cov_2f40l1qxdw.b[22][1]++, dateText)) {
                                cov_2f40l1qxdw.b[21][0]++;
                                value = (cov_2f40l1qxdw.s[211]++, parseFloat(valueText).toFixed(4));
                                date = (cov_2f40l1qxdw.s[212]++, new Date(dateText));
                                _formattedDate2 = (cov_2f40l1qxdw.s[213]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[214]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[215]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[22]++;
                                  cov_2f40l1qxdw.s[216]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[217]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[23][0]++;
                                  cov_2f40l1qxdw.s[218]++;
                                  existingEntry[scope] = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[23][1]++;
                                  cov_2f40l1qxdw.s[219]++;
                                  waterValues.push(_defineProperty({
                                    date: date
                                  }, scope, parseFloat(value)));
                                }
                              } else {
                                cov_2f40l1qxdw.b[21][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[19][1]++;
                            }
                          case 5:
                          case "end":
                            return _context39.stop();
                        }
                      }, _loop2);
                    });
                    i = 0;
                  case 51:
                    if (!(i < objs.length)) {
                      _context40.next = 56;
                      break;
                    }
                    return _context40.delegateYield(_loop2(), "t0", 53);
                  case 53:
                    i++;
                    _context40.next = 51;
                    break;
                  case 56:
                    _context40.next = 62;
                    break;
                  case 58:
                    _context40.prev = 58;
                    _context40.t1 = _context40["catch"](26);
                    cov_2f40l1qxdw.s[220]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(_context40.t1.message));
                  case 62:
                    _i4++;
                    _context40.next = 20;
                    break;
                  case 65:
                    cov_2f40l1qxdw.s[221]++;
                    console.log("monthly co2 " + JSON.stringify(waterValues, null, 2));

                    // Themes begin
                    cov_2f40l1qxdw.s[222]++;
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    emissionChart = (cov_2f40l1qxdw.s[223]++, am4core.create("chartdiv", am4charts.XYChart));
                    cov_2f40l1qxdw.s[224]++;
                    emissionChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[225]++;
                    emissionChart.data = waterValues;
                    cov_2f40l1qxdw.s[226]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[23]++;
                      cov_2f40l1qxdw.s[227]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[228]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[229]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[230]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[231]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[232]++, emissionChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[233]++;
                    categoryAxis.dataFields.category = "date";
                    cov_2f40l1qxdw.s[234]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    cov_2f40l1qxdw.s[235]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle";
                    cov_2f40l1qxdw.s[236]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle";
                    valueAxis = (cov_2f40l1qxdw.s[237]++, emissionChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[238]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[253]++;
                    emissionChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[254]++;
                    emissionChart.legend.position = "top";
                    cov_2f40l1qxdw.s[255]++;
                    emissionChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[256]++;
                    emissionChart.legend.labels.template.maxWidth = 95;

                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[257]++;
                    createSeries("Scope1", "Scope 1", am4core.color("#FFB22C"));
                    cov_2f40l1qxdw.s[258]++;
                    createSeries("Scope2", "Scope 2", am4core.color("#A4CE95"));
                    cov_2f40l1qxdw.s[259]++;
                    createSeries("Scope3", "Scope 3", am4core.color("#FFD93D"));
                    cov_2f40l1qxdw.s[260]++;
                    emissionChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[261]++;
                    emissionChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[262]++;
                    emissionChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[263]++;
                    emissionChart.logo.disabled = true;
                  case 110:
                  case "end":
                    return _context40.stop();
                }
              }, _callee38, null, [[26, 58]]);
            })));
          case 3:
          case "end":
            return _context41.stop();
        }
      }, _callee39);
    }));
    return _dateRangeCo.apply(this, arguments);
  }
  function createBarChart1() {
    return _createBarChart.apply(this, arguments);
  } // function clearUpdateInterval() {
  //     if (intervalId) {
  //         clearInterval(intervalId);
  //         intervalId = null; // Reset intervalId to prevent multiple intervals
  //     }
  // }
  // Function to start a new interval for updating data
  // function startUpdateInterval(chartUpdateFunction) {
  //   // clearUpdateInterval(); // Clear any existing interval before starting a new one
  //     //intervalId = setInterval(chartUpdateFunction, 5000); // Set interval to update data every 5 seconds
  // }
  // Event listeners to update data based on date range or chart type selection
  function _createBarChart() {
    _createBarChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee40() {
      var scopeData, last12MonthsData, _iterator, _step, month, scopeUrls, i, response, text, parser, xml, records, _iterator2, _step2, record, abstime, realValue, abstimeDate, formattedAbstime, existingStyle, chartOptions;
      return _regeneratorRuntime().wrap(function _callee40$(_context42) {
        while (1) switch (_context42.prev = _context42.next) {
          case 0:
            cov_2f40l1qxdw.f[26]++;
            scopeData = (cov_2f40l1qxdw.s[264]++, [[], [], []]); // Scope 1, Scope 2, Scope 3
            last12MonthsData = (cov_2f40l1qxdw.s[265]++, getLast12Months1());
            cov_2f40l1qxdw.s[266]++;
            console.log("bar " + last12MonthsData);
            cov_2f40l1qxdw.s[267]++;
            _iterator = _createForOfIteratorHelper(last12MonthsData);
            _context42.prev = 7;
            _iterator.s();
          case 9:
            if ((_step = _iterator.n()).done) {
              _context42.next = 52;
              break;
            }
            month = _step.value;
            scopeUrls = (cov_2f40l1qxdw.s[268]++, ["".concat(url, "/obix/histories/SqlServerDatabase/YearlyScope1/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1"), "".concat(url, "/obix/histories/SqlServerDatabase/YearlyScope2/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1"), "".concat(url, "/obix/histories/SqlServerDatabase/YearlyScope3/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1")]);
            cov_2f40l1qxdw.s[269]++;
            i = 0;
          case 14:
            if (!(i < scopeUrls.length)) {
              _context42.next = 50;
              break;
            }
            cov_2f40l1qxdw.s[270]++;
            _context42.prev = 16;
            cov_2f40l1qxdw.s[271]++;
            _context42.next = 20;
            return fetch(scopeUrls[i]);
          case 20:
            response = _context42.sent;
            cov_2f40l1qxdw.s[272]++;
            if (response.ok) {
              _context42.next = 28;
              break;
            }
            cov_2f40l1qxdw.b[25][0]++;
            cov_2f40l1qxdw.s[273]++;
            throw new Error("HTTP error! Status: ".concat(response.status));
          case 28:
            cov_2f40l1qxdw.b[25][1]++;
          case 29:
            cov_2f40l1qxdw.s[274]++;
            _context42.next = 32;
            return response.text();
          case 32:
            text = _context42.sent;
            parser = (cov_2f40l1qxdw.s[275]++, new DOMParser());
            xml = (cov_2f40l1qxdw.s[276]++, parser.parseFromString(text, "application/xml"));
            records = (cov_2f40l1qxdw.s[277]++, xml.getElementsByTagName("list"));
            cov_2f40l1qxdw.s[278]++;
            _iterator2 = _createForOfIteratorHelper(records);
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                record = _step2.value;
                // Fetch `abstime` and `real` values
                abstime = (cov_2f40l1qxdw.s[279]++, record.getElementsByTagName("abstime")[0]);
                realValue = (cov_2f40l1qxdw.s[280]++, record.getElementsByTagName("real")[0]); // Match the `abstime` with the corresponding `month.startDate`
                cov_2f40l1qxdw.s[281]++;
                if ((cov_2f40l1qxdw.b[27][0]++, abstime) && (cov_2f40l1qxdw.b[27][1]++, realValue)) {
                  cov_2f40l1qxdw.b[26][0]++;
                  abstimeDate = (cov_2f40l1qxdw.s[282]++, new Date(abstime));
                  formattedAbstime = (cov_2f40l1qxdw.s[283]++, "".concat(abstimeDate.getFullYear(), "-").concat(String(abstimeDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(abstimeDate.getDate()).padStart(2, '0')));
                  cov_2f40l1qxdw.s[284]++;
                  if (formattedAbstime === month.startDate) {
                    cov_2f40l1qxdw.b[28][0]++;
                    cov_2f40l1qxdw.s[285]++;
                    scopeData[i].push(parseFloat(realValue).toFixed(2));
                  } else {
                    cov_2f40l1qxdw.b[28][1]++;
                  }
                } else {
                  cov_2f40l1qxdw.b[26][1]++;
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
            _context42.next = 47;
            break;
          case 41:
            _context42.prev = 41;
            _context42.t0 = _context42["catch"](16);
            cov_2f40l1qxdw.s[286]++;
            console.error("Error fetching data for scope ".concat(i + 1, ":"), _context42.t0);
            cov_2f40l1qxdw.s[287]++;
            scopeData[i].push(null); // Push null to maintain alignment
          case 47:
            i++;
            _context42.next = 14;
            break;
          case 50:
            _context42.next = 9;
            break;
          case 52:
            _context42.next = 57;
            break;
          case 54:
            _context42.prev = 54;
            _context42.t1 = _context42["catch"](7);
            _iterator.e(_context42.t1);
          case 57:
            _context42.prev = 57;
            _iterator.f();
            return _context42.finish(57);
          case 60:
            cov_2f40l1qxdw.s[288]++;
            try {
              existingStyle = (cov_2f40l1qxdw.s[289]++, document.getElementById('chartdiv-styles'));
              cov_2f40l1qxdw.s[290]++;
              if (existingStyle) {
                cov_2f40l1qxdw.b[29][0]++;
                cov_2f40l1qxdw.s[291]++;
                existingStyle.remove();
              } else {
                cov_2f40l1qxdw.b[29][1]++;
              }
              chartOptions = (cov_2f40l1qxdw.s[292]++, {
                series: [{
                  name: 'Scope 1',
                  data: scopeData[0]
                }, {
                  name: 'Scope 2',
                  data: scopeData[1]
                }, {
                  name: 'Scope 3',
                  data: scopeData[2]
                }],
                chart: {
                  type: 'bar',
                  height: "100%",
                  stacked: false,
                  toolbar: {
                    show: false
                  }
                },
                plotOptions: {
                  bar: {
                    horizontal: false,
                    columnWidth: '80%',
                    endingShape: 'rounded'
                  }
                },
                colors: ["#FFB22C", "#A4CE95", "#FFD93D"],
                dataLabels: {
                  enabled: false
                },
                xaxis: {
                  categories: getLast12Months()
                },
                grid: {
                  show: true
                },
                tooltip: {
                  y: {
                    formatter: function formatter(val) {
                      cov_2f40l1qxdw.f[27]++;
                      cov_2f40l1qxdw.s[293]++;
                      return "".concat(val, " metric tons");
                    }
                  }
                },
                legend: {
                  position: 'top',
                  horizontalAlign: 'center',
                  labels: {
                    colors: ['#000000']
                  }
                },
                stroke: {
                  show: true,
                  width: 2,
                  colors: ['transparent']
                },
                fill: {
                  opacity: 1
                }
              });
              cov_2f40l1qxdw.s[294]++;
              emissionChart = new ApexCharts(document.querySelector("#chartdiv"), chartOptions);
              cov_2f40l1qxdw.s[295]++;
              emissionChart.render();
            } catch (error) {
              cov_2f40l1qxdw.s[296]++;
              console.error("Error processing the data and rendering the chart:", error);
            }
          case 62:
          case "end":
            return _context42.stop();
        }
      }, _callee40, null, [[7, 54, 57, 60], [16, 41]]);
    }));
    return _createBarChart.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[297]++;
  $("#startDate, #endDate").on("change", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          cov_2f40l1qxdw.f[28]++;
          cov_2f40l1qxdw.s[298]++;
          _context.next = 4;
          return disposeChartCo(dateRangeCo2);
        case 4:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })));
  cov_2f40l1qxdw.s[299]++;
  $("#sav_monthly_btn").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          cov_2f40l1qxdw.f[29]++;
          cov_2f40l1qxdw.s[300]++;
          clearDateInputs();
          cov_2f40l1qxdw.s[301]++;
          _context2.next = 6;
          return disposeChartCo(lineChartMonthlyCo25);
        case 6:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  })));
  cov_2f40l1qxdw.s[302]++;
  $("#sav_daily_btn").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          cov_2f40l1qxdw.f[30]++;
          cov_2f40l1qxdw.s[303]++;
          clearDateInputs();
          cov_2f40l1qxdw.s[304]++;
          _context3.next = 6;
          return disposeChartCo(pieChart);
        case 6:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  })));
  cov_2f40l1qxdw.s[305]++;
  $("#sav_yearly_btn").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          cov_2f40l1qxdw.f[31]++;
          cov_2f40l1qxdw.s[306]++;
          clearDateInputs();
          cov_2f40l1qxdw.s[307]++;
          _context4.next = 6;
          return disposeChartCo(createBarChart1);
        case 6:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  })));
  /* co2 emmision end */

  /* water consumption start */

  var waterChart = (cov_2f40l1qxdw.s[308]++, null); // Declare chart globally to keep track of it
  function disposeChartWater(_x2) {
    return _disposeChartWater.apply(this, arguments);
  } // async function pieChart1() {
  //     let scopeValues = [];
  //     const scopes = ['domestic', 'flushing'];
  //     // Fetch data for each scope
  //     for (let scope of scopes) {
  //         const responses = await fetch(`${url}/obix/histories/SqlServerDatabase/${scope}/~historyQuery?start=${previousDate}T23:59:59.000+05:30&limit=1`);
  //         console.log("response for scope " + scope, responses);
  //         const text = await responses.text();
  //         // Parse the XML data
  //         const parser = new DOMParser();
  //         const xmlDoc = parser.parseFromString(text, "text/xml");
  //         // Get all <obj> elements
  //         const objs = xmlDoc.getElementsByTagName("list");
  //         console.log("length " + objs.length);
  //         // Process each <obj> element
  //         for (let i = 0; i < objs.length; i++) {
  //             const obj = objs[i];
  //             const real = obj.getElementsByTagName("real")[0]; // Get the <real> tag
  //             if (real) {
  //                 const valueText = real.getAttribute("val"); // Get the value of the <real> tag
  //                 console.log("value text " + valueText);
  //                 if (valueText) {
  //                     scopeValues.push({
  //                         category: scope,
  //                         [scope]: parseFloat(valueText).toFixed(2)
  //                     });
  //                 }
  //             }
  //         }
  //     }
  //     // Initialize amCharts when the data is ready
  //     am4core.ready(function () {
  //         // Themes begin
  //         am4core.useTheme(am4themes_animated);
  //         // Create chart instance if not already created
  //         waterChart = am4core.create("chartdiv1", am4charts.PieChart);
  //         // Add data to chart dynamically from fetched data
  //         waterChart.data = scopeValues;
  //         console.log("scopevalues" + scopeValues);
  //         // Add and configure Series
  //         var pieSeries = waterChart.series.push(new am4charts.PieSeries());
  //         pieSeries.dataFields.value = "value";
  //         pieSeries.dataFields.category = "category";
  //         // Set pie chart colors
  //         pieSeries.slices.template.stroke = am4core.color("transparent");
  //         pieSeries.slices.template.strokeOpacity = 0;
  //         // Example of setting colors for each slice (can be dynamically set based on data if needed)
  //         pieSeries.colors.list = [
  //             am4core.color("#C65BCF"), // Domestic Use
  //             am4core.color("#39A7FF")  // Flushing Use
  //         ];
  //         pieSeries.ticks.template.disabled = true;
  //         pieSeries.alignLabels = false;
  // pieSeries.labels.template.text = "{value.percent.formatNumber('#.0')}%";
  // pieSeries.labels.template.radius = am4core.percent(-40);
  // pieSeries.labels.template.fill = am4core.color("#000000");
  //         // Initial animation
  //         pieSeries.hiddenState.properties.opacity = 1;
  //         pieSeries.hiddenState.properties.endAngle = -90;
  //         pieSeries.hiddenState.properties.startAngle = -90;
  //         waterChart.hiddenState.properties.radius = am4core.percent(-40);
  //         pieSeries.legendSettings.valueText = "{ }"; // Remove value text
  //         // Add legend at the top
  //         waterChart.legend = new am4charts.Legend();
  //         waterChart.legend.position = "top";
  //         waterChart.legend.layout = "horizontal";
  //         waterChart.legend.contentAlign = "center"; // Center the legend horizontally
  //         waterChart.legend.labels.template.interactionsEnabled = false;
  //         // Configure legend labels and reduce spacing
  //         waterChart.legend.labels.template.text = "{category}: {value} L"; // Updated label format
  //         waterChart.legend.labels.template.fill = am4core.color("#000000");
  //         waterChart.legend.labels.template.maxWidth = 100; // Reduce max width for labels
  //         waterChart.legend.labels.template.padding(0, 0, 0, 0); // Adjust label padding (top, right, bottom, left)
  //         // // Configure legend item containers to minimize spacing
  //         waterChart.legend.itemContainers.template.padding(0, 0, 0, 0); // Adjust item container padding
  //         waterChart.legend.itemContainers.template.margin(0, 5, 0, 5); //Adjust item container margin
  //         // //chart.legend.itemContainers.template.minWidth = undefined; // Remove minWidth to make it flexible
  //         waterChart.legend.itemContainers.template.maxWidth = 180; // Limit max width for each item
  //         waterChart.logo.disabled = true;
  //     });
  // }
  function _disposeChartWater() {
    _disposeChartWater = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee41(newChartFunction) {
      return _regeneratorRuntime().wrap(function _callee41$(_context43) {
        while (1) switch (_context43.prev = _context43.next) {
          case 0:
            cov_2f40l1qxdw.f[32]++;
            cov_2f40l1qxdw.s[309]++;
            // Destroy the existing chart if it exists
            if (waterChart) {
              cov_2f40l1qxdw.b[30][0]++;
              cov_2f40l1qxdw.s[310]++;
              if (waterChart instanceof ApexCharts) {
                cov_2f40l1qxdw.b[31][0]++;
                cov_2f40l1qxdw.s[311]++;
                waterChart.destroy(); // Dispose the existing ApexCharts instance
              } else {
                cov_2f40l1qxdw.b[31][1]++;
                cov_2f40l1qxdw.s[312]++;
                if (waterChart instanceof am4charts.Chart) {
                  cov_2f40l1qxdw.b[32][0]++;
                  cov_2f40l1qxdw.s[313]++;
                  waterChart.dispose(); // Dispose the existing am4charts instance
                } else {
                  cov_2f40l1qxdw.b[32][1]++;
                }
              }
              cov_2f40l1qxdw.s[314]++;
              clearDateInputs();
            } else {
              cov_2f40l1qxdw.b[30][1]++;
            }
            cov_2f40l1qxdw.s[315]++;
            newChartFunction();
          case 5:
          case "end":
            return _context43.stop();
        }
      }, _callee41);
    }));
    return _disposeChartWater.apply(this, arguments);
  }
  function pieChart1() {
    return _pieChart2.apply(this, arguments);
  }
  function _pieChart2() {
    _pieChart2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee42() {
      var scopeValues, scopes, _i5, _scopes2, scope, response, text, parser, xmlDoc, real, valueText;
      return _regeneratorRuntime().wrap(function _callee42$(_context44) {
        while (1) switch (_context44.prev = _context44.next) {
          case 0:
            cov_2f40l1qxdw.f[33]++;
            scopeValues = (cov_2f40l1qxdw.s[316]++, []);
            scopes = (cov_2f40l1qxdw.s[317]++, ['Domestic', 'Flushing']); // Fetch data for each scope
            cov_2f40l1qxdw.s[318]++;
            _i5 = 0, _scopes2 = scopes;
          case 5:
            if (!(_i5 < _scopes2.length)) {
              _context44.next = 43;
              break;
            }
            scope = _scopes2[_i5];
            cov_2f40l1qxdw.s[319]++;
            _context44.prev = 8;
            cov_2f40l1qxdw.s[320]++;
            _context44.next = 12;
            return fetch("".concat(url, "/obix/histories/Barclays_Sup/Water$20Consumption_").concat(scope, "_Daily/~historyQuery?start=").concat(formattedDate, "T23:58:00.000+05:30&limit=1"));
          case 12:
            response = _context44.sent;
            cov_2f40l1qxdw.s[321]++;
            console.log("response for water " + scope, response);
            cov_2f40l1qxdw.s[322]++;
            if (response.ok) {
              _context44.next = 24;
              break;
            }
            cov_2f40l1qxdw.b[33][0]++;
            cov_2f40l1qxdw.s[323]++;
            console.error("Failed to fetch data for ".concat(scope, ": ").concat(response.statusText));
            cov_2f40l1qxdw.s[324]++;
            return _context44.abrupt("continue", 40);
          case 24:
            cov_2f40l1qxdw.b[33][1]++;
          case 25:
            cov_2f40l1qxdw.s[325]++;
            _context44.next = 28;
            return response.text();
          case 28:
            text = _context44.sent;
            // Parse the XML data
            parser = (cov_2f40l1qxdw.s[326]++, new DOMParser());
            xmlDoc = (cov_2f40l1qxdw.s[327]++, parser.parseFromString(text, "text/xml")); // Get the first <real> tag
            real = (cov_2f40l1qxdw.s[328]++, xmlDoc.querySelector("real"));
            cov_2f40l1qxdw.s[329]++;
            if (real) {
              cov_2f40l1qxdw.b[34][0]++;
              valueText = (cov_2f40l1qxdw.s[330]++, real.getAttribute("val"));
              cov_2f40l1qxdw.s[331]++;
              if (valueText) {
                cov_2f40l1qxdw.b[35][0]++;
                cov_2f40l1qxdw.s[332]++;
                scopeValues.push({
                  category: scope,
                  value: parseFloat(valueText).toFixed(2) // Unified key 'value' for the chart
                });
              } else {
                cov_2f40l1qxdw.b[35][1]++;
              }
            } else {
              cov_2f40l1qxdw.b[34][1]++;
            }
            _context44.next = 40;
            break;
          case 36:
            _context44.prev = 36;
            _context44.t0 = _context44["catch"](8);
            cov_2f40l1qxdw.s[333]++;
            console.error("Error fetching data for ".concat(scope, ":"), _context44.t0);
          case 40:
            _i5++;
            _context44.next = 5;
            break;
          case 43:
            cov_2f40l1qxdw.s[334]++;
            am4core.ready(function () {
              cov_2f40l1qxdw.f[34]++;
              cov_2f40l1qxdw.s[335]++;
              // Themes begin
              am4core.useTheme(am4themes_animated);

              // Create chart instance if not already created
              cov_2f40l1qxdw.s[336]++;
              waterChart = am4core.create("chartdiv1", am4charts.PieChart);

              // Add data to chart dynamically from fetched data
              cov_2f40l1qxdw.s[337]++;
              waterChart.data = scopeValues;
              // waterChart.data = [
              //     {
              //         "category": "Domestic Use",
              //         "value": 60
              //     },
              //     {
              //         "category": "Flushing Use",
              //         "value": 40
              //     }
              // ];
              // Add and configure Series
              var pieSeries = (cov_2f40l1qxdw.s[338]++, waterChart.series.push(new am4charts.PieSeries()));
              cov_2f40l1qxdw.s[339]++;
              pieSeries.dataFields.value = "value";
              cov_2f40l1qxdw.s[340]++;
              pieSeries.dataFields.category = "category";

              // Set pie chart colors
              cov_2f40l1qxdw.s[341]++;
              pieSeries.slices.template.stroke = am4core.color("transparent");
              cov_2f40l1qxdw.s[342]++;
              pieSeries.slices.template.strokeOpacity = 0;

              // Example of setting colors for each slice (can be dynamically set based on data if needed)
              cov_2f40l1qxdw.s[343]++;
              pieSeries.colors.list = [am4core.color("#C65BCF"),
              // Domestic Use
              am4core.color("#39A7FF") // Flushing Use
              ];
              cov_2f40l1qxdw.s[344]++;
              pieSeries.ticks.template.disabled = true;
              cov_2f40l1qxdw.s[345]++;
              pieSeries.alignLabels = false;
              cov_2f40l1qxdw.s[346]++;
              pieSeries.labels.template.text = "{value.percent.formatNumber('#.0')}%";
              cov_2f40l1qxdw.s[347]++;
              pieSeries.labels.template.radius = am4core.percent(-40);
              cov_2f40l1qxdw.s[348]++;
              pieSeries.labels.template.fill = am4core.color("#000000");

              // Initial animation
              cov_2f40l1qxdw.s[349]++;
              pieSeries.hiddenState.properties.opacity = 1;
              cov_2f40l1qxdw.s[350]++;
              pieSeries.hiddenState.properties.endAngle = 90;
              cov_2f40l1qxdw.s[351]++;
              pieSeries.hiddenState.properties.startAngle = -90;
              cov_2f40l1qxdw.s[352]++;
              waterChart.hiddenState.properties.radius = am4core.percent(-40);
              cov_2f40l1qxdw.s[353]++;
              pieSeries.legendSettings.valueText = "{ }"; // Remove value text

              // Add legend at the top
              cov_2f40l1qxdw.s[354]++;
              waterChart.legend = new am4charts.Legend();
              cov_2f40l1qxdw.s[355]++;
              waterChart.legend.position = "top";
              cov_2f40l1qxdw.s[356]++;
              waterChart.legend.layout = "horizontal";
              cov_2f40l1qxdw.s[357]++;
              waterChart.legend.contentAlign = "center"; // Center the legend horizontally
              cov_2f40l1qxdw.s[358]++;
              waterChart.legend.labels.template.interactionsEnabled = false;

              // Configure legend labels and reduce spacing
              cov_2f40l1qxdw.s[359]++;
              waterChart.legend.labels.template.text = "{category}: {value} L"; // Updated label format
              cov_2f40l1qxdw.s[360]++;
              waterChart.legend.labels.template.fill = am4core.color("#000000");
              cov_2f40l1qxdw.s[361]++;
              waterChart.legend.labels.template.maxWidth = 100; // Reduce max width for labels
              cov_2f40l1qxdw.s[362]++;
              waterChart.legend.labels.template.padding(0, 0, 0, 0); // Adjust label padding (top, right, bottom, left)

              // // Configure legend item containers to minimize spacing
              cov_2f40l1qxdw.s[363]++;
              waterChart.legend.itemContainers.template.padding(0, 0, 0, 0); // Adjust item container padding
              cov_2f40l1qxdw.s[364]++;
              waterChart.legend.itemContainers.template.margin(0, 5, 0, 5); //Adjust item container margin
              // //chart.legend.itemContainers.template.minWidth = undefined; // Remove minWidth to make it flexible
              cov_2f40l1qxdw.s[365]++;
              waterChart.legend.itemContainers.template.maxWidth = 180; // Limit max width for each item
              cov_2f40l1qxdw.s[366]++;
              waterChart.logo.disabled = true;
            });
          case 45:
          case "end":
            return _context44.stop();
        }
      }, _callee42, null, [[8, 36]]);
    }));
    return _pieChart2.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[367]++;
  disposeChartWater(pieChart1);
  function lineChartMonthlyWater() {
    return _lineChartMonthlyWater.apply(this, arguments);
  } // async function lineChartMonthlyWater() {
  //     try {
  //         const today = new Date();
  //         const currentMonth = today.getMonth();
  //         const startDate = new Date(today.getFullYear(), currentMonth - 1, 1);
  //         const endDate = new Date(today.getFullYear(), currentMonth, 0);
  //         const startISO = `${startDate.getFullYear()}-${String(startDate.getMonth() + 1).padStart(2, '0')}-${String(startDate.getDate()).padStart(2, '0')}`;
  //         const endISO = `${endDate.getFullYear()}-${String(endDate.getMonth() + 1).padStart(2, '0')}-${String(endDate.getDate()).padStart(2, '0')}`;
  //         const waters = ['domestic', 'flushing'];
  //         let waterValues = [];
  //         // Fetch data for each scope
  //         for (let water of waters) {
  //             const response = await fetch(url + `/obix/histories/SqlServerDatabase/${water}/~historyQuery?start=${startISO}&end=${endISO}`);
  //             const text = await response.text();
  //             const parser = new DOMParser();
  //             const xmlDoc = parser.parseFromString(text, "text/xml");
  //             const objs = xmlDoc.getElementsByTagName("obj");
  //             // Process each <obj> element
  //             for (let i = 0; i < objs.length; i++) {
  //                 const obj = objs[i];
  //                 const abstime = obj.getElementsByTagName("abstime")[0];
  //                 const real = obj.getElementsByTagName("real")[0];
  //                 if (abstime && real) {
  //                     const dateText = abstime.getAttribute("val");
  //                     const valueText = real.getAttribute("val");
  //                     if (valueText && dateText) {
  //                         const value = parseFloat(valueText).toFixed(2);
  //                         const date = new Date(dateText);
  //                         const dateStr = date.toDateString();
  //                         // Add the data for each scope
  //                         const existingEntry = waterValues.find(entry => entry.date.toDateString() === dateStr);
  //                         if (existingEntry) {
  //                             existingEntry[water] = parseFloat(value);
  //                         } else {
  //                             waterValues.push({
  //                                 date: date,
  //                                 [water]: parseFloat(value)
  //                             });
  //                         }
  //                     }
  //                 }
  //             }
  //         }
  //         console.log(waterValues); // Debug the data
  //         if (waterValues.length === 0) {
  //             console.error("No valid data found.");
  //             return;
  //         }
  //         // Create the chart with AmCharts 5
  //         am5.ready(function() {
  //             const root = am5.Root.new("chartdiv1");
  //             root.setThemes([am5themes_Animated.new(root)]);
  //             const chart = root.container.children.push(
  //                 am5xy.XYChart.new(root, {
  //                     panX: true,
  //                     panY: true,
  //                     wheelX: "pan",
  //                     wheelY: "zoom"
  //                 })
  //             );
  //             const xAxis = chart.xAxes.push(
  //                 am5xy.DateAxis.new(root, {
  //                     maxDeviation: 0,
  //                     baseInterval: { timeUnit: "day", count: 1 },
  //                     renderer: am5xy.AxisRendererX.new(root, { minGridDistance: 30 })
  //                 })
  //             );
  //             const yAxis = chart.yAxes.push(
  //                 am5xy.ValueAxis.new(root, {
  //                     renderer: am5xy.AxisRendererY.new(root, {})
  //                 })
  //             );
  //             const domesticSeries = chart.series.push(
  //                 am5xy.LineSeries.new(root, {
  //                     name: "Domestic Water",
  //                     xAxis: xAxis,
  //                     yAxis: yAxis,
  //                     valueYField: "domestic",
  //                     valueXField: "date",
  //                     tooltip: am5.Tooltip.new(root, {
  //                         labelText: "{valueY}"
  //                     })
  //                 })
  //             );
  //             const flushingSeries = chart.series.push(
  //                 am5xy.LineSeries.new(root, {
  //                     name: "Flushing Water",
  //                     xAxis: xAxis,
  //                     yAxis: yAxis,
  //                     valueYField: "flushing",
  //                     valueXField: "date",
  //                     tooltip: am5.Tooltip.new(root, {
  //                         labelText: "{valueY}"
  //                     })
  //                 })
  //             );
  //             chart.data.setAll(waterValues); // Set the data
  //             chart.children.push(am5.Legend.new(root, { x: am5.percent(50), centerX: am5.percent(50) }));
  //             chart.events.on("datavalidated", function() {
  //                 chart.zoomToIndexes(Math.max(chart.data.length - 70, 0), chart.data.length - 1);
  //             });
  //         });
  //     } catch (error) {
  //         console.error("Error fetching or processing the data:", error);
  //     }
  // }
  function _lineChartMonthlyWater() {
    _lineChartMonthlyWater = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee44() {
      return _regeneratorRuntime().wrap(function _callee44$(_context47) {
        while (1) switch (_context47.prev = _context47.next) {
          case 0:
            cov_2f40l1qxdw.f[35]++;
            cov_2f40l1qxdw.s[368]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {
              var today, currentMonth, startDate, endDate, startISO, endISO, waters, waterValues, _i6, _waters3, scope, urlToFetch, response, text, parser, xmlDoc, objs, _loop3, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee43$(_context46) {
                while (1) switch (_context46.prev = _context46.next) {
                  case 0:
                    createSeries = function _createSeries3(valueField, name, color) {
                      cov_2f40l1qxdw.f[39]++;
                      var series = (cov_2f40l1qxdw.s[425]++, waterChart.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[426]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[427]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[428]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[429]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[430]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[431]++;
                      series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[432]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[433]++;
                      bullet.tooltipText = "{name}: {valueY}";
                      cov_2f40l1qxdw.s[434]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[40]++;
                        cov_2f40l1qxdw.s[435]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[42][0]++;
                          cov_2f40l1qxdw.s[436]++;
                          return am4core.color("#FF0000"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[42][1]++;
                        }
                        cov_2f40l1qxdw.s[437]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[438]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[36]++;
                    today = (cov_2f40l1qxdw.s[369]++, new Date());
                    currentMonth = (cov_2f40l1qxdw.s[370]++, today.getMonth());
                    startDate = (cov_2f40l1qxdw.s[371]++, new Date(today.getFullYear(), currentMonth - 1, 1));
                    endDate = (cov_2f40l1qxdw.s[372]++, new Date(today.getFullYear(), currentMonth, 0));
                    startISO = (cov_2f40l1qxdw.s[373]++, "".concat(startDate.getFullYear(), "-").concat(String(startDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(startDate.getDate()).padStart(2, '0')));
                    endISO = (cov_2f40l1qxdw.s[374]++, "".concat(endDate.getFullYear(), "-").concat(String(endDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(endDate.getDate()).padStart(2, '0')));
                    waters = (cov_2f40l1qxdw.s[375]++, ['Domestic', 'Flushing']);
                    waterValues = (cov_2f40l1qxdw.s[376]++, []); // Fetch data asynchronously for each scope
                    cov_2f40l1qxdw.s[377]++;
                    _i6 = 0, _waters3 = waters;
                  case 12:
                    if (!(_i6 < _waters3.length)) {
                      _context46.next = 59;
                      break;
                    }
                    scope = _waters3[_i6];
                    urlToFetch = (cov_2f40l1qxdw.s[378]++, "".concat(url, "/obix/histories/Barclays_Sup/Water$20Consumption_").concat(scope, "_Daily/~historyQuery?start=").concat(startISO, "T23:59:59.000+05:30&end=").concat(endISO, "T23:59:59.000+05:30"));
                    cov_2f40l1qxdw.s[379]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[380]++;
                    _context46.prev = 18;
                    cov_2f40l1qxdw.s[381]++;
                    _context46.next = 22;
                    return fetch(urlToFetch);
                  case 22:
                    response = _context46.sent;
                    cov_2f40l1qxdw.s[382]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[383]++;
                    if (response.ok) {
                      _context46.next = 34;
                      break;
                    }
                    cov_2f40l1qxdw.b[36][0]++;
                    cov_2f40l1qxdw.s[384]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(response.status, " - ").concat(response.statusText));
                    cov_2f40l1qxdw.s[385]++;
                    return _context46.abrupt("continue", 56);
                  case 34:
                    cov_2f40l1qxdw.b[36][1]++;
                  case 35:
                    cov_2f40l1qxdw.s[386]++;
                    _context46.next = 38;
                    return response.text();
                  case 38:
                    text = _context46.sent;
                    parser = (cov_2f40l1qxdw.s[387]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[388]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[389]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[390]++;
                    _loop3 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop3() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate3, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop3$(_context45) {
                        while (1) switch (_context45.prev = _context45.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[391]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[392]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[393]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[394]++;
                            if ((cov_2f40l1qxdw.b[38][0]++, abstime) && (cov_2f40l1qxdw.b[38][1]++, real)) {
                              cov_2f40l1qxdw.b[37][0]++;
                              dateText = (cov_2f40l1qxdw.s[395]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[396]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[397]++;
                              if ((cov_2f40l1qxdw.b[40][0]++, valueText) && (cov_2f40l1qxdw.b[40][1]++, dateText)) {
                                cov_2f40l1qxdw.b[39][0]++;
                                value = (cov_2f40l1qxdw.s[398]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[399]++, new Date(dateText));
                                _formattedDate3 = (cov_2f40l1qxdw.s[400]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[401]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[402]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[37]++;
                                  cov_2f40l1qxdw.s[403]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[404]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[41][0]++;
                                  cov_2f40l1qxdw.s[405]++;
                                  existingEntry[scope] = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[41][1]++;
                                  cov_2f40l1qxdw.s[406]++;
                                  waterValues.push(_defineProperty({
                                    date: date
                                  }, scope, parseFloat(value).toFixed(2)));
                                }
                              } else {
                                cov_2f40l1qxdw.b[39][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[37][1]++;
                            }
                          case 5:
                          case "end":
                            return _context45.stop();
                        }
                      }, _loop3);
                    });
                    i = 0;
                  case 45:
                    if (!(i < objs.length)) {
                      _context46.next = 50;
                      break;
                    }
                    return _context46.delegateYield(_loop3(), "t0", 47);
                  case 47:
                    i++;
                    _context46.next = 45;
                    break;
                  case 50:
                    _context46.next = 56;
                    break;
                  case 52:
                    _context46.prev = 52;
                    _context46.t1 = _context46["catch"](18);
                    cov_2f40l1qxdw.s[407]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(_context46.t1.message));
                  case 56:
                    _i6++;
                    _context46.next = 12;
                    break;
                  case 59:
                    cov_2f40l1qxdw.s[408]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    cov_2f40l1qxdw.s[409]++;
                    waterChart = am4core.create("chartdiv1", am4charts.XYChart);
                    cov_2f40l1qxdw.s[410]++;
                    waterChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[411]++;
                    waterChart.data = waterValues;
                    cov_2f40l1qxdw.s[412]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[38]++;
                      cov_2f40l1qxdw.s[413]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[414]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[415]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[416]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[417]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[418]++, waterChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[419]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[420]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[421]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[422]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[423]++, waterChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[424]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[439]++;
                    waterChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[440]++;
                    waterChart.legend.position = "top";
                    cov_2f40l1qxdw.s[441]++;
                    waterChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[442]++;
                    waterChart.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[443]++;
                    createSeries("domestic", "Domestic", am4core.color("#C65BCF"));
                    cov_2f40l1qxdw.s[444]++;
                    createSeries("flushing", "Flushing", am4core.color("#39A7FF"));

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[445]++;
                    waterChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[446]++;
                    waterChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[447]++;
                    waterChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[448]++;
                    waterChart.logo.disabled = true;
                  case 101:
                  case "end":
                    return _context46.stop();
                }
              }, _callee43, null, [[18, 52]]);
            })));
          case 3:
          case "end":
            return _context47.stop();
        }
      }, _callee44);
    }));
    return _lineChartMonthlyWater.apply(this, arguments);
  }
  function daterangeWater() {
    return _daterangeWater.apply(this, arguments);
  } //     async function daterangeWater() {
  //     am4core.ready(async function () {
  // const startDateValue = $("#startDateWater").val();
  // const endDateValue = $("#endDateWater").val();
  //         const isValid = await validateDateRange(startDateValue, endDateValue);
  //         if (!isValid) {
  //             // If the date range is invalid, stop execution
  //             return;
  //         }
  //         const waters = ['Domestic', 'Flushing'];
  //         let waterValues = [];
  //         for (let scope of waters) {
  //             const urlToFetch = `${url}/obix/histories/Barclays_Sup/Water$20Consumption_${scope}_Daily/~historyQuery?start=${startDateValue}T23:58:00.000+05:30&end=${endDateValue}T23:58:00.000+05:30`;
  //             console.log(urlToFetch);
  //             try {
  //                 const response = await fetch(urlToFetch);
  //                 console.log(response);
  //                 if (!response.ok) {
  //                     console.error(`Error fetching data for ${scope}: ${response.status} - ${response.statusText}`);
  //                     continue;
  //                 }
  //                 const text = await response.text();
  //                 const parser = new DOMParser();
  //                 const xmlDoc = parser.parseFromString(text, "text/xml");
  //                 const objs = xmlDoc.getElementsByTagName("obj");
  //                 for (let i = 0; i < objs.length; i++) {
  //                     const obj = objs[i];
  //                     const abstime = obj.getElementsByTagName("abstime")[0];
  //                     const real = obj.getElementsByTagName("real")[0];
  //                     if (abstime && real) {
  //                         const dateText = abstime.getAttribute("val");
  //                         const valueText = real.getAttribute("val");
  //                         if (valueText && dateText) {
  //                             const rawDate = new Date(dateText);
  //                             const adjustedDate = new Date(rawDate.getTime() + (5 * 60 + 30) * 60000); // Adjust to +05:30
  //                             const formattedDate = adjustedDate.toLocaleDateString("en-US", {
  //                                 month: "short",
  //                                 day: "numeric"
  //                             });
  //                             const dateStr = adjustedDate;
  //                             const existingEntry = waterValues.find(entry => entry.date.toDateString() === dateStr);
  //                             if (existingEntry) {
  //                                 existingEntry[scope] = parseFloat(valueText);
  //                             } else {
  //                                 waterValues.push({
  //                                     date: adjustedDate,
  //                                     [scope]: parseFloat(valueText)
  //                                 });
  //                             }
  //                         }
  //                     }
  //                 }
  //             } catch (error) {
  //                 console.error(`Error fetching data for ${scope}: ${error.message}`);
  //             }
  //         }
  //         // Themes begin
  //         am4core.useTheme(am4themes_animated);
  //         // Themes end
  //         // Create chart instance
  //         var emissionChart = am4core.create("chartdiv1", am4charts.XYChart);
  //         emissionChart.paddingRight = 20;
  //         // Add data
  //         waterValues.forEach(item => {
  //             item.date = item.date.toLocaleDateString("en-US", {
  //                 month: "short",
  //                 day: "numeric"
  //             });
  //         });
  //         emissionChart.data = waterValues;
  //         // Create axes
  //         var categoryAxis = emissionChart.xAxes.push(new am4charts.CategoryAxis());
  //         categoryAxis.dataFields.category = "date";
  //         categoryAxis.renderer.minGridDistance = 80;
  //         categoryAxis.renderer.labels.template.horizontalCenter = "middle";
  //         categoryAxis.renderer.labels.template.verticalCenter = "middle";
  //         var valueAxis = emissionChart.yAxes.push(new am4charts.ValueAxis());
  //         valueAxis.baseValue = 0;
  //         // Function to create series
  //         function createSeries(valueField, name, color) {
  //             var series = emissionChart.series.push(new am4charts.LineSeries());
  //             series.dataFields.valueY = valueField;
  //             series.dataFields.categoryX = "date";
  //             series.name = name;
  //             series.strokeWidth = 2;
  //             series.tensionX = 0.77;
  //             series.stroke = color;
  //             var bullet = series.bullets.push(new am4charts.Bullet());
  //             bullet.tooltipText = "{name}: {valueY} ";
  //             bullet.adapter.add("fill", function (fill, target) {
  //                 if (target.dataItem.valueY < 0) {
  //                     return am4core.color("#FF0000");
  //                 }
  //                 return series.stroke;
  //             });
  //             return series;
  //         }
  //         emissionChart.legend = new am4charts.Legend();
  //         emissionChart.legend.position = "top";
  //         emissionChart.legend.paddingBottom = 10;
  //         emissionChart.legend.labels.template.maxWidth = 95;
  //         createSeries("Domestic", "Domestic", am4core.color("#C65BCF"));
  //         createSeries("Flushing", "Flushing", am4core.color("#39A7FF"));
  //         // Add scrollbar
  //         emissionChart.scrollbarX = new am4core.Scrollbar();
  //         emissionChart.scrollbarX.marginBottom = 20;
  //         emissionChart.cursor = new am4charts.XYCursor();
  //         emissionChart.logo.disabled = true;
  //     });
  // }
  function _daterangeWater() {
    _daterangeWater = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee46() {
      return _regeneratorRuntime().wrap(function _callee46$(_context50) {
        while (1) switch (_context50.prev = _context50.next) {
          case 0:
            cov_2f40l1qxdw.f[41]++;
            cov_2f40l1qxdw.s[449]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee45() {
              var startDateValue, endDateValue, isValid, waters, waterValues, _i7, _waters4, scope, urlToFetch, response, text, parser, xmlDoc, objs, _loop4, i, emissionChart, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee45$(_context49) {
                while (1) switch (_context49.prev = _context49.next) {
                  case 0:
                    createSeries = function _createSeries4(valueField, name, color) {
                      cov_2f40l1qxdw.f[45]++;
                      var series = (cov_2f40l1qxdw.s[505]++, emissionChart.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[506]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[507]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[508]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[509]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[510]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[511]++;
                      series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[512]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[513]++;
                      bullet.tooltipText = "{name}: {valueY} ";
                      cov_2f40l1qxdw.s[514]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[46]++;
                        cov_2f40l1qxdw.s[515]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[50][0]++;
                          cov_2f40l1qxdw.s[516]++;
                          return am4core.color("#FF0000"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[50][1]++;
                        }
                        cov_2f40l1qxdw.s[517]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[518]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[42]++;
                    startDateValue = (cov_2f40l1qxdw.s[450]++, $("#startDateWater").val());
                    endDateValue = (cov_2f40l1qxdw.s[451]++, $("#endDateWater").val());
                    cov_2f40l1qxdw.s[452]++;
                    _context49.next = 7;
                    return validateDateRange(startDateValue, endDateValue);
                  case 7:
                    isValid = _context49.sent;
                    cov_2f40l1qxdw.s[453]++;
                    if (isValid) {
                      _context49.next = 15;
                      break;
                    }
                    cov_2f40l1qxdw.b[43][0]++;
                    cov_2f40l1qxdw.s[454]++;
                    return _context49.abrupt("return");
                  case 15:
                    cov_2f40l1qxdw.b[43][1]++;
                  case 16:
                    waters = (cov_2f40l1qxdw.s[455]++, ['Domestic', 'Flushing']);
                    waterValues = (cov_2f40l1qxdw.s[456]++, []); // const url = "https://localhost";
                    // Fetch data asynchronously for each scope
                    cov_2f40l1qxdw.s[457]++;
                    _i7 = 0, _waters4 = waters;
                  case 20:
                    if (!(_i7 < _waters4.length)) {
                      _context49.next = 67;
                      break;
                    }
                    scope = _waters4[_i7];
                    urlToFetch = (cov_2f40l1qxdw.s[458]++, "".concat(url, "/obix/histories/Barclays_Sup/Water$20Consumption_").concat(scope, "_Daily/~historyQuery?start=").concat(startDateValue, "T23:58:00.000+05:30&end=").concat(endDateValue, "T23:58:00.000+05:30"));
                    cov_2f40l1qxdw.s[459]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[460]++;
                    _context49.prev = 26;
                    cov_2f40l1qxdw.s[461]++;
                    _context49.next = 30;
                    return fetch(urlToFetch);
                  case 30:
                    response = _context49.sent;
                    cov_2f40l1qxdw.s[462]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[463]++;
                    if (response.ok) {
                      _context49.next = 42;
                      break;
                    }
                    cov_2f40l1qxdw.b[44][0]++;
                    cov_2f40l1qxdw.s[464]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(response.status, " - ").concat(response.statusText));
                    cov_2f40l1qxdw.s[465]++;
                    return _context49.abrupt("continue", 64);
                  case 42:
                    cov_2f40l1qxdw.b[44][1]++;
                  case 43:
                    cov_2f40l1qxdw.s[466]++;
                    _context49.next = 46;
                    return response.text();
                  case 46:
                    text = _context49.sent;
                    // Parse the XML data
                    parser = (cov_2f40l1qxdw.s[467]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[468]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[469]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[470]++;
                    _loop4 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop4() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate4, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop4$(_context48) {
                        while (1) switch (_context48.prev = _context48.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[471]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[472]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[473]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[474]++;
                            if ((cov_2f40l1qxdw.b[46][0]++, abstime) && (cov_2f40l1qxdw.b[46][1]++, real)) {
                              cov_2f40l1qxdw.b[45][0]++;
                              dateText = (cov_2f40l1qxdw.s[475]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[476]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[477]++;
                              if ((cov_2f40l1qxdw.b[48][0]++, valueText) && (cov_2f40l1qxdw.b[48][1]++, dateText)) {
                                cov_2f40l1qxdw.b[47][0]++;
                                value = (cov_2f40l1qxdw.s[478]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[479]++, new Date(dateText));
                                _formattedDate4 = (cov_2f40l1qxdw.s[480]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[481]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[482]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[43]++;
                                  cov_2f40l1qxdw.s[483]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[484]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[49][0]++;
                                  cov_2f40l1qxdw.s[485]++;
                                  existingEntry[scope] = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[49][1]++;
                                  cov_2f40l1qxdw.s[486]++;
                                  waterValues.push(_defineProperty({
                                    date: date
                                  }, scope, parseFloat(value)));
                                }
                              } else {
                                cov_2f40l1qxdw.b[47][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[45][1]++;
                            }
                          case 5:
                          case "end":
                            return _context48.stop();
                        }
                      }, _loop4);
                    });
                    i = 0;
                  case 53:
                    if (!(i < objs.length)) {
                      _context49.next = 58;
                      break;
                    }
                    return _context49.delegateYield(_loop4(), "t0", 55);
                  case 55:
                    i++;
                    _context49.next = 53;
                    break;
                  case 58:
                    _context49.next = 64;
                    break;
                  case 60:
                    _context49.prev = 60;
                    _context49.t1 = _context49["catch"](26);
                    cov_2f40l1qxdw.s[487]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(_context49.t1.message));
                  case 64:
                    _i7++;
                    _context49.next = 20;
                    break;
                  case 67:
                    cov_2f40l1qxdw.s[488]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    emissionChart = (cov_2f40l1qxdw.s[489]++, am4core.create("chartdiv1", am4charts.XYChart));
                    cov_2f40l1qxdw.s[490]++;
                    emissionChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[491]++;
                    emissionChart.data = waterValues;
                    cov_2f40l1qxdw.s[492]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[44]++;
                      cov_2f40l1qxdw.s[493]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[494]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[495]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[496]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[497]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[498]++, emissionChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[499]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[500]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[501]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[502]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[503]++, emissionChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[504]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[519]++;
                    emissionChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[520]++;
                    emissionChart.legend.position = "top";
                    cov_2f40l1qxdw.s[521]++;
                    emissionChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[522]++;
                    emissionChart.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[523]++;
                    createSeries("Domestic", "Domestic", am4core.color("#C65BCF"));
                    cov_2f40l1qxdw.s[524]++;
                    createSeries("Flushing", "Flushing", am4core.color("#39A7FF"));

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[525]++;
                    emissionChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[526]++;
                    emissionChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[527]++;
                    emissionChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[528]++;
                    emissionChart.logo.disabled = true;
                  case 108:
                  case "end":
                    return _context49.stop();
                }
              }, _callee45, null, [[26, 60]]);
            })));
            //   am4core.ready(async function () {

            //                 const startDateValue = $("#startDateWater").val();
            //     const endDateValue = $("#endDateWater").val();
            //         const isValid = await validateDateRange(startDateValue, endDateValue);
            // if (!isValid) {
            //     // If the date range is invalid, stop execution
            //     return;
            // }
            //         const waters = ['Domestic', 'Flushing'];
            //         let waterValues = [];
            //         // const url = "https://localhost";

            //         // Fetch data asynchronously for each scope
            //         for (let scope of waters) {
            //             const urlToFetch = `${url}/obix/histories/Barclays_Sup/Water$20Consumption_${scope}_Daily/~historyQuery?start=${startDateValue}T23:58:00.000+05:30&end=${endDateValue}T23:58:00.000+05:30`;
            //             console.log(urlToFetch);
            //             try {
            //                 const response = await fetch(urlToFetch);
            //                 console.log(response);
            //                 if (!response.ok) {
            //                     console.error(`Error fetching data for ${scope}: ${response.status} - ${response.statusText}`);
            //                     continue;
            //                 }

            //             const text = await response.text();

            //             // Parse the XML data
            //                 const parser = new DOMParser();
            //                 const xmlDoc = parser.parseFromString(text, "text/xml");
            //                 const objs = xmlDoc.getElementsByTagName("obj");

            //                 for (let i = 0; i < objs.length; i++) {
            //                     const obj = objs[i];
            //                     const abstime = obj.getElementsByTagName("abstime")[0];
            //                     const real = obj.getElementsByTagName("real")[0];

            //                     if (abstime && real) {
            //                         const dateText = abstime.getAttribute("val");
            //                         const valueText = real.getAttribute("val");

            //                         if (valueText && dateText) {
            //                             const value = parseFloat(valueText).toFixed(2);
            //                             const date = new Date(dateText);
            //                             const formattedDate = date.toLocaleDateString("en-US", {
            //                                 month: "short",
            //                                 day: "numeric"
            //                             });
            //                             const dateStr = date.toDateString();  // Use toDateString to compare without time

            //                             const existingEntry = waterValues.find(entry => entry.date.toDateString() === dateStr);

            //                             if (existingEntry) {
            //                                 existingEntry[scope] = parseFloat(value);
            //                             } else {
            //                                 waterValues.push({
            //                                     date: date,
            //                                     [scope]: parseFloat(value)
            //                                 });
            //                             }
            //                         }
            //                     }
            //                 }
            //             } catch (error) {
            //                 console.error(`Error fetching data for ${scope}: ${error.message}`);
            //             }
            //         }

            //         // Themes begin
            //         am4core.useTheme(am4themes_animated);
            //         // Themes end

            //         // Create chart instance
            //         epiChart = am4core.create("chartdiv5", am4charts.XYChart);
            //         epiChart.paddingRight = 20;

            //         // Add data
            //         epiChart.data = waterValues;
            //         waterValues.forEach(item => {
            //             item.date = new Date(item.date).getTime();  // Convert to timestamp
            //             console.log("item date (timestamp): " + item.date);

            //             // Convert timestamp back to a readable date
            //             const formattedDate = new Date(item.date).toLocaleDateString("en-US", {
            //                 // year: "numeric",
            //                 month: "short",
            //                 day: "numeric"
            //             });
            //             item.date = formattedDate;
            //             console.log("Formatted item date: " + formattedDate);
            //         });

            //         // Create axes
            //         var categoryAxis = epiChart.xAxes.push(new am4charts.CategoryAxis());
            //         categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
            //         categoryAxis.renderer.minGridDistance = 80;
            //         // categoryAxis.renderer.grid.template.location = 2;
            //         // categoryAxis.startLocation = 1;
            //         // categoryAxis.endLocation = 1.5;
            //         categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
            //         categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels

            //         var valueAxis = epiChart.yAxes.push(new am4charts.ValueAxis());
            //         valueAxis.baseValue = 0;

            //         // Function to create series
            //         function createSeries(valueField, name, color) {
            //             var series = epiChart.series.push(new am4charts.LineSeries());
            //             series.dataFields.valueY = valueField;
            //             series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
            //             series.name = name;
            //             series.strokeWidth = 2;
            //             series.tensionX = 0.77;
            //             series.stroke = color;

            //             // Bullet to display tooltips
            //             var bullet = series.bullets.push(new am4charts.Bullet());
            //             bullet.tooltipText = "{valueY}";

            //             bullet.adapter.add("fill", function (fill, target) {
            //                 // If the value is negative, color the bullet red, else use the series color
            //                 if (target.dataItem.valueY < 0) {
            //                     return am4core.color("#FF0000"); // Red for negative values
            //                 }
            //                 return series.stroke; // Use the series stroke color (the color passed to createSeries)
            //             });

            //             return series;
            //         }
            //         epiChart.legend = new am4charts.Legend();
            //         epiChart.legend.position = "top";
            //         epiChart.legend.paddingBottom = 10;
            //         epiChart.legend.labels.template.maxWidth = 95;
            //         // Create three series with different data fields and colors
            //         createSeries("Domestic", "Domestic", am4core.color("#FFB200"));
            //         createSeries("Flushing", "Flushing", am4core.color("#667BC6"));

            //         // Add scrollbar
            //         // var scrollbarX = new am4charts.XYChartScrollbar();
            //         // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
            //         // chart.scrollbarX = scrollbarX;
            //         // scrollbarX.height = 30;
            //         epiChart.scrollbarX = new am4core.Scrollbar();
            //         epiChart.scrollbarX.marginBottom = 20;

            //         epiChart.cursor = new am4charts.XYCursor();
            //         epiChart.logo.disabled = true;

            //     });
            //         am4core.ready(async function () {

            //             var startDateValue = $("#startDateWater").val();
            //             var endDateValue = $("#endDateWater").val();
            //             const isValid = await validateDateRange(startDateValue, endDateValue);
            //             if (!isValid) {
            //                 // If the date range is invalid, stop execution
            //                 return;
            //             }
            //             const waters = ['Domestic', 'Flushing'];
            //             let waterValues = [];
            //             // Fetch data asynchronously for each scope
            //             for (let scope of waters) {
            //                 const urlToFetch = `${url}/obix/histories/Barclays_Sup/Water$20Consumption_${scope}_Daily/~historyQuery?start=${startDateValue}&end=${endDateValue}`;//T23:58:00.000+05:30
            //                 console.log(urlToFetch);
            //                 try {
            //         const response = await fetch(urlToFetch);
            //         console.log(response);

            //         const text = await response.text();
            //         const parser = new DOMParser();
            //         const xmlDoc = parser.parseFromString(text, "text/xml");
            //         const objs = xmlDoc.getElementsByTagName("obj");

            //         for (let i = 0; i < objs.length; i++) {
            //             const obj = objs[i];
            //             const abstime = obj.getElementsByTagName("abstime")[0];
            //             const real = obj.getElementsByTagName("real")[0];

            //             if (abstime && real) {
            //                 const dateText = abstime.getAttribute("val");
            //                 const valueText = real.getAttribute("val");

            //                 if (valueText && dateText) {
            //                     const value = parseFloat(valueText).toFixed(2);
            //                     const rawDate = new Date(dateText);

            //                     // Normalize date to remove milliseconds and ignore seconds
            //                     const normalizedDate = normalizeDate(rawDate);
            //                     const formattedDate = normalizedDate.toLocaleDateString("en-US", {
            //                         month: "short",
            //                         day: "numeric"
            //                     });
            //                     const dateStr = normalizedDate.toDateString();  // Use toDateString to compare without time

            //                     const existingEntry = waterValues.find(entry => entry.date.toDateString() === dateStr);

            //                     if (existingEntry) {
            //                         // Update the existing entry's value
            //                         existingEntry.value = parseFloat(value);
            //                     } else {
            //                         // Add a new entry with date and value
            //                         waterValues.push({
            //                             date: normalizedDate,
            //                             value: parseFloat(value)
            //                         });
            //                     }
            //                 }
            //             }
            //         }
            //     } catch (error) {
            //         console.error(`Error fetching data: ${error}`);
            //     }
            //             }
            // console.log("Domestic Data:", waterValues.map(item => item.Domestic));
            // console.log("Flushing Data:", waterValues.map(item => item.Flushing));
            // console.log("Final waterValues array:");
            // console.log(waterValues);

            //             // Themes begin
            //             am4core.useTheme(am4themes_animated);
            //             // Themes end

            //             // Create chart instance
            //             var emissionChart = am4core.create("chartdiv1", am4charts.XYChart);
            //             emissionChart.paddingRight = 20;

            //             // Add data
            //             emissionChart.data = waterValues;
            //             waterValues.forEach(item => {
            //                 item.date = new Date(item.date).getTime();  // Convert to timestamp
            //                 console.log("item date (timestamp): " + item.date);

            //                 // Convert timestamp back to a readable date
            //                 const formattedDate = new Date(item.date).toLocaleDateString("en-US", {
            //                     // year: "numeric",
            //                     month: "short",
            //                     day: "numeric"
            //                 });
            //                 item.date = formattedDate;
            //                 console.log("Formatted item date: " + formattedDate);
            //             });

            //             // Create axes
            //             var categoryAxis = emissionChart.xAxes.push(new am4charts.CategoryAxis());
            //             categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
            //             categoryAxis.renderer.minGridDistance = 80;
            //             // categoryAxis.renderer.grid.template.location = 2;
            //             // categoryAxis.startLocation = 1;
            //             // categoryAxis.endLocation = 1.5;
            //             categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
            //             categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels

            //             var valueAxis = emissionChart.yAxes.push(new am4charts.ValueAxis());
            //             valueAxis.baseValue = 0;

            //             // Function to create series
            //             function createSeries(valueField, name, color) {
            //                 var series = emissionChart.series.push(new am4charts.LineSeries());
            //                 series.dataFields.valueY = valueField;
            //                 series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
            //                 series.name = name;
            //                 series.strokeWidth = 2;
            //                 series.tensionX = 0.77;
            //                 series.stroke = color;

            //                 // Bullet to display tooltips
            //                 var bullet = series.bullets.push(new am4charts.Bullet());
            //                 bullet.tooltipText = "{name}: {valueY} ";

            //                 bullet.adapter.add("fill", function (fill, target) {
            //                     // If the value is negative, color the bullet red, else use the series color
            //                     if (target.dataItem.valueY < 0) {
            //                         return am4core.color("#FF0000"); // Red for negative values
            //                     }
            //                     return series.stroke; // Use the series stroke color (the color passed to createSeries)
            //                 });

            //                 return series;
            //             }
            //             emissionChart.legend = new am4charts.Legend();
            //             emissionChart.legend.position = "top";
            //             emissionChart.legend.paddingBottom = 10;
            //             emissionChart.legend.labels.template.maxWidth = 95;
            //             // Create three series with different data fields and colors
            //             createSeries("Domestic", "Domestic", am4core.color("#C65BCF"));
            //             createSeries("Flushing", "Flushing", am4core.color("#39A7FF"));

            //             // Add scrollbar
            //             // var scrollbarX = new am4charts.XYChartScrollbar();
            //             // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
            //             // chart.scrollbarX = scrollbarX;
            //             // scrollbarX.height = 30;
            //             emissionChart.scrollbarX = new am4core.Scrollbar();
            //             emissionChart.scrollbarX.marginBottom = 20;

            //             emissionChart.cursor = new am4charts.XYCursor();
            //             emissionChart.logo.disabled = true;

            //         });
          case 3:
          case "end":
            return _context50.stop();
        }
      }, _callee46);
    }));
    return _daterangeWater.apply(this, arguments);
  }
  function showClusteredBarChart1() {
    return _showClusteredBarChart.apply(this, arguments);
  }
  function _showClusteredBarChart() {
    _showClusteredBarChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee47() {
      var domesticWater, flushingWater, last12Months, previousMonths, _iterator3, _step3, month, scopeUrls, i, response, text, parser, xml, records, _iterator4, _step4, record, abstime, realValue, abstimeDate, formattedAbstime;
      return _regeneratorRuntime().wrap(function _callee47$(_context51) {
        while (1) switch (_context51.prev = _context51.next) {
          case 0:
            cov_2f40l1qxdw.f[47]++;
            domesticWater = (cov_2f40l1qxdw.s[529]++, []);
            flushingWater = (cov_2f40l1qxdw.s[530]++, []);
            last12Months = (cov_2f40l1qxdw.s[531]++, getLast12Months1());
            cov_2f40l1qxdw.s[532]++;
            console.log(last12Months);
            previousMonths = (cov_2f40l1qxdw.s[533]++, getLast12Months());
            cov_2f40l1qxdw.s[534]++;
            console.log(previousMonths);
            cov_2f40l1qxdw.s[535]++;
            _iterator3 = _createForOfIteratorHelper(last12Months);
            _context51.prev = 11;
            _iterator3.s();
          case 13:
            if ((_step3 = _iterator3.n()).done) {
              _context51.next = 56;
              break;
            }
            month = _step3.value;
            scopeUrls = (cov_2f40l1qxdw.s[536]++, ["".concat(url, "/obix/histories/SqlServerDatabase/domesticYearly/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1"), "".concat(url, "/obix/histories/SqlServerDatabase/flushingYearly/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1")]);
            cov_2f40l1qxdw.s[537]++;
            i = 0;
          case 18:
            if (!(i < scopeUrls.length)) {
              _context51.next = 54;
              break;
            }
            cov_2f40l1qxdw.s[538]++;
            _context51.prev = 20;
            cov_2f40l1qxdw.s[539]++;
            _context51.next = 24;
            return fetch(scopeUrls[i]);
          case 24:
            response = _context51.sent;
            cov_2f40l1qxdw.s[540]++;
            if (response.ok) {
              _context51.next = 32;
              break;
            }
            cov_2f40l1qxdw.b[51][0]++;
            cov_2f40l1qxdw.s[541]++;
            throw new Error("HTTP error! Status: ".concat(response.status));
          case 32:
            cov_2f40l1qxdw.b[51][1]++;
          case 33:
            cov_2f40l1qxdw.s[542]++;
            _context51.next = 36;
            return response.text();
          case 36:
            text = _context51.sent;
            parser = (cov_2f40l1qxdw.s[543]++, new DOMParser());
            xml = (cov_2f40l1qxdw.s[544]++, parser.parseFromString(text, "application/xml"));
            records = (cov_2f40l1qxdw.s[545]++, xml.getElementsByTagName("list"));
            cov_2f40l1qxdw.s[546]++;
            _iterator4 = _createForOfIteratorHelper(records);
            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                record = _step4.value;
                // Fetch `abstime` and `real` values
                abstime = (cov_2f40l1qxdw.s[547]++, record.getElementsByTagName("abstime")[0]);
                realValue = (cov_2f40l1qxdw.s[548]++, record.getElementsByTagName("real")[0]); // Match the `abstime` with the corresponding `month.startDate`
                cov_2f40l1qxdw.s[549]++;
                if ((cov_2f40l1qxdw.b[53][0]++, abstime) && (cov_2f40l1qxdw.b[53][1]++, realValue)) {
                  cov_2f40l1qxdw.b[52][0]++;
                  abstimeDate = (cov_2f40l1qxdw.s[550]++, new Date(abstime));
                  formattedAbstime = (cov_2f40l1qxdw.s[551]++, "".concat(abstimeDate.getFullYear(), "-").concat(String(abstimeDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(abstimeDate.getDate()).padStart(2, '0')));
                  cov_2f40l1qxdw.s[552]++;
                  if (formattedAbstime === month.startDate) {
                    cov_2f40l1qxdw.b[54][0]++;
                    cov_2f40l1qxdw.s[553]++;
                    if (i === 0) {
                      cov_2f40l1qxdw.b[55][0]++;
                      cov_2f40l1qxdw.s[554]++;
                      domesticWater.push(parseFloat(realValue).toFixed(1));
                    } else {
                      cov_2f40l1qxdw.b[55][1]++;
                      cov_2f40l1qxdw.s[555]++;
                      if (i === 1) {
                        cov_2f40l1qxdw.b[56][0]++;
                        cov_2f40l1qxdw.s[556]++;
                        flushingWater.push(parseFloat(realValue).toFixed(1));
                      } else {
                        cov_2f40l1qxdw.b[56][1]++;
                      }
                    }
                  } else {
                    cov_2f40l1qxdw.b[54][1]++;
                  }
                } else {
                  cov_2f40l1qxdw.b[52][1]++;
                }
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
            _context51.next = 51;
            break;
          case 45:
            _context51.prev = 45;
            _context51.t0 = _context51["catch"](20);
            cov_2f40l1qxdw.s[557]++;
            console.error("Error fetching data for scope ".concat(i + 1, ":"), _context51.t0);
            cov_2f40l1qxdw.s[558]++;
            if (i === 0) {
              cov_2f40l1qxdw.b[57][0]++;
              cov_2f40l1qxdw.s[559]++;
              domesticWater.push(null); // Push null to maintain alignment
            } else {
              cov_2f40l1qxdw.b[57][1]++;
              cov_2f40l1qxdw.s[560]++;
              if (i === 1) {
                cov_2f40l1qxdw.b[58][0]++;
                cov_2f40l1qxdw.s[561]++;
                flushingWater.push(null); // Push null to maintain alignment
              } else {
                cov_2f40l1qxdw.b[58][1]++;
              }
            }
          case 51:
            i++;
            _context51.next = 18;
            break;
          case 54:
            _context51.next = 13;
            break;
          case 56:
            _context51.next = 61;
            break;
          case 58:
            _context51.prev = 58;
            _context51.t1 = _context51["catch"](11);
            _iterator3.e(_context51.t1);
          case 61:
            _context51.prev = 61;
            _iterator3.f();
            return _context51.finish(61);
          case 64:
            cov_2f40l1qxdw.s[562]++;
            am4core.ready(function () {
              cov_2f40l1qxdw.f[48]++;
              cov_2f40l1qxdw.s[563]++;
              // Themes begin
              am4core.useTheme(am4themes_animated);
              // Themes end

              // Create the chart
              var waterChart = (cov_2f40l1qxdw.s[564]++, am4core.create('chartdiv1', am4charts.XYChart));
              cov_2f40l1qxdw.s[565]++;
              waterChart.padding(0, 0, 0, 0);
              cov_2f40l1qxdw.s[566]++;
              waterChart.colors.step = 2;

              // Legend configuration
              cov_2f40l1qxdw.s[567]++;
              waterChart.legend = new am4charts.Legend();
              cov_2f40l1qxdw.s[568]++;
              waterChart.legend.position = 'top';
              cov_2f40l1qxdw.s[569]++;
              waterChart.legend.paddingBottom = 20;
              cov_2f40l1qxdw.s[570]++;
              waterChart.legend.labels.template.maxWidth = 95;
              cov_2f40l1qxdw.s[571]++;
              waterChart.legend.labels.template.fill = am4core.color('#000000');

              // X-axis configuration
              var xAxis = (cov_2f40l1qxdw.s[572]++, waterChart.xAxes.push(new am4charts.CategoryAxis()));
              cov_2f40l1qxdw.s[573]++;
              xAxis.dataFields.category = 'category';
              cov_2f40l1qxdw.s[574]++;
              xAxis.renderer.cellStartLocation = 0.2;
              cov_2f40l1qxdw.s[575]++;
              xAxis.renderer.cellEndLocation = 0.8;
              cov_2f40l1qxdw.s[576]++;
              xAxis.renderer.grid.template.location = 0;
              cov_2f40l1qxdw.s[577]++;
              xAxis.renderer.labels.template.fill = am4core.color('#000000');
              cov_2f40l1qxdw.s[578]++;
              xAxis.renderer.minGridDistance = 20;
              cov_2f40l1qxdw.s[579]++;
              xAxis.renderer.labels.template.rotation = 315;
              cov_2f40l1qxdw.s[580]++;
              xAxis.renderer.labels.template.horizontalCenter = "right"; // Align to right
              cov_2f40l1qxdw.s[581]++;
              xAxis.renderer.labels.template.verticalCenter = "middle"; // Center vertically
              cov_2f40l1qxdw.s[582]++;
              xAxis.renderer.labels.template.dy = -15;
              cov_2f40l1qxdw.s[583]++;
              xAxis.renderer.labels.template.fontSize = 10;
              cov_2f40l1qxdw.s[584]++;
              xAxis.renderer.labels.template.dx = 5;

              // Y-axis configuration
              var maxDomesticWater = (cov_2f40l1qxdw.s[585]++, Math.max.apply(Math, domesticWater));
              var maxFlushingWater = (cov_2f40l1qxdw.s[586]++, Math.max.apply(Math, flushingWater));
              var maxValue = (cov_2f40l1qxdw.s[587]++, Math.max(maxDomesticWater, maxFlushingWater));
              var yAxisMaxValue = (cov_2f40l1qxdw.s[588]++, Math.ceil(maxValue * 2));
              var yAxis = (cov_2f40l1qxdw.s[589]++, waterChart.yAxes.push(new am4charts.ValueAxis()));
              cov_2f40l1qxdw.s[590]++;
              yAxis.min = 0;
              cov_2f40l1qxdw.s[591]++;
              yAxis.max = yAxisMaxValue;
              cov_2f40l1qxdw.s[592]++;
              yAxis.renderer.labels.template.fill = am4core.color('#000000');
              // Create series function
              function createSeries(value, name, color) {
                cov_2f40l1qxdw.f[49]++;
                var series = (cov_2f40l1qxdw.s[593]++, waterChart.series.push(new am4charts.ColumnSeries()));
                cov_2f40l1qxdw.s[594]++;
                series.dataFields.valueY = value;
                cov_2f40l1qxdw.s[595]++;
                series.dataFields.categoryX = "category";
                cov_2f40l1qxdw.s[596]++;
                series.name = name;
                cov_2f40l1qxdw.s[597]++;
                series.columns.template.fill = am4core.color(color); // Fill color
                cov_2f40l1qxdw.s[598]++;
                series.columns.template.stroke = am4core.color(color); // Stroke color

                // Customize tooltip
                cov_2f40l1qxdw.s[599]++;
                series.tooltipText = '{name}: {valueY}';
                cov_2f40l1qxdw.s[600]++;
                series.tooltip.background.fill = am4core.color(color); // Set tooltip background color to match series color
                cov_2f40l1qxdw.s[601]++;
                series.tooltip.label.fill = am4core.color('#ffffff'); // Tooltip text color
                cov_2f40l1qxdw.s[602]++;
                series.tooltip.pointerOrientation = 'vertical'; // Tooltip orientation
                cov_2f40l1qxdw.s[603]++;
                series.tooltip.getFillFromObject = false; // Ensure tooltip color is set explicitly
                cov_2f40l1qxdw.s[604]++;
                series.tooltip.getStrokeFromObject = false; // Ensure tooltip border color is set explicitly
                cov_2f40l1qxdw.s[605]++;
                series.stacked = true; // Enable stacking
                cov_2f40l1qxdw.s[606]++;
                return series;
              }

              // Generate the chart data using domesticWater and flushingWater for the last 12 months
              cov_2f40l1qxdw.s[607]++;
              waterChart.data = previousMonths.map(function (month, index) {
                cov_2f40l1qxdw.f[50]++;
                cov_2f40l1qxdw.s[608]++;
                return {
                  category: month,
                  domesticYearly: (cov_2f40l1qxdw.b[59][0]++, domesticWater[index]) || (cov_2f40l1qxdw.b[59][1]++, 0),
                  // Fallback to 0 if no data
                  flushingYearly: (cov_2f40l1qxdw.b[60][0]++, flushingWater[index]) || (cov_2f40l1qxdw.b[60][1]++, 0) // Fallback to 0 if no data
                };
              });

              // Create series for Scope 1 and Scope 2 data
              cov_2f40l1qxdw.s[609]++;
              createSeries('domesticYearly', 'Domestic', '#C65BCF'); // Scope 1 data
              cov_2f40l1qxdw.s[610]++;
              createSeries('flushingYearly', 'Flushing', '#39A7FF'); // Scope 2 data

              // Add total value at the top of each bar for the last series only
              cov_2f40l1qxdw.s[611]++;
              waterChart.events.on("datavalidated", function () {
                cov_2f40l1qxdw.f[51]++;
                var lastSeries = (cov_2f40l1qxdw.s[612]++, waterChart.series.getIndex(waterChart.series.length - 1)); // Get the last series in the stack
                cov_2f40l1qxdw.s[613]++;
                lastSeries.columns.each(function (column) {
                  cov_2f40l1qxdw.f[52]++;
                  var total = (cov_2f40l1qxdw.s[614]++, 0);

                  // Loop through all stacked series to calculate the total
                  cov_2f40l1qxdw.s[615]++;
                  waterChart.series.each(function (stackedSeries) {
                    cov_2f40l1qxdw.f[53]++;
                    cov_2f40l1qxdw.s[616]++;
                    total += (cov_2f40l1qxdw.b[61][0]++, stackedSeries.dataItems.getIndex(column.dataItem.index).valueY) || (cov_2f40l1qxdw.b[61][1]++, 0); // Safeguard null values
                  });

                  // Add a label at the top of the stack (for the last series only)
                  var label = (cov_2f40l1qxdw.s[617]++, column.createChild(am4core.Label));
                  cov_2f40l1qxdw.s[618]++;
                  label.text = total.toFixed(1); // Format the total to 2 decimal places
                  cov_2f40l1qxdw.s[619]++;
                  label.fill = am4core.color('#000000'); // Label color
                  cov_2f40l1qxdw.s[620]++;
                  label.fontSize = 12;
                  cov_2f40l1qxdw.s[621]++;
                  label.dy = -20; // Position above the bar
                  cov_2f40l1qxdw.s[622]++;
                  label.align = "center";
                });
              });

              // Configure cursor
              var cursor = (cov_2f40l1qxdw.s[623]++, new am4charts.XYCursor());
              cov_2f40l1qxdw.s[624]++;
              waterChart.cursor = cursor;
              cov_2f40l1qxdw.s[625]++;
              waterChart.logo.disabled = true;
            });
            // end am4core.ready()
          case 66:
          case "end":
            return _context51.stop();
        }
      }, _callee47, null, [[11, 58, 61, 64], [20, 45]]);
    }));
    return _showClusteredBarChart.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[626]++;
  $("#startDateWater, #endDateWater").on("change", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          cov_2f40l1qxdw.f[54]++;
          cov_2f40l1qxdw.s[627]++;
          _context5.next = 4;
          return disposeChartWater(daterangeWater);
        case 4:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  })));
  cov_2f40l1qxdw.s[628]++;
  $("#sav_monthly_water").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          cov_2f40l1qxdw.f[55]++;
          cov_2f40l1qxdw.s[629]++;
          clearDateInputsWater();
          cov_2f40l1qxdw.s[630]++;
          _context6.next = 6;
          return disposeChartWater(lineChartMonthlyWater);
        case 6:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  })));
  cov_2f40l1qxdw.s[631]++;
  $("#sav_daily_water").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          cov_2f40l1qxdw.f[56]++;
          cov_2f40l1qxdw.s[632]++;
          clearDateInputsWater();
          cov_2f40l1qxdw.s[633]++;
          _context7.next = 6;
          return disposeChartWater(pieChart1);
        case 6:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  })));
  cov_2f40l1qxdw.s[634]++;
  $("#sav_yearly_water").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          cov_2f40l1qxdw.f[57]++;
          cov_2f40l1qxdw.s[635]++;
          clearDateInputsWater();
          cov_2f40l1qxdw.s[636]++;
          _context8.next = 6;
          return disposeChartWater(showClusteredBarChart1);
        case 6:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  })));
  /* water consumption end */

  /* power consumption start */
  var powerChart;
  function disposeChartPower(_x3) {
    return _disposeChartPower.apply(this, arguments);
  } // async function lineChart4() {
  //     let currentDate = new Date();
  //     currentDate.setDate(currentDate.getDate());
  //     // Format the date (optional)
  //     let previousDate = currentDate.toISOString().split('T')[0];
  //     //console.log("previos day " + previousDate);
  //     const response = await fetch(`${url}/obix/histories/SqlServerDatabase/powerDaily/~historyQuery?start=${previousDate}T00:00:00.000+05:30&end=${previousDate}T22:00:00.000+05:30`);
  //     //console.log(response);
  //     const text = await response.text();
  //     // Parse the XML data
  //     const parser = new DOMParser();
  //     const xmlDoc = parser.parseFromString(text, "text/xml");
  //     // Get all <obj> elements that contain timestamp and value
  //     const objElements = xmlDoc.getElementsByTagName("obj");
  //     // Initialize arrays to store time and value
  //     let times = [];
  //     let values = [];
  //     // Iterate through the <obj> elements to extract the time and value
  //     for (let i = 1; i < objElements.length; i++) {
  //         const obj = objElements[i];
  //         const timestampElement = obj.getElementsByTagName("abstime")[0];
  //         const valueElement = obj.getElementsByTagName("real")[0];
  //         // Check if both timestamp and value exist and are not null
  //         if (timestampElement && valueElement) {
  //             const timestamp = timestampElement.getAttribute("val");
  //             const value = valueElement.getAttribute("val");
  //             if (timestamp && value) {
  //                 // Extract only the time (HH:mm) from the timestamp
  //                 const time = timestamp.split("T")[1]?.split(":").slice(0, 2).join(":");
  //                 // Ensure time is valid and add to arrays
  //                 if (time) {
  //                     times.push(time);
  //                     values.push(parseFloat(value));
  //                 }
  //             }
  //         }
  //     }
  //     am4core.ready(function () {
  //         // Themes begin
  //         am4core.useTheme(am4themes_animated);
  //         // Themes end
  //         // Create chart instance
  //         powerChart = am4core.create("chartdiv2", am4charts.XYChart);
  //         // Prepare data array based on extracted times and values
  //         // powerChart.data = times.map((time, index) => ({
  //         //     "time": time, // Time in HH:mm format
  //         //     "value": values[index] // Corresponding value
  //         // }));
  //         powerChart.data = [
  //             { "time": "00:00", "value": 50 },
  //             { "time": "02:00", "value": 55 },
  //             { "time": "04:00", "value": 60 },
  //             { "time": "06:00", "value": 70 },
  //             { "time": "08:00", "value": 65 },
  //             { "time": "10:00", "value": 75 },
  //             { "time": "12:00", "value": 80 },
  //             { "time": "14:00", "value": 85 },
  //             { "time": "16:00", "value": 90 },
  //             { "time": "18:00", "value": 95 },
  //             { "time": "20:00", "value": 100 },
  //             { "time": "22:00", "value": 110 }
  //           ];
  //         // Create axes
  //         var categoryAxis = powerChart.xAxes.push(new am4charts.CategoryAxis());
  //         categoryAxis.dataFields.category = "time";
  //         categoryAxis.renderer.labels.template.fill = am4core.color("#000000"); // Set x-axis labels color
  //         categoryAxis.title.fill = am4core.color("#000000"); // Set x-axis title color
  //         categoryAxis.renderer.labels.template.rotation = 315; // Set rotation
  //         categoryAxis.renderer.labels.template.horizontalCenter = "right"; // Align to the right
  //         categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center vertically
  //         categoryAxis.renderer.minGridDistance = 1; // Ensure all categories are displayed
  //          categoryAxis.renderer.labels.template.dy = -15;
  //          categoryAxis.renderer.labels.template.fontSize = 10;
  //        categoryAxis.renderer.labels.template.dx = 10;
  //         var valueAxis = powerChart.yAxes.push(new am4charts.ValueAxis());
  //         valueAxis.renderer.labels.template.fill = am4core.color("#000000"); // Set y-axis labels color
  //         valueAxis.title.fill = am4core.color("#000000"); // Set y-axis title color
  //         // Create series
  //         var lineSeries = powerChart.series.push(new am4charts.LineSeries());
  //         lineSeries.dataFields.valueY = "value";
  //         lineSeries.dataFields.categoryX = "time";
  //         lineSeries.strokeWidth = 2;
  //         lineSeries.stroke = am4core.color("#FC4100");
  //         // Add circle bullet
  //         // var bullet = lineSeries.bullets.push(new am4charts.CircleBullet());
  //         // bullet.circle.radius = 3; // Size of the bullet point
  //         // bullet.circle.strokeWidth = 0.5;
  //         // bullet.circle.fill = am4core.color("#fc030b"); // Bullet fill color
  //         // bullet.circle.stroke = am4core.color("#FC4100"); // Bullet stroke color
  //         // // Set the bullet's color to match the line's color
  //         // bullet.adapter.add("fill", function (fill, target) {
  //         //     return target.stroke;
  //         // });
  //         // Configure cursor
  //         var cursor = new am4charts.XYCursor();
  //         lineSeries.tooltipText = "Power: [bold]{valueY}[/]";
  //         lineSeries.tooltip.getFillFromObject = false; // Disable tooltip fill from series
  //         lineSeries.tooltip.background.fill = am4core.color("#FC4100"); // Set tooltip background color
  //         lineSeries.tooltip.label.fill = am4core.color("#ffffff"); // Set tooltip label color
  //         lineSeries.tooltip.pointerOrientation = "horizontal"; // Set tooltip orientation
  //         // Enable zooming and panning
  //         powerChart.scrollbarX = new am4core.Scrollbar();
  //         powerChart.scrollbarX.disabled = true; // Disable scrollbar (we don't need it)
  //         powerChart.zoomOutButton.disabled = false; // Allow the user to zoom out using a button
  //         // Enable zooming on both axes
  //         powerChart.xAxes.getIndex(0).renderer.minGridDistance = 50; // Optional: increase this to reduce the zoom level
  //         powerChart.cursor = new am4charts.XYCursor();
  //         powerChart.cursor.behavior = "zoomXY"; // Enable zoom on both axes
  //         powerChart.cursor = cursor; // Assign cursor to chart
  //         powerChart.logo.disabled = true;
  //     });
  // }
  function _disposeChartPower() {
    _disposeChartPower = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee48(newChartFunction) {
      return _regeneratorRuntime().wrap(function _callee48$(_context52) {
        while (1) switch (_context52.prev = _context52.next) {
          case 0:
            cov_2f40l1qxdw.f[58]++;
            cov_2f40l1qxdw.s[637]++;
            // Destroy the existing chart if it exists
            if (powerChart) {
              cov_2f40l1qxdw.b[62][0]++;
              cov_2f40l1qxdw.s[638]++;
              if (powerChart instanceof ApexCharts) {
                cov_2f40l1qxdw.b[63][0]++;
                cov_2f40l1qxdw.s[639]++;
                powerChart.destroy(); // Dispose the existing chart
              } else {
                cov_2f40l1qxdw.b[63][1]++;
                cov_2f40l1qxdw.s[640]++;
                powerChart.dispose(); // Dispose the existing am4charts instance
              }
            } else {
              cov_2f40l1qxdw.b[62][1]++;
            }
            cov_2f40l1qxdw.s[641]++;
            _context52.next = 6;
            return newChartFunction();
          case 6:
          case "end":
            return _context52.stop();
        }
      }, _callee48);
    }));
    return _disposeChartPower.apply(this, arguments);
  }
  function lineChart4() {
    return _lineChart.apply(this, arguments);
  }
  function _lineChart() {
    _lineChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee49() {
      var response, text, parser, xmlDoc, objElements, times, values, i, obj, timestampElement, valueElement, timestamp, value, time;
      return _regeneratorRuntime().wrap(function _callee49$(_context53) {
        while (1) switch (_context53.prev = _context53.next) {
          case 0:
            cov_2f40l1qxdw.f[59]++;
            cov_2f40l1qxdw.s[642]++;
            _context53.next = 4;
            return fetch("".concat(url, "/obix/histories/Barclays_Sup/TotalPowerConsumption_User/~historyQuery?start=").concat(formattedDate, "T00:00:00.000+05:30&end=").concat(formattedDate, "T23:59:59.000+05:30"));
          case 4:
            response = _context53.sent;
            cov_2f40l1qxdw.s[643]++;
            console.log(response);
            cov_2f40l1qxdw.s[644]++;
            _context53.next = 10;
            return response.text();
          case 10:
            text = _context53.sent;
            // Parse the XML data
            parser = (cov_2f40l1qxdw.s[645]++, new DOMParser());
            xmlDoc = (cov_2f40l1qxdw.s[646]++, parser.parseFromString(text, "text/xml")); // // Get all <obj> elements that contain timestamp and value
            objElements = (cov_2f40l1qxdw.s[647]++, xmlDoc.getElementsByTagName("obj")); // Initialize arrays to store time and value
            times = (cov_2f40l1qxdw.s[648]++, []);
            values = (cov_2f40l1qxdw.s[649]++, []); // Iterate through the <obj> elements to extract the time and value
            cov_2f40l1qxdw.s[650]++;
            for (i = 1; i < objElements.length; i++) {
              obj = (cov_2f40l1qxdw.s[651]++, objElements[i]);
              timestampElement = (cov_2f40l1qxdw.s[652]++, obj.getElementsByTagName("abstime")[0]);
              valueElement = (cov_2f40l1qxdw.s[653]++, obj.getElementsByTagName("real")[0]); // Check if both timestamp and value exist and are not null
              cov_2f40l1qxdw.s[654]++;
              if ((cov_2f40l1qxdw.b[65][0]++, timestampElement) && (cov_2f40l1qxdw.b[65][1]++, valueElement)) {
                cov_2f40l1qxdw.b[64][0]++;
                timestamp = (cov_2f40l1qxdw.s[655]++, timestampElement.getAttribute("val"));
                value = (cov_2f40l1qxdw.s[656]++, valueElement.getAttribute("val"));
                cov_2f40l1qxdw.s[657]++;
                if ((cov_2f40l1qxdw.b[67][0]++, timestamp) && (cov_2f40l1qxdw.b[67][1]++, value)) {
                  cov_2f40l1qxdw.b[66][0]++;
                  // Extract only the time (HH:mm) from the timestamp
                  time = (cov_2f40l1qxdw.s[658]++, timestamp.split("T")[1].split(":").slice(0, 2).join(":")); // Ensure time is valid and add to arrays
                  cov_2f40l1qxdw.s[659]++;
                  if (time) {
                    cov_2f40l1qxdw.b[68][0]++;
                    cov_2f40l1qxdw.s[660]++;
                    times.push(time);
                    cov_2f40l1qxdw.s[661]++;
                    values.push(parseFloat(value));
                  } else {
                    cov_2f40l1qxdw.b[68][1]++;
                  }
                } else {
                  cov_2f40l1qxdw.b[66][1]++;
                }
              } else {
                cov_2f40l1qxdw.b[64][1]++;
              }
            }
            // times = [
            //     "00:00", "02:00", "04:00", "06:00", "08:00", "10:00", "12:00", "14:00", "16:00", "18:00", "20:00", "22:00"
            // ];
            // values = [
            //     50, 55, 60, 70, 65, 75, 80, 85, 90, 95, 100, 110
            // ];
            cov_2f40l1qxdw.s[662]++;
            am4core.ready(function () {
              cov_2f40l1qxdw.f[60]++;
              cov_2f40l1qxdw.s[663]++;
              // Themes begin
              am4core.useTheme(am4themes_animated);
              // Themes end

              // Create chart instance
              cov_2f40l1qxdw.s[664]++;
              powerChart = am4core.create("chartdiv2", am4charts.XYChart);

              // Prepare data array based on extracted times and values
              cov_2f40l1qxdw.s[665]++;
              powerChart.data = times.map(function (time, index) {
                cov_2f40l1qxdw.f[61]++;
                cov_2f40l1qxdw.s[666]++;
                return {
                  "time": time,
                  // Time in HH:mm format
                  "value": values[index] // Corresponding value
                };
              });

              // Create axes
              var categoryAxis = (cov_2f40l1qxdw.s[667]++, powerChart.xAxes.push(new am4charts.CategoryAxis()));
              cov_2f40l1qxdw.s[668]++;
              categoryAxis.dataFields.category = "time";
              cov_2f40l1qxdw.s[669]++;
              categoryAxis.renderer.labels.template.fill = am4core.color("#000000"); // Set x-axis labels color
              cov_2f40l1qxdw.s[670]++;
              categoryAxis.title.fill = am4core.color("#000000"); // Set x-axis title color
              cov_2f40l1qxdw.s[671]++;
              categoryAxis.renderer.labels.template.rotation = 315; // Set rotation
              cov_2f40l1qxdw.s[672]++;
              categoryAxis.renderer.labels.template.horizontalCenter = "right"; // Align to the right
              cov_2f40l1qxdw.s[673]++;
              categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center vertically
              cov_2f40l1qxdw.s[674]++;
              categoryAxis.renderer.minGridDistance = 1; // Ensure all categories are displayed
              cov_2f40l1qxdw.s[675]++;
              categoryAxis.renderer.labels.template.dy = -15;
              cov_2f40l1qxdw.s[676]++;
              categoryAxis.renderer.labels.template.fontSize = 10;
              cov_2f40l1qxdw.s[677]++;
              categoryAxis.renderer.labels.template.dx = 10;
              var valueAxis = (cov_2f40l1qxdw.s[678]++, powerChart.yAxes.push(new am4charts.ValueAxis()));
              cov_2f40l1qxdw.s[679]++;
              valueAxis.renderer.labels.template.fill = am4core.color("#000000"); // Set y-axis labels color
              cov_2f40l1qxdw.s[680]++;
              valueAxis.title.fill = am4core.color("#000000"); // Set y-axis title color

              // Create series
              var lineSeries = (cov_2f40l1qxdw.s[681]++, powerChart.series.push(new am4charts.LineSeries()));
              cov_2f40l1qxdw.s[682]++;
              lineSeries.dataFields.valueY = "value";
              cov_2f40l1qxdw.s[683]++;
              lineSeries.dataFields.categoryX = "time";
              cov_2f40l1qxdw.s[684]++;
              lineSeries.strokeWidth = 2;
              cov_2f40l1qxdw.s[685]++;
              lineSeries.stroke = am4core.color("#FC4100");

              // Add circle bullet
              // var bullet = lineSeries.bullets.push(new am4charts.CircleBullet());
              // bullet.circle.radius = 3; // Size of the bullet point
              // bullet.circle.strokeWidth = 0.5;
              // bullet.circle.fill = am4core.color("#fc030b"); // Bullet fill color
              // bullet.circle.stroke = am4core.color("#FC4100"); // Bullet stroke color

              // // Set the bullet's color to match the line's color
              // bullet.adapter.add("fill", function (fill, target) {
              //     return target.stroke;
              // });

              // Configure cursor
              var cursor = (cov_2f40l1qxdw.s[686]++, new am4charts.XYCursor());
              cov_2f40l1qxdw.s[687]++;
              lineSeries.tooltipText = "Power: [bold]{valueY}[/]";
              cov_2f40l1qxdw.s[688]++;
              lineSeries.tooltip.getFillFromObject = false; // Disable tooltip fill from series
              cov_2f40l1qxdw.s[689]++;
              lineSeries.tooltip.background.fill = am4core.color("#FC4100"); // Set tooltip background color
              cov_2f40l1qxdw.s[690]++;
              lineSeries.tooltip.label.fill = am4core.color("#ffffff"); // Set tooltip label color
              cov_2f40l1qxdw.s[691]++;
              lineSeries.tooltip.pointerOrientation = "horizontal"; // Set tooltip orientation

              // Enable zooming and panning
              cov_2f40l1qxdw.s[692]++;
              powerChart.scrollbarX = new am4core.Scrollbar();
              cov_2f40l1qxdw.s[693]++;
              powerChart.scrollbarX.disabled = true; // Disable scrollbar (we don't need it)
              cov_2f40l1qxdw.s[694]++;
              powerChart.zoomOutButton.disabled = false; // Allow the user to zoom out using a button

              // Enable zooming on both axes
              cov_2f40l1qxdw.s[695]++;
              powerChart.xAxes.getIndex(0).renderer.minGridDistance = 50; // Optional: increase this to reduce the zoom level
              cov_2f40l1qxdw.s[696]++;
              powerChart.cursor = new am4charts.XYCursor();
              cov_2f40l1qxdw.s[697]++;
              powerChart.cursor.behavior = "zoomXY"; // Enable zoom on both axes
              cov_2f40l1qxdw.s[698]++;
              powerChart.cursor = cursor; // Assign cursor to chart
              cov_2f40l1qxdw.s[699]++;
              powerChart.logo.disabled = true;
            });
          case 20:
          case "end":
            return _context53.stop();
        }
      }, _callee49);
    }));
    return _lineChart.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[700]++;
  disposeChartPower(lineChart4);
  function barChart() {
    return _barChart.apply(this, arguments);
  }
  function _barChart() {
    _barChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee51() {
      return _regeneratorRuntime().wrap(function _callee51$(_context56) {
        while (1) switch (_context56.prev = _context56.next) {
          case 0:
            cov_2f40l1qxdw.f[62]++;
            cov_2f40l1qxdw.s[701]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee50() {
              var startDateValue, endDateValue, isValid, waterValues, urlToFetch, response, text, parser, xmlDoc, objs, _loop5, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee50$(_context55) {
                while (1) switch (_context55.prev = _context55.next) {
                  case 0:
                    createSeries = function _createSeries5(valueField, name, color) {
                      cov_2f40l1qxdw.f[66]++;
                      var series = (cov_2f40l1qxdw.s[753]++, powerChart.series.push(new am4charts.ColumnSeries()));
                      cov_2f40l1qxdw.s[754]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[755]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[756]++;
                      series.name = name;
                      //series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[757]++;
                      series.tensionX = 0.77;
                      //series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[758]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[759]++;
                      bullet.tooltipText = "{valueY}";
                      cov_2f40l1qxdw.s[760]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[67]++;
                        cov_2f40l1qxdw.s[761]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[75][0]++;
                          cov_2f40l1qxdw.s[762]++;
                          return am4core.color("#FF0000"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[75][1]++;
                        }
                        cov_2f40l1qxdw.s[763]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[764]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[63]++;
                    startDateValue = (cov_2f40l1qxdw.s[702]++, $("#startDatePower").val());
                    endDateValue = (cov_2f40l1qxdw.s[703]++, $("#endDatePower").val());
                    cov_2f40l1qxdw.s[704]++;
                    _context55.next = 7;
                    return validateDateRange(startDateValue, endDateValue);
                  case 7:
                    isValid = _context55.sent;
                    cov_2f40l1qxdw.s[705]++;
                    if (isValid) {
                      _context55.next = 15;
                      break;
                    }
                    cov_2f40l1qxdw.b[69][0]++;
                    cov_2f40l1qxdw.s[706]++;
                    return _context55.abrupt("return");
                  case 15:
                    cov_2f40l1qxdw.b[69][1]++;
                  case 16:
                    waterValues = (cov_2f40l1qxdw.s[707]++, []); // const url = "https://localhost";
                    // Fetch data asynchronously for each scope
                    urlToFetch = (cov_2f40l1qxdw.s[708]++, "".concat(url, "/obix/histories/Barclays_Sup/Total$20Power$20Consumption$20in$20Kwh_Daily/~historyQuery?start=").concat(startDateValue, "T23:59:59.000+05:30&end=").concat(endDateValue, "T23:59:59.000+05:30"));
                    cov_2f40l1qxdw.s[709]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[710]++;
                    _context55.prev = 21;
                    cov_2f40l1qxdw.s[711]++;
                    _context55.next = 25;
                    return fetch(urlToFetch);
                  case 25:
                    response = _context55.sent;
                    cov_2f40l1qxdw.s[712]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[713]++;
                    _context55.next = 31;
                    return response.text();
                  case 31:
                    text = _context55.sent;
                    // Parse the XML data
                    parser = (cov_2f40l1qxdw.s[714]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[715]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[716]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[717]++;
                    _loop5 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop5() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate5, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop5$(_context54) {
                        while (1) switch (_context54.prev = _context54.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[718]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[719]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[720]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[721]++;
                            if ((cov_2f40l1qxdw.b[71][0]++, abstime) && (cov_2f40l1qxdw.b[71][1]++, real)) {
                              cov_2f40l1qxdw.b[70][0]++;
                              dateText = (cov_2f40l1qxdw.s[722]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[723]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[724]++;
                              if ((cov_2f40l1qxdw.b[73][0]++, valueText) && (cov_2f40l1qxdw.b[73][1]++, dateText)) {
                                cov_2f40l1qxdw.b[72][0]++;
                                value = (cov_2f40l1qxdw.s[725]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[726]++, new Date(dateText));
                                _formattedDate5 = (cov_2f40l1qxdw.s[727]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[728]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[729]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[64]++;
                                  cov_2f40l1qxdw.s[730]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[731]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[74][0]++;
                                  cov_2f40l1qxdw.s[732]++;
                                  // Update the existing entry's value
                                  existingEntry.value = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[74][1]++;
                                  cov_2f40l1qxdw.s[733]++;
                                  // Add a new entry with date and value
                                  waterValues.push({
                                    date: date,
                                    value: parseFloat(value)
                                  });
                                }
                              } else {
                                cov_2f40l1qxdw.b[72][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[70][1]++;
                            }
                          case 5:
                          case "end":
                            return _context54.stop();
                        }
                      }, _loop5);
                    });
                    i = 0;
                  case 38:
                    if (!(i < objs.length)) {
                      _context55.next = 43;
                      break;
                    }
                    return _context55.delegateYield(_loop5(), "t0", 40);
                  case 40:
                    i++;
                    _context55.next = 38;
                    break;
                  case 43:
                    _context55.next = 49;
                    break;
                  case 45:
                    _context55.prev = 45;
                    _context55.t1 = _context55["catch"](21);
                    cov_2f40l1qxdw.s[734]++;
                    console.error("Error fetching data for ");
                  case 49:
                    cov_2f40l1qxdw.s[735]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    cov_2f40l1qxdw.s[736]++;
                    powerChart = am4core.create("chartdiv2", am4charts.XYChart);
                    cov_2f40l1qxdw.s[737]++;
                    powerChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[738]++;
                    powerChart.data = waterValues;
                    cov_2f40l1qxdw.s[739]++;
                    console.log(powerChart.data);
                    cov_2f40l1qxdw.s[740]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[65]++;
                      cov_2f40l1qxdw.s[741]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[742]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[743]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[744]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[745]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[746]++, powerChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[747]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[748]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[749]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[750]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[751]++, powerChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[752]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[765]++;
                    powerChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[766]++;
                    powerChart.legend.position = "top";
                    cov_2f40l1qxdw.s[767]++;
                    powerChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[768]++;
                    powerChart.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[769]++;
                    createSeries("value", "Power", am4core.color("#3AA6B9"));

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[770]++;
                    powerChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[771]++;
                    powerChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[772]++;
                    powerChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[773]++;
                    powerChart.logo.disabled = true;
                  case 91:
                  case "end":
                    return _context55.stop();
                }
              }, _callee50, null, [[21, 45]]);
            })));
          case 3:
          case "end":
            return _context56.stop();
        }
      }, _callee51);
    }));
    return _barChart.apply(this, arguments);
  }
  function lineChartMonthlyPower() {
    return _lineChartMonthlyPower.apply(this, arguments);
  }
  function _lineChartMonthlyPower() {
    _lineChartMonthlyPower = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee53() {
      return _regeneratorRuntime().wrap(function _callee53$(_context59) {
        while (1) switch (_context59.prev = _context59.next) {
          case 0:
            cov_2f40l1qxdw.f[68]++;
            cov_2f40l1qxdw.s[774]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee52() {
              var today, currentMonth, startDate, endDate, startISO, endISO, waterValues, urlToFetch, response, text, parser, xmlDoc, objs, _loop6, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee52$(_context58) {
                while (1) switch (_context58.prev = _context58.next) {
                  case 0:
                    createSeries = function _createSeries6(valueField, name, color) {
                      cov_2f40l1qxdw.f[72]++;
                      var series = (cov_2f40l1qxdw.s[827]++, powerChart.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[828]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[829]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[830]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[831]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[832]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[833]++;
                      series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[834]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[835]++;
                      bullet.tooltipText = "{valueY}";
                      cov_2f40l1qxdw.s[836]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[73]++;
                        cov_2f40l1qxdw.s[837]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[81][0]++;
                          cov_2f40l1qxdw.s[838]++;
                          return am4core.color("#FF0000"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[81][1]++;
                        }
                        cov_2f40l1qxdw.s[839]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[840]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[69]++;
                    // Get the current date
                    today = (cov_2f40l1qxdw.s[775]++, new Date());
                    currentMonth = (cov_2f40l1qxdw.s[776]++, today.getMonth()); // Set startDate and endDate to the previous month
                    startDate = (cov_2f40l1qxdw.s[777]++, new Date(today.getFullYear(), currentMonth - 1, 1));
                    endDate = (cov_2f40l1qxdw.s[778]++, new Date(today.getFullYear(), currentMonth, 0));
                    startISO = (cov_2f40l1qxdw.s[779]++, "".concat(startDate.getFullYear(), "-").concat(String(startDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(startDate.getDate()).padStart(2, '0')));
                    endISO = (cov_2f40l1qxdw.s[780]++, "".concat(endDate.getFullYear(), "-").concat(String(endDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(endDate.getDate()).padStart(2, '0')));
                    waterValues = (cov_2f40l1qxdw.s[781]++, []); // const url = "https://localhost";
                    // Fetch data asynchronously for each scope
                    urlToFetch = (cov_2f40l1qxdw.s[782]++, "".concat(url, "/obix/histories/Barclays_Sup/Total$20Power$20Consumption$20in$20Kwh_Yearly/~historyQuery?start=").concat(startISO, "T23:59:59.000+05:30&end=").concat(endISO, "T23:59:59.000+05:30"));
                    cov_2f40l1qxdw.s[783]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[784]++;
                    _context58.prev = 13;
                    cov_2f40l1qxdw.s[785]++;
                    _context58.next = 17;
                    return fetch(urlToFetch);
                  case 17:
                    response = _context58.sent;
                    cov_2f40l1qxdw.s[786]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[787]++;
                    _context58.next = 23;
                    return response.text();
                  case 23:
                    text = _context58.sent;
                    // Parse the XML data
                    parser = (cov_2f40l1qxdw.s[788]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[789]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[790]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[791]++;
                    _loop6 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop6() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate6, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop6$(_context57) {
                        while (1) switch (_context57.prev = _context57.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[792]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[793]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[794]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[795]++;
                            if ((cov_2f40l1qxdw.b[77][0]++, abstime) && (cov_2f40l1qxdw.b[77][1]++, real)) {
                              cov_2f40l1qxdw.b[76][0]++;
                              dateText = (cov_2f40l1qxdw.s[796]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[797]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[798]++;
                              if ((cov_2f40l1qxdw.b[79][0]++, valueText) && (cov_2f40l1qxdw.b[79][1]++, dateText)) {
                                cov_2f40l1qxdw.b[78][0]++;
                                value = (cov_2f40l1qxdw.s[799]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[800]++, new Date(dateText));
                                _formattedDate6 = (cov_2f40l1qxdw.s[801]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[802]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[803]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[70]++;
                                  cov_2f40l1qxdw.s[804]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[805]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[80][0]++;
                                  cov_2f40l1qxdw.s[806]++;
                                  // Update the existing entry's value
                                  existingEntry.value = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[80][1]++;
                                  cov_2f40l1qxdw.s[807]++;
                                  // Add a new entry with date and value
                                  waterValues.push({
                                    date: date,
                                    value: parseFloat(value)
                                  });
                                }
                              } else {
                                cov_2f40l1qxdw.b[78][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[76][1]++;
                            }
                          case 5:
                          case "end":
                            return _context57.stop();
                        }
                      }, _loop6);
                    });
                    i = 0;
                  case 30:
                    if (!(i < objs.length)) {
                      _context58.next = 35;
                      break;
                    }
                    return _context58.delegateYield(_loop6(), "t0", 32);
                  case 32:
                    i++;
                    _context58.next = 30;
                    break;
                  case 35:
                    _context58.next = 41;
                    break;
                  case 37:
                    _context58.prev = 37;
                    _context58.t1 = _context58["catch"](13);
                    cov_2f40l1qxdw.s[808]++;
                    console.error("Error fetching data for ");
                  case 41:
                    cov_2f40l1qxdw.s[809]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    cov_2f40l1qxdw.s[810]++;
                    powerChart = am4core.create("chartdiv2", am4charts.XYChart);
                    cov_2f40l1qxdw.s[811]++;
                    powerChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[812]++;
                    powerChart.data = waterValues;
                    cov_2f40l1qxdw.s[813]++;
                    console.log(powerChart.data);
                    cov_2f40l1qxdw.s[814]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[71]++;
                      cov_2f40l1qxdw.s[815]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[816]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[817]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[818]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[819]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[820]++, powerChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[821]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[822]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[823]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[824]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[825]++, powerChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[826]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[841]++;
                    powerChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[842]++;
                    powerChart.legend.position = "top";
                    cov_2f40l1qxdw.s[843]++;
                    powerChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[844]++;
                    powerChart.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[845]++;
                    createSeries("value", "Power", am4core.color("#3AA6B9"));

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[846]++;
                    powerChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[847]++;
                    powerChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[848]++;
                    powerChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[849]++;
                    powerChart.logo.disabled = true;
                  case 83:
                  case "end":
                    return _context58.stop();
                }
              }, _callee52, null, [[13, 37]]);
            })));
          case 3:
          case "end":
            return _context59.stop();
        }
      }, _callee53);
    }));
    return _lineChartMonthlyPower.apply(this, arguments);
  }
  function lineChart3() {
    return _lineChart2.apply(this, arguments);
  }
  function _lineChart2() {
    _lineChart2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee55() {
      return _regeneratorRuntime().wrap(function _callee55$(_context61) {
        while (1) switch (_context61.prev = _context61.next) {
          case 0:
            cov_2f40l1qxdw.f[74]++;
            cov_2f40l1qxdw.s[850]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee54() {
              var powerChart, last12Months, urls, chartData, _iterator5, _step5, _step5$value, index, scopeUrl, response, text, parser, xml, records, i, timestamp, value, date, month, months, year, formattedMonth, categoryAxis, valueAxis, lineSeries, bullet, cursor;
              return _regeneratorRuntime().wrap(function _callee54$(_context60) {
                while (1) switch (_context60.prev = _context60.next) {
                  case 0:
                    cov_2f40l1qxdw.f[75]++;
                    cov_2f40l1qxdw.s[851]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    powerChart = (cov_2f40l1qxdw.s[852]++, am4core.create("chartdiv2", am4charts.XYChart));
                    cov_2f40l1qxdw.s[853]++;
                    powerChart.logo.disabled = true;

                    // Fetch month names for last 12 months using the getLast12Months() function
                    last12Months = (cov_2f40l1qxdw.s[854]++, getLast12Months1()); // Assuming this returns an array with month data for the URLs
                    cov_2f40l1qxdw.s[855]++;
                    console.log("Last 12 Months (from getLast12Months1):", last12Months);

                    // Define the URLs for each month
                    urls = (cov_2f40l1qxdw.s[856]++, last12Months.map(function (month) {
                      cov_2f40l1qxdw.f[76]++;
                      cov_2f40l1qxdw.s[857]++;
                      return "".concat(url, "/obix/histories/Barclays_Sup/Total$20Power$20Consumption$20in$20Kwh_Yearly/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1");
                    }));
                    cov_2f40l1qxdw.s[858]++;
                    console.log("URLs to fetch data from:", urls); // Log the generated URLs

                    // Create an array to hold the chart data
                    chartData = (cov_2f40l1qxdw.s[859]++, []); // Loop through the URLs asynchronously using a for loop
                    cov_2f40l1qxdw.s[860]++;
                    _iterator5 = _createForOfIteratorHelper(urls.entries());
                    _context60.prev = 15;
                    _iterator5.s();
                  case 17:
                    if ((_step5 = _iterator5.n()).done) {
                      _context60.next = 71;
                      break;
                    }
                    _step5$value = _slicedToArray(_step5.value, 2), index = _step5$value[0], scopeUrl = _step5$value[1];
                    cov_2f40l1qxdw.s[861]++;
                    _context60.next = 22;
                    return fetch(scopeUrl);
                  case 22:
                    response = _context60.sent;
                    cov_2f40l1qxdw.s[862]++;
                    _context60.next = 26;
                    return response.text();
                  case 26:
                    text = _context60.sent;
                    // Get the response as text
                    parser = (cov_2f40l1qxdw.s[863]++, new DOMParser());
                    xml = (cov_2f40l1qxdw.s[864]++, parser.parseFromString(text, "application/xml")); // Debugging: Log the entire XML structure to check if it's as expected
                    cov_2f40l1qxdw.s[865]++;
                    console.log("Parsed XML Document:", xml);

                    // Extract all 'obj' elements from the XML
                    records = (cov_2f40l1qxdw.s[866]++, xml.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[867]++;
                    console.log("XML Records:", records); // Log the records to check if they're found

                    // Process each record and adjust the month
                    cov_2f40l1qxdw.s[868]++;
                    i = 0;
                  case 36:
                    if (!(i < records.length)) {
                      _context60.next = 67;
                      break;
                    }
                    timestamp = (cov_2f40l1qxdw.s[869]++, records[i].getElementsByTagName("abstime")[0]);
                    value = (cov_2f40l1qxdw.s[870]++, records[i].getElementsByTagName("real")[0]); // Log to check the extracted timestamp and value
                    cov_2f40l1qxdw.s[871]++;
                    console.log("Timestamp:", timestamp, "Value:", value);
                    date = (cov_2f40l1qxdw.s[872]++, new Date(timestamp)); // '2024-10-01T00:00:00.000+05:30'
                    month = (cov_2f40l1qxdw.s[873]++, date.setMonth(date.getMonth() - 1));
                    cov_2f40l1qxdw.s[874]++;
                    console.log("month number get " + month);
                    cov_2f40l1qxdw.s[875]++;
                    console.log("Month no " + month);
                    months = (cov_2f40l1qxdw.s[876]++, date.toLocaleString('default', {
                      month: 'short'
                    }));
                    cov_2f40l1qxdw.s[877]++;
                    console.log("string no " + months);
                    year = (cov_2f40l1qxdw.s[878]++, date.getFullYear());
                    formattedMonth = (cov_2f40l1qxdw.s[879]++, "".concat(months, " ").concat(year));
                    cov_2f40l1qxdw.s[880]++;
                    console.log("Formatted Month and Year:", formattedMonth);

                    // If there is no timestamp or value, skip to next record
                    cov_2f40l1qxdw.s[881]++;
                    if (!((cov_2f40l1qxdw.b[83][0]++, !timestamp) || (cov_2f40l1qxdw.b[83][1]++, !value))) {
                      _context60.next = 61;
                      break;
                    }
                    cov_2f40l1qxdw.b[82][0]++;
                    cov_2f40l1qxdw.s[882]++;
                    return _context60.abrupt("continue", 64);
                  case 61:
                    cov_2f40l1qxdw.b[82][1]++;
                  case 62:
                    cov_2f40l1qxdw.s[883]++;
                    // Log the corresponding month name from getLast12Months()
                    //console.log("Month name from monthNames:", monthNames[month]);

                    // Push data to chartData
                    chartData.push({
                      month: formattedMonth,
                      // Use the correct month name from monthNames array
                      value: parseFloat(value).toFixed(2) // Convert value to a float for proper numeric handling
                    });
                  case 64:
                    i++;
                    _context60.next = 36;
                    break;
                  case 67:
                    cov_2f40l1qxdw.s[884]++;
                    // Debugging: Log chart data after processing
                    console.log("Chart Data:", chartData);
                  case 69:
                    _context60.next = 17;
                    break;
                  case 71:
                    _context60.next = 76;
                    break;
                  case 73:
                    _context60.prev = 73;
                    _context60.t0 = _context60["catch"](15);
                    _iterator5.e(_context60.t0);
                  case 76:
                    _context60.prev = 76;
                    _iterator5.f();
                    return _context60.finish(76);
                  case 79:
                    cov_2f40l1qxdw.s[885]++;
                    // Update chart data
                    powerChart.data = chartData.reverse();
                    // Create category axis (X-axis) for months
                    categoryAxis = (cov_2f40l1qxdw.s[886]++, powerChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[887]++;
                    categoryAxis.dataFields.category = "month"; // Bind X-axis to month
                    cov_2f40l1qxdw.s[888]++;
                    categoryAxis.renderer.labels.template.fill = am4core.color("#000000"); // Set x-axis labels color
                    cov_2f40l1qxdw.s[889]++;
                    categoryAxis.title.fill = am4core.color("#000000"); // Set x-axis title color
                    cov_2f40l1qxdw.s[890]++;
                    categoryAxis.renderer.labels.template.rotation = 315; // Set rotation for better display
                    cov_2f40l1qxdw.s[891]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "right"; // Align to the right
                    cov_2f40l1qxdw.s[892]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center vertically
                    cov_2f40l1qxdw.s[893]++;
                    categoryAxis.renderer.minGridDistance = 1; // Ensure all categories are displayed
                    cov_2f40l1qxdw.s[894]++;
                    categoryAxis.renderer.labels.template.dy = -15;
                    cov_2f40l1qxdw.s[895]++;
                    categoryAxis.renderer.labels.template.fontSize = 10;
                    cov_2f40l1qxdw.s[896]++;
                    categoryAxis.renderer.labels.template.dx = 10;

                    // Create value axis (Y-axis) for data values
                    valueAxis = (cov_2f40l1qxdw.s[897]++, powerChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[898]++;
                    valueAxis.renderer.labels.template.fill = am4core.color("#000000"); // Set y-axis labels color
                    cov_2f40l1qxdw.s[899]++;
                    valueAxis.title.fill = am4core.color("#000000"); // Set y-axis title color

                    // Create series (line) to represent the data
                    lineSeries = (cov_2f40l1qxdw.s[900]++, powerChart.series.push(new am4charts.LineSeries()));
                    cov_2f40l1qxdw.s[901]++;
                    lineSeries.dataFields.valueY = "value"; // Bind Y-axis to data values
                    cov_2f40l1qxdw.s[902]++;
                    lineSeries.dataFields.categoryX = "month"; // Bind X-axis to months
                    cov_2f40l1qxdw.s[903]++;
                    lineSeries.strokeWidth = 2;
                    cov_2f40l1qxdw.s[904]++;
                    lineSeries.stroke = am4core.color("#14C38E");

                    // Add circle bullet
                    bullet = (cov_2f40l1qxdw.s[905]++, lineSeries.bullets.push(new am4charts.CircleBullet()));
                    cov_2f40l1qxdw.s[906]++;
                    bullet.circle.radius = 3; // Size of the bullet point
                    cov_2f40l1qxdw.s[907]++;
                    bullet.circle.strokeWidth = 0.5;
                    cov_2f40l1qxdw.s[908]++;
                    bullet.circle.fill = am4core.color("#fc030b"); // Bullet fill color
                    cov_2f40l1qxdw.s[909]++;
                    bullet.circle.stroke = am4core.color("#14C38E"); // Bullet stroke color

                    // Set the bullet's color to match the line's color
                    cov_2f40l1qxdw.s[910]++;
                    bullet.adapter.add("fill", function (fill, target) {
                      cov_2f40l1qxdw.f[77]++;
                      cov_2f40l1qxdw.s[911]++;
                      return target.stroke;
                    });

                    // Configure cursor for interaction
                    cursor = (cov_2f40l1qxdw.s[912]++, new am4charts.XYCursor());
                    cov_2f40l1qxdw.s[913]++;
                    lineSeries.tooltipText = "{categoryX}: [bold]{valueY}[/]"; // Tooltip text
                    cov_2f40l1qxdw.s[914]++;
                    lineSeries.tooltip.getFillFromObject = false; // Disable tooltip fill from series
                    cov_2f40l1qxdw.s[915]++;
                    lineSeries.tooltip.background.fill = am4core.color("#14C38E"); // Set tooltip background color
                    cov_2f40l1qxdw.s[916]++;
                    lineSeries.tooltip.label.fill = am4core.color("#ffffff"); // Set tooltip label color
                    cov_2f40l1qxdw.s[917]++;
                    lineSeries.tooltip.pointerOrientation = "horizontal"; // Set tooltip orientation
                    cov_2f40l1qxdw.s[918]++;
                    powerChart.cursor = cursor;
                  case 140:
                  case "end":
                    return _context60.stop();
                }
              }, _callee54, null, [[15, 73, 76, 79]]);
            })));
          case 3:
          case "end":
            return _context61.stop();
        }
      }, _callee55);
    }));
    return _lineChart2.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[919]++;
  $("#startDatePower, #endDatePower").on("change", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          cov_2f40l1qxdw.f[78]++;
          cov_2f40l1qxdw.s[920]++;
          _context9.next = 4;
          return disposeChartPower(barChart);
        case 4:
        case "end":
          return _context9.stop();
      }
    }, _callee9);
  })));
  cov_2f40l1qxdw.s[921]++;
  $("#sav_monthly_power").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          cov_2f40l1qxdw.f[79]++;
          cov_2f40l1qxdw.s[922]++;
          clearDateInputsPower();
          cov_2f40l1qxdw.s[923]++;
          _context10.next = 6;
          return disposeChartPower(lineChartMonthlyPower);
        case 6:
        case "end":
          return _context10.stop();
      }
    }, _callee10);
  })));
  cov_2f40l1qxdw.s[924]++;
  $("#sav_daily_power").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          cov_2f40l1qxdw.f[80]++;
          cov_2f40l1qxdw.s[925]++;
          clearDateInputsPower();
          cov_2f40l1qxdw.s[926]++;
          _context11.next = 6;
          return disposeChartPower(lineChart4);
        case 6:
        case "end":
          return _context11.stop();
      }
    }, _callee11);
  })));
  cov_2f40l1qxdw.s[927]++;
  $("#sav_yearly_power").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) switch (_context12.prev = _context12.next) {
        case 0:
          cov_2f40l1qxdw.f[81]++;
          cov_2f40l1qxdw.s[928]++;
          clearDateInputsWater();
          cov_2f40l1qxdw.s[929]++;
          _context12.next = 6;
          return disposeChartPower(lineChart3);
        case 6:
        case "end":
          return _context12.stop();
      }
    }, _callee12);
  })));

  /* power consumption end */

  /* occupancy efficiency start */
  var occupancyChart = (cov_2f40l1qxdw.s[930]++, null);
  function removeChart(_x4) {
    return _removeChart.apply(this, arguments);
  } // Function to create and render a donut chart
  function _removeChart() {
    _removeChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee56(newChartFunction) {
      return _regeneratorRuntime().wrap(function _callee56$(_context62) {
        while (1) switch (_context62.prev = _context62.next) {
          case 0:
            cov_2f40l1qxdw.f[82]++;
            cov_2f40l1qxdw.s[931]++;
            if (occupancyChart) {
              cov_2f40l1qxdw.b[84][0]++;
              cov_2f40l1qxdw.s[932]++;
              if (occupancyChart instanceof ApexCharts) {
                cov_2f40l1qxdw.b[85][0]++;
                cov_2f40l1qxdw.s[933]++;
                occupancyChart.destroy(); // Dispose the existing chart
              } else {
                cov_2f40l1qxdw.b[85][1]++;
                cov_2f40l1qxdw.s[934]++;
                console.log("Pie chart destroyed");
                cov_2f40l1qxdw.s[935]++;
                occupancyChart.dispose(); // Dispose the existing am4charts instance
              }
            } else {
              cov_2f40l1qxdw.b[84][1]++;
            }
            // Call the new chart function
            cov_2f40l1qxdw.s[936]++;
            _context62.next = 6;
            return newChartFunction();
          case 6:
          case "end":
            return _context62.stop();
        }
      }, _callee56);
    }));
    return _removeChart.apply(this, arguments);
  }
  function donutChart() {
    return _donutChart.apply(this, arguments);
  }
  function _donutChart() {
    _donutChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee57() {
      var outValue, options;
      return _regeneratorRuntime().wrap(function _callee57$(_context63) {
        while (1) switch (_context63.prev = _context63.next) {
          case 0:
            cov_2f40l1qxdw.f[83]++;
            // Fetch XML data from the server
            // const response = await fetch("https://localhost/obix/config/Barclays/Occpancy/Occupancy$20Sensor/");
            // const text = await response.text();
            // // Parse the XML data
            // const parser = new DOMParser();
            // const xmlDoc = parser.parseFromString(text, "text/xml");
            // // Get all <ref> elements (which include scope1, scope2, etc.)
            // const outElement = xmlDoc.querySelector('real[name="out"]');
            // const outValue = parseFloat(outElement.getAttribute('val'));
            //console.log("out Values" + outValue);
            outValue = (cov_2f40l1qxdw.s[937]++, 80);
            options = (cov_2f40l1qxdw.s[938]++, {
              series: [outValue],
              chart: {
                height: "100%",
                width: "100%",
                type: 'radialBar'
              },
              plotOptions: {
                radialBar: {
                  hollow: {
                    margin: 15,
                    size: '85%'
                  },
                  dataLabels: {
                    name: {
                      show: true,
                      color: '#000'
                    },
                    value: {
                      show: true,
                      color: '#000',
                      offsetY: 50,
                      fontSize: '50px'
                    }
                  },
                  track: {
                    background: '#494949',
                    strokeWidth: '10%',
                    margin: 0,
                    dropShadow: {
                      enabled: true,
                      top: -3,
                      left: 0,
                      blur: 4,
                      opacity: 0.35
                    }
                  },
                  offsetY: 0
                }
              },
              fill: {
                type: 'gradient',
                gradient: {
                  shade: 'dark',
                  type: 'vertical',
                  gradientToColors: ['#e33b29', '#ff00e0', '#0000ff'],
                  stops: [0, 2, 70, 100],
                  colorStops: [{
                    offset: 0,
                    color: '#e33b29',
                    opacity: 1 // Blue at the start
                  }, {
                    offset: 2,
                    color: '#e33b29',
                    opacity: 1 // Blue in the middle
                  }, {
                    offset: 70,
                    color: '#ff00e0',
                    opacity: 1 // Pink at the end
                  }, {
                    offset: 100,
                    color: '#0000ff',
                    opacity: 1 // Pink at the end
                  }]
                }
              },
              stroke: {
                lineCap: 'round'
              },
              labels: ["Occupancy Efficiency"]
            });
            cov_2f40l1qxdw.s[939]++;
            occupancyChart = new ApexCharts(document.querySelector("#chartdiv3"), options);
            cov_2f40l1qxdw.s[940]++;
            occupancyChart.render();
            //clearDateInputsOccupancy();
          case 7:
          case "end":
            return _context63.stop();
        }
      }, _callee57);
    }));
    return _donutChart.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[941]++;
  removeChart(donutChart);
  function occupacyBarChart1() {
    return _occupacyBarChart.apply(this, arguments);
  }
  function _occupacyBarChart() {
    _occupacyBarChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee58() {
      var scopes, upsData, _i8, _scopes3, scope, response, text, parser, xmlDoc, ups, options;
      return _regeneratorRuntime().wrap(function _callee58$(_context64) {
        while (1) switch (_context64.prev = _context64.next) {
          case 0:
            cov_2f40l1qxdw.f[84]++;
            scopes = (cov_2f40l1qxdw.s[942]++, ['Floor1', 'Floor2']);
            upsData = (cov_2f40l1qxdw.s[943]++, []); // Loop through each scope to fetch and process data
            cov_2f40l1qxdw.s[944]++;
            _i8 = 0, _scopes3 = scopes;
          case 5:
            if (!(_i8 < _scopes3.length)) {
              _context64.next = 31;
              break;
            }
            scope = _scopes3[_i8];
            cov_2f40l1qxdw.s[945]++;
            _context64.prev = 8;
            cov_2f40l1qxdw.s[946]++;
            _context64.next = 12;
            return fetch("https://localhost/obix/config/Barclays/Occpancy/".concat(scope, "/occupancy"));
          case 12:
            response = _context64.sent;
            cov_2f40l1qxdw.s[947]++;
            _context64.next = 16;
            return response.text();
          case 16:
            text = _context64.sent;
            // Parse the XML response
            parser = (cov_2f40l1qxdw.s[948]++, new DOMParser());
            xmlDoc = (cov_2f40l1qxdw.s[949]++, parser.parseFromString(text, "application/xml")); // Extract values for ups, hvac, and rtltg
            ups = (cov_2f40l1qxdw.s[950]++, parseFloat(xmlDoc.querySelector('ref[name="occupancy"]').getAttribute('display').split(' ')[0]));
            cov_2f40l1qxdw.s[951]++;
            upsData.push(ups);
            _context64.next = 28;
            break;
          case 24:
            _context64.prev = 24;
            _context64.t0 = _context64["catch"](8);
            cov_2f40l1qxdw.s[952]++;
            console.error("Error fetching data for ".concat(scope, ":"), _context64.t0);
          case 28:
            _i8++;
            _context64.next = 5;
            break;
          case 31:
            options = (cov_2f40l1qxdw.s[953]++, {
              series: [{
                name: 'Occupancy Efficiency',
                data: upsData // Data for HVAC (Floor 1, Floor 2)
              }, {}],
              chart: {
                height: "100%",
                type: 'bar',
                toolbar: {
                  show: false // Disable the toolbar
                },
                offsetY: 30
              },
              plotOptions: {
                bar: {
                  borderRadius: 10,
                  dataLabels: {
                    position: 'top' // Show data labels on top
                  },
                  columnWidth: '40%',
                  // Set column width for a simple bar chart
                  endingShape: 'rounded' // Rounded edges for a smooth look
                }
              },
              dataLabels: {
                enabled: true,
                formatter: function formatter(val) {
                  cov_2f40l1qxdw.f[85]++;
                  cov_2f40l1qxdw.s[954]++;
                  return val; // Show percentage symbol next to data
                },
                offsetY: -30,
                style: {
                  fontSize: '12px',
                  colors: ["#E11D74"]
                }
              },
              xaxis: {
                categories: ["Floor 1", "Floor 2"],
                // X-axis now has Floor 1 and Floor 2
                position: 'bottom',
                axisBorder: {
                  show: false // Hide bottom axis border
                },
                axisTicks: {
                  show: false // Hide ticks for a cleaner look
                },
                crosshairs: {
                  fill: {
                    type: 'gradient',
                    gradient: {
                      colorFrom: '#E11D74',
                      colorTo: '#E11D74',
                      stops: [0, 100],
                      opacityFrom: 0.4,
                      opacityTo: 0.5
                    }
                  }
                },
                tooltip: {
                  enabled: true // Show tooltips on x-axis hover
                }
              },
              yaxis: {
                axisBorder: {
                  show: false // Hide y-axis border
                },
                axisTicks: {
                  show: false // Hide ticks on y-axis
                },
                labels: {
                  show: false // Hide y-axis labels for a cleaner look
                }
              },
              legend: {
                show: true,
                position: 'top',
                // Place the legend on top
                horizontalAlign: 'center',
                // Center align the legend
                offsetY: 20
              },
              colors: ['#E11D74'],
              // Custom color for HVAC
              grid: {
                padding: {
                  left: 10,
                  right: 10
                }
              }
            }); // Select the div where the chart should render
            cov_2f40l1qxdw.s[955]++;
            occupancyChart = new ApexCharts(document.querySelector("#chartdiv9"), options);
            cov_2f40l1qxdw.s[956]++;
            _context64.next = 37;
            return occupancyChart.render();
          case 37:
          case "end":
            return _context64.stop();
        }
      }, _callee58, null, [[8, 24]]);
    }));
    return _occupacyBarChart.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[957]++;
  $('#floor_sav_btn').on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
    return _regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) switch (_context13.prev = _context13.next) {
        case 0:
          cov_2f40l1qxdw.f[86]++;
          cov_2f40l1qxdw.s[958]++;
          $(".sav_g_chart").hide();
          cov_2f40l1qxdw.s[959]++;
          $(".sav_b_chart").show();
          cov_2f40l1qxdw.s[960]++;
          $("#build_sav_btn").show();
          cov_2f40l1qxdw.s[961]++;
          $(".occupacyBtn").hide();
          //$(this).hide();
          cov_2f40l1qxdw.s[962]++;
          occupacyBarChart1();
        case 11:
        case "end":
          return _context13.stop();
      }
    }, _callee13);
  })));
  cov_2f40l1qxdw.s[963]++;
  $('#build_sav_btn').on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
    return _regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) switch (_context14.prev = _context14.next) {
        case 0:
          cov_2f40l1qxdw.f[87]++;
          cov_2f40l1qxdw.s[964]++;
          $(".sav_g_chart").show();
          cov_2f40l1qxdw.s[965]++;
          $(".sav_b_chart").hide();
          cov_2f40l1qxdw.s[966]++;
          $('#floor_sav_btn').show();
          cov_2f40l1qxdw.s[967]++;
          $(".occupacyBtn").show();
          //$(this).hide();
        case 9:
        case "end":
          return _context14.stop();
      }
    }, _callee14);
  })));
  function occupacyLine() {
    return _occupacyLine.apply(this, arguments);
  }
  function _occupacyLine() {
    _occupacyLine = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee60() {
      return _regeneratorRuntime().wrap(function _callee60$(_context67) {
        while (1) switch (_context67.prev = _context67.next) {
          case 0:
            cov_2f40l1qxdw.f[88]++;
            cov_2f40l1qxdw.s[968]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee59() {
              var startDateValue, endDateValue, isValid, waterValues, urlToFetch, response, text, parser, xmlDoc, objs, _loop7, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee59$(_context66) {
                while (1) switch (_context66.prev = _context66.next) {
                  case 0:
                    createSeries = function _createSeries7(valueField, name, color) {
                      cov_2f40l1qxdw.f[92]++;
                      var series = (cov_2f40l1qxdw.s[1020]++, occupancyChart.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[1021]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[1022]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[1023]++;
                      series.name = name;
                      //series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[1024]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[1025]++;
                      series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[1026]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[1027]++;
                      bullet.tooltipText = "{valueY}";
                      cov_2f40l1qxdw.s[1028]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[93]++;
                        cov_2f40l1qxdw.s[1029]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[92][0]++;
                          cov_2f40l1qxdw.s[1030]++;
                          return am4core.color("#e11d74"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[92][1]++;
                        }
                        cov_2f40l1qxdw.s[1031]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[1032]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[89]++;
                    startDateValue = (cov_2f40l1qxdw.s[969]++, $("#startDateOccupancy").val());
                    endDateValue = (cov_2f40l1qxdw.s[970]++, $("#endDateOccupancy").val());
                    cov_2f40l1qxdw.s[971]++;
                    _context66.next = 7;
                    return validateDateRange(startDateValue, endDateValue);
                  case 7:
                    isValid = _context66.sent;
                    cov_2f40l1qxdw.s[972]++;
                    if (isValid) {
                      _context66.next = 15;
                      break;
                    }
                    cov_2f40l1qxdw.b[86][0]++;
                    cov_2f40l1qxdw.s[973]++;
                    return _context66.abrupt("return");
                  case 15:
                    cov_2f40l1qxdw.b[86][1]++;
                  case 16:
                    waterValues = (cov_2f40l1qxdw.s[974]++, []); // const url = "https://localhost";
                    // Fetch data asynchronously for each scope
                    urlToFetch = (cov_2f40l1qxdw.s[975]++, "".concat(url, "/obix/histories/SqlServerDatabase/domestic/~historyQuery?start=").concat(startDateValue, "T23:59:59.000+05:30&end=").concat(endDateValue, "T23:59:59.000+05:30"));
                    cov_2f40l1qxdw.s[976]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[977]++;
                    _context66.prev = 21;
                    cov_2f40l1qxdw.s[978]++;
                    _context66.next = 25;
                    return fetch(urlToFetch);
                  case 25:
                    response = _context66.sent;
                    cov_2f40l1qxdw.s[979]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[980]++;
                    _context66.next = 31;
                    return response.text();
                  case 31:
                    text = _context66.sent;
                    // Parse the XML data
                    parser = (cov_2f40l1qxdw.s[981]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[982]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[983]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[984]++;
                    _loop7 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop7() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate7, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop7$(_context65) {
                        while (1) switch (_context65.prev = _context65.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[985]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[986]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[987]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[988]++;
                            if ((cov_2f40l1qxdw.b[88][0]++, abstime) && (cov_2f40l1qxdw.b[88][1]++, real)) {
                              cov_2f40l1qxdw.b[87][0]++;
                              dateText = (cov_2f40l1qxdw.s[989]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[990]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[991]++;
                              if ((cov_2f40l1qxdw.b[90][0]++, valueText) && (cov_2f40l1qxdw.b[90][1]++, dateText)) {
                                cov_2f40l1qxdw.b[89][0]++;
                                value = (cov_2f40l1qxdw.s[992]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[993]++, new Date(dateText));
                                _formattedDate7 = (cov_2f40l1qxdw.s[994]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[995]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[996]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[90]++;
                                  cov_2f40l1qxdw.s[997]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[998]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[91][0]++;
                                  cov_2f40l1qxdw.s[999]++;
                                  // Update the existing entry's value
                                  existingEntry.value = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[91][1]++;
                                  cov_2f40l1qxdw.s[1000]++;
                                  // Add a new entry with date and value
                                  waterValues.push({
                                    date: date,
                                    value: parseFloat(value)
                                  });
                                }
                              } else {
                                cov_2f40l1qxdw.b[89][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[87][1]++;
                            }
                          case 5:
                          case "end":
                            return _context65.stop();
                        }
                      }, _loop7);
                    });
                    i = 0;
                  case 38:
                    if (!(i < objs.length)) {
                      _context66.next = 43;
                      break;
                    }
                    return _context66.delegateYield(_loop7(), "t0", 40);
                  case 40:
                    i++;
                    _context66.next = 38;
                    break;
                  case 43:
                    _context66.next = 49;
                    break;
                  case 45:
                    _context66.prev = 45;
                    _context66.t1 = _context66["catch"](21);
                    cov_2f40l1qxdw.s[1001]++;
                    console.error("Error fetching data for ");
                  case 49:
                    cov_2f40l1qxdw.s[1002]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    cov_2f40l1qxdw.s[1003]++;
                    occupancyChart = am4core.create("chartdiv3", am4charts.XYChart);
                    cov_2f40l1qxdw.s[1004]++;
                    occupancyChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[1005]++;
                    occupancyChart.data = waterValues;
                    cov_2f40l1qxdw.s[1006]++;
                    console.log(occupancyChart.data);
                    cov_2f40l1qxdw.s[1007]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[91]++;
                      cov_2f40l1qxdw.s[1008]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[1009]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[1010]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[1011]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[1012]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[1013]++, occupancyChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[1014]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[1015]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[1016]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[1017]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[1018]++, occupancyChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[1019]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[1033]++;
                    occupancyChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[1034]++;
                    occupancyChart.legend.position = "top";
                    cov_2f40l1qxdw.s[1035]++;
                    occupancyChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[1036]++;
                    occupancyChart.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[1037]++;
                    createSeries("value", "Occupancy Efficiency", "#e11d74");

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[1038]++;
                    occupancyChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[1039]++;
                    occupancyChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[1040]++;
                    occupancyChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[1041]++;
                    occupancyChart.logo.disabled = true;
                  case 91:
                  case "end":
                    return _context66.stop();
                }
              }, _callee59, null, [[21, 45]]);
            })));
          case 3:
          case "end":
            return _context67.stop();
        }
      }, _callee60);
    }));
    return _occupacyLine.apply(this, arguments);
  }
  function occupacyBar() {
    return _occupacyBar.apply(this, arguments);
  }
  function _occupacyBar() {
    _occupacyBar = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {
      var months, last12Months, chartData, _iterator6, _step6, month, _url, response, text, parser, xml, list, abstime, realValue, abstimeDate, formattedAbstime, options, _occupancyChart;
      return _regeneratorRuntime().wrap(function _callee61$(_context68) {
        while (1) switch (_context68.prev = _context68.next) {
          case 0:
            cov_2f40l1qxdw.f[94]++;
            cov_2f40l1qxdw.s[1042]++;
            _context68.prev = 2;
            // Get the last 12 months
            months = (cov_2f40l1qxdw.s[1043]++, getLast12Months()); // Array of month names for the x-axis (e.g., ["Jan 2023", "Feb 2023", ...])
            last12Months = (cov_2f40l1qxdw.s[1044]++, getLast12Months1()); // Array of objects with `startDate` for the URLs
            cov_2f40l1qxdw.s[1045]++;
            console.log("Last 12 Months (from getLast12Months1):", last12Months);
            chartData = (cov_2f40l1qxdw.s[1046]++, []); // Loop through each month to fetch data
            cov_2f40l1qxdw.s[1047]++;
            _iterator6 = _createForOfIteratorHelper(last12Months);
            _context68.prev = 10;
            _iterator6.s();
          case 12:
            if ((_step6 = _iterator6.n()).done) {
              _context68.next = 54;
              break;
            }
            month = _step6.value;
            _url = (cov_2f40l1qxdw.s[1048]++, "https://localhost/obix/histories/SqlServerDatabase/domesticYearly/~historyQuery?start=".concat(month.startDate, "T23:59:59.000+05:30&limit=1"));
            cov_2f40l1qxdw.s[1049]++;
            _context68.prev = 16;
            cov_2f40l1qxdw.s[1050]++;
            _context68.next = 20;
            return fetch(_url);
          case 20:
            response = _context68.sent;
            cov_2f40l1qxdw.s[1051]++;
            if (response.ok) {
              _context68.next = 32;
              break;
            }
            cov_2f40l1qxdw.b[93][0]++;
            cov_2f40l1qxdw.s[1052]++;
            console.error("Error fetching data for ".concat(month.startDate, ": HTTP ").concat(response.status));
            cov_2f40l1qxdw.s[1053]++;
            chartData.push(0); // Add 0 for missing data
            cov_2f40l1qxdw.s[1054]++;
            return _context68.abrupt("continue", 52);
          case 32:
            cov_2f40l1qxdw.b[93][1]++;
          case 33:
            cov_2f40l1qxdw.s[1055]++;
            _context68.next = 36;
            return response.text();
          case 36:
            text = _context68.sent;
            parser = (cov_2f40l1qxdw.s[1056]++, new DOMParser());
            xml = (cov_2f40l1qxdw.s[1057]++, parser.parseFromString(text, "application/xml")); // Parse the data
            list = (cov_2f40l1qxdw.s[1058]++, xml.getElementsByTagName("list")[0]);
            abstime = (cov_2f40l1qxdw.s[1059]++, list.getElementsByTagName("abstime")[0]);
            realValue = (cov_2f40l1qxdw.s[1060]++, list.getElementsByTagName("real")[0]);
            cov_2f40l1qxdw.s[1061]++;
            if ((cov_2f40l1qxdw.b[95][0]++, abstime) && (cov_2f40l1qxdw.b[95][1]++, realValue)) {
              cov_2f40l1qxdw.b[94][0]++;
              abstimeDate = (cov_2f40l1qxdw.s[1062]++, new Date(abstime));
              formattedAbstime = (cov_2f40l1qxdw.s[1063]++, "".concat(abstimeDate.getFullYear(), "-").concat(String(abstimeDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(abstimeDate.getDate()).padStart(2, '0')));
              cov_2f40l1qxdw.s[1064]++;
              if (formattedAbstime === month.startDate) {
                cov_2f40l1qxdw.b[96][0]++;
                cov_2f40l1qxdw.s[1065]++;
                chartData.push(parseFloat(realValue).toFixed(2));
              } else {
                cov_2f40l1qxdw.b[96][1]++;
                cov_2f40l1qxdw.s[1066]++;
                chartData.push(0); // Add 0 if no matching date
              }
            } else {
              cov_2f40l1qxdw.b[94][1]++;
              cov_2f40l1qxdw.s[1067]++;
              chartData.push(0); // Add 0 for missing values
            }
            _context68.next = 52;
            break;
          case 46:
            _context68.prev = 46;
            _context68.t0 = _context68["catch"](16);
            cov_2f40l1qxdw.s[1068]++;
            console.error("Error processing data for ".concat(month.startDate, ":"), _context68.t0);
            cov_2f40l1qxdw.s[1069]++;
            chartData.push(0); // Add 0 in case of errors
          case 52:
            _context68.next = 12;
            break;
          case 54:
            _context68.next = 59;
            break;
          case 56:
            _context68.prev = 56;
            _context68.t1 = _context68["catch"](10);
            _iterator6.e(_context68.t1);
          case 59:
            _context68.prev = 59;
            _iterator6.f();
            return _context68.finish(59);
          case 62:
            // Configure the bar chart options
            options = (cov_2f40l1qxdw.s[1070]++, {
              series: [{
                name: 'Occupancy Efficiency',
                data: chartData // Data for the chart
              }],
              chart: {
                type: 'bar',
                height: '100%',
                toolbar: {
                  show: false
                }
              },
              plotOptions: {
                bar: {
                  horizontal: false,
                  columnWidth: '55%',
                  endingShape: 'rounded'
                }
              },
              colors: ["#E11D74"],
              dataLabels: {
                enabled: false
              },
              stroke: {
                show: true,
                width: 0,
                colors: ['transparent']
              },
              xaxis: {
                categories: months // Use month names as x-axis categories
              },
              grid: {
                show: true // Disable grid lines
              },
              tooltip: {
                y: {
                  formatter: function formatter(val) {
                    cov_2f40l1qxdw.f[95]++;
                    cov_2f40l1qxdw.s[1071]++;
                    return "".concat(val); // Customize tooltip value
                  }
                }
              },
              legend: {
                position: 'top',
                horizontalAlign: 'center',
                labels: {
                  colors: ['#000000'] // Customize legend label color
                }
              }
            });
            cov_2f40l1qxdw.s[1072]++;
            console.log("Creating bar chart...");
            _occupancyChart = (cov_2f40l1qxdw.s[1073]++, new ApexCharts(document.querySelector("#chartdiv3"), options));
            cov_2f40l1qxdw.s[1074]++;
            _occupancyChart.render();
            _context68.next = 74;
            break;
          case 70:
            _context68.prev = 70;
            _context68.t2 = _context68["catch"](2);
            cov_2f40l1qxdw.s[1075]++;
            console.error("Error creating bar chart:", _context68.t2);
          case 74:
          case "end":
            return _context68.stop();
        }
      }, _callee61, null, [[2, 70], [10, 56, 59, 62], [16, 46]]);
    }));
    return _occupacyBar.apply(this, arguments);
  }
  function lineChartMonthlyOccupancy() {
    return _lineChartMonthlyOccupancy.apply(this, arguments);
  }
  function _lineChartMonthlyOccupancy() {
    _lineChartMonthlyOccupancy = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee63() {
      return _regeneratorRuntime().wrap(function _callee63$(_context71) {
        while (1) switch (_context71.prev = _context71.next) {
          case 0:
            cov_2f40l1qxdw.f[96]++;
            cov_2f40l1qxdw.s[1076]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee62() {
              var today, currentMonth, startDate, endDate, startISO, endISO, waterValues, urlToFetch, response, text, parser, xmlDoc, objs, _loop8, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee62$(_context70) {
                while (1) switch (_context70.prev = _context70.next) {
                  case 0:
                    createSeries = function _createSeries8(valueField, name, color) {
                      cov_2f40l1qxdw.f[100]++;
                      var series = (cov_2f40l1qxdw.s[1129]++, powerChart.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[1130]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[1131]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[1132]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[1133]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[1134]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[1135]++;
                      series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[1136]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[1137]++;
                      bullet.tooltipText = "{valueY}";
                      cov_2f40l1qxdw.s[1138]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[101]++;
                        cov_2f40l1qxdw.s[1139]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[102][0]++;
                          cov_2f40l1qxdw.s[1140]++;
                          return am4core.color("#e11d74"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[102][1]++;
                        }
                        cov_2f40l1qxdw.s[1141]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[1142]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[97]++;
                    today = (cov_2f40l1qxdw.s[1077]++, new Date());
                    currentMonth = (cov_2f40l1qxdw.s[1078]++, today.getMonth()); // Set startDate and endDate to the previous month
                    startDate = (cov_2f40l1qxdw.s[1079]++, new Date(today.getFullYear(), currentMonth - 1, 1));
                    endDate = (cov_2f40l1qxdw.s[1080]++, new Date(today.getFullYear(), currentMonth, 0));
                    startISO = (cov_2f40l1qxdw.s[1081]++, "".concat(startDate.getFullYear(), "-").concat(String(startDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(startDate.getDate()).padStart(2, '0')));
                    endISO = (cov_2f40l1qxdw.s[1082]++, "".concat(endDate.getFullYear(), "-").concat(String(endDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(endDate.getDate()).padStart(2, '0')));
                    waterValues = (cov_2f40l1qxdw.s[1083]++, []); // const url = "https://localhost";
                    // Fetch data asynchronously for each scope
                    urlToFetch = (cov_2f40l1qxdw.s[1084]++, "".concat(url, "/obix/histories/SqlServerDatabase/domestic/~historyQuery?start=").concat(startISO, "T23:59:59.000+05:30&end=").concat(endISO, "T23:59:59.000+05:30"));
                    cov_2f40l1qxdw.s[1085]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[1086]++;
                    _context70.prev = 13;
                    cov_2f40l1qxdw.s[1087]++;
                    _context70.next = 17;
                    return fetch(urlToFetch);
                  case 17:
                    response = _context70.sent;
                    cov_2f40l1qxdw.s[1088]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[1089]++;
                    _context70.next = 23;
                    return response.text();
                  case 23:
                    text = _context70.sent;
                    // Parse the XML data
                    parser = (cov_2f40l1qxdw.s[1090]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[1091]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[1092]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[1093]++;
                    _loop8 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop8() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate8, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop8$(_context69) {
                        while (1) switch (_context69.prev = _context69.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[1094]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[1095]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[1096]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[1097]++;
                            if ((cov_2f40l1qxdw.b[98][0]++, abstime) && (cov_2f40l1qxdw.b[98][1]++, real)) {
                              cov_2f40l1qxdw.b[97][0]++;
                              dateText = (cov_2f40l1qxdw.s[1098]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[1099]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[1100]++;
                              if ((cov_2f40l1qxdw.b[100][0]++, valueText) && (cov_2f40l1qxdw.b[100][1]++, dateText)) {
                                cov_2f40l1qxdw.b[99][0]++;
                                value = (cov_2f40l1qxdw.s[1101]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[1102]++, new Date(dateText));
                                _formattedDate8 = (cov_2f40l1qxdw.s[1103]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[1104]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[1105]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[98]++;
                                  cov_2f40l1qxdw.s[1106]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[1107]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[101][0]++;
                                  cov_2f40l1qxdw.s[1108]++;
                                  // Update the existing entry's value
                                  existingEntry.value = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[101][1]++;
                                  cov_2f40l1qxdw.s[1109]++;
                                  // Add a new entry with date and value
                                  waterValues.push({
                                    date: date,
                                    value: parseFloat(value)
                                  });
                                }
                              } else {
                                cov_2f40l1qxdw.b[99][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[97][1]++;
                            }
                          case 5:
                          case "end":
                            return _context69.stop();
                        }
                      }, _loop8);
                    });
                    i = 0;
                  case 30:
                    if (!(i < objs.length)) {
                      _context70.next = 35;
                      break;
                    }
                    return _context70.delegateYield(_loop8(), "t0", 32);
                  case 32:
                    i++;
                    _context70.next = 30;
                    break;
                  case 35:
                    _context70.next = 41;
                    break;
                  case 37:
                    _context70.prev = 37;
                    _context70.t1 = _context70["catch"](13);
                    cov_2f40l1qxdw.s[1110]++;
                    console.error("Error fetching data for ");
                  case 41:
                    cov_2f40l1qxdw.s[1111]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    cov_2f40l1qxdw.s[1112]++;
                    powerChart = am4core.create("chartdiv3", am4charts.XYChart);
                    cov_2f40l1qxdw.s[1113]++;
                    powerChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[1114]++;
                    powerChart.data = waterValues;
                    cov_2f40l1qxdw.s[1115]++;
                    console.log(powerChart.data);
                    cov_2f40l1qxdw.s[1116]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[99]++;
                      cov_2f40l1qxdw.s[1117]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[1118]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[1119]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[1120]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[1121]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[1122]++, powerChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[1123]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[1124]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[1125]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[1126]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[1127]++, powerChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[1128]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[1143]++;
                    powerChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[1144]++;
                    powerChart.legend.position = "top";
                    cov_2f40l1qxdw.s[1145]++;
                    powerChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[1146]++;
                    powerChart.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[1147]++;
                    createSeries("value", "Occupancy Efficiency", am4core.color("#e11d74"));

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[1148]++;
                    powerChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[1149]++;
                    powerChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[1150]++;
                    powerChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[1151]++;
                    powerChart.logo.disabled = true;
                  case 83:
                  case "end":
                    return _context70.stop();
                }
              }, _callee62, null, [[13, 37]]);
            })));
          case 3:
          case "end":
            return _context71.stop();
        }
      }, _callee63);
    }));
    return _lineChartMonthlyOccupancy.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[1152]++;
  $("#startDateOccupancy, #endDateOccupancy").on("change", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
    return _regeneratorRuntime().wrap(function _callee15$(_context15) {
      while (1) switch (_context15.prev = _context15.next) {
        case 0:
          cov_2f40l1qxdw.f[102]++;
          cov_2f40l1qxdw.s[1153]++;
          _context15.next = 4;
          return removeChart(occupacyLine);
        case 4:
        case "end":
          return _context15.stop();
      }
    }, _callee15);
  })));
  cov_2f40l1qxdw.s[1154]++;
  $("#sav_daily_occupancy").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
    return _regeneratorRuntime().wrap(function _callee16$(_context16) {
      while (1) switch (_context16.prev = _context16.next) {
        case 0:
          cov_2f40l1qxdw.f[103]++;
          cov_2f40l1qxdw.s[1155]++;
          clearDateInputsOccupancy();
          cov_2f40l1qxdw.s[1156]++;
          _context16.next = 6;
          return removeChart(donutChart);
        case 6:
        case "end":
          return _context16.stop();
      }
    }, _callee16);
  })));
  cov_2f40l1qxdw.s[1157]++;
  $("#sav_monthly_occupancy").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
    return _regeneratorRuntime().wrap(function _callee17$(_context17) {
      while (1) switch (_context17.prev = _context17.next) {
        case 0:
          cov_2f40l1qxdw.f[104]++;
          cov_2f40l1qxdw.s[1158]++;
          clearDateInputsOccupancy();
          cov_2f40l1qxdw.s[1159]++;
          _context17.next = 6;
          return removeChart(lineChartMonthlyOccupancy);
        case 6:
        case "end":
          return _context17.stop();
      }
    }, _callee17);
  })));
  cov_2f40l1qxdw.s[1160]++;
  $("#sav_yearly_occupancy").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {
    return _regeneratorRuntime().wrap(function _callee18$(_context18) {
      while (1) switch (_context18.prev = _context18.next) {
        case 0:
          cov_2f40l1qxdw.f[105]++;
          cov_2f40l1qxdw.s[1161]++;
          clearDateInputsOccupancy();
          cov_2f40l1qxdw.s[1162]++;
          _context18.next = 6;
          return removeChart(occupacyBar);
        case 6:
        case "end":
          return _context18.stop();
      }
    }, _callee18);
  })));
  /* occupancy efficiency end */

  /* Indoor Air Quality start */
  var aqiCharts; // Single chart instance

  // Function to replace the chart
  function replaceIndoorChart(_x5) {
    return _replaceIndoorChart.apply(this, arguments);
  } // URL for fetching data
  function _replaceIndoorChart() {
    _replaceIndoorChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee64(newChartFunction) {
      return _regeneratorRuntime().wrap(function _callee64$(_context72) {
        while (1) switch (_context72.prev = _context72.next) {
          case 0:
            cov_2f40l1qxdw.f[106]++;
            cov_2f40l1qxdw.s[1163]++;
            // Destroy the existing chart if it exists
            if (aqiCharts) {
              cov_2f40l1qxdw.b[103][0]++;
              cov_2f40l1qxdw.s[1164]++;
              if (aqiCharts instanceof ApexCharts) {
                cov_2f40l1qxdw.b[104][0]++;
                cov_2f40l1qxdw.s[1165]++;
                aqiCharts.destroy();
              } else {
                cov_2f40l1qxdw.b[104][1]++;
                cov_2f40l1qxdw.s[1166]++;
                aqiCharts.dispose();
              }
            } else {
              cov_2f40l1qxdw.b[103][1]++;
              cov_2f40l1qxdw.s[1167]++;
              console.log("No chart to destroy");
            }

            // Wait for the new chart to be created
            cov_2f40l1qxdw.s[1168]++;
            _context72.next = 6;
            return newChartFunction();
          case 6:
          case "end":
            return _context72.stop();
        }
      }, _callee64);
    }));
    return _replaceIndoorChart.apply(this, arguments);
  }
  var iiaqurl = (cov_2f40l1qxdw.s[1169]++, "".concat(url, "/obix/config/Drivers/Barclays/IAQ/IAQ/"));

  // Function to create the pie chart
  function createPieChart() {
    return _createPieChart.apply(this, arguments);
  } // Update the chart every second
  function _createPieChart() {
    _createPieChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee65() {
      var response, text, parser, xmlDoc, outElement, outValue, maxAQI, normalizedValue, formattedValue, options;
      return _regeneratorRuntime().wrap(function _callee65$(_context73) {
        while (1) switch (_context73.prev = _context73.next) {
          case 0:
            cov_2f40l1qxdw.f[107]++;
            cov_2f40l1qxdw.s[1170]++;
            _context73.next = 4;
            return fetch(iiaqurl);
          case 4:
            response = _context73.sent;
            cov_2f40l1qxdw.s[1171]++;
            _context73.next = 8;
            return response.text();
          case 8:
            text = _context73.sent;
            // Parse the XML data
            parser = (cov_2f40l1qxdw.s[1172]++, new DOMParser());
            xmlDoc = (cov_2f40l1qxdw.s[1173]++, parser.parseFromString(text, "text/xml")); // Get the <real> element value
            outElement = (cov_2f40l1qxdw.s[1174]++, xmlDoc.querySelector('real[name="out"]'));
            outValue = (cov_2f40l1qxdw.s[1175]++, parseFloat(outElement.getAttribute('val')).toFixed(2));
            maxAQI = (cov_2f40l1qxdw.s[1176]++, 500);
            normalizedValue = (cov_2f40l1qxdw.s[1177]++, Math.min(outValue / maxAQI * 100, 100).toFixed(2));
            formattedValue = (cov_2f40l1qxdw.s[1178]++, parseFloat(normalizedValue)); //console.log("normalizedValue" + normalizedValue);
            // const chartColor = outValue > 100 ? "#FF6600" : "#5CB338";
            // Pie chart options
            // const options = {
            //     series: [normalizedValue],
            //     chart: {
            //         height: "100%",
            //         type: 'radialBar',
            //         // events: {
            //         //     rendered: function (chartContext, config) {
            //         //         // Locate the text element after render
            //         //         const totalValue = outValue;
            //         //         const totalTextElement = document.querySelector("#chartdiv4 .apexcharts-text.apexcharts-datalabel-label");
            //         //         // Apply color based on condition
            //         //         if (totalTextElement) {
            //         //             totalTextElement.style.fill = totalValue > 50 ? 'green' : 'red';
            //         //         }
            //         //     }
            //         // },
            //         offsetY: -20
            //     },
            //     plotOptions: {
            //         radialBar: {
            //             offsetY: 20,
            //             startAngle: 0,
            //             endAngle: 360,
            //             hollow: {
            //                 margin: 5,
            //                 size: '65%',
            //                 background: 'transparent',
            //             },
            //             dataLabels: {
            //                 name: { show: true },
            //                 value: { show: true },
            //                 total: {
            //                     show: true,
            //                     label: 'AQI',
            //                     fontSize: '30px',
            //                     fontWeight: 'bold',
            //                     color: chartColor,
            //                     formatter: function (w) {
            //                         const totalValue = outValue;
            //                         // Add "Good" or "Bad" to label with a unique identifier
            //                         return totalValue + (totalValue > 50 ? " Good" : " Bad");
            //                     }
            //                 }
            //             },
            //             track: {
            //                 background: '#494949' //'#2F5AD0'
            //             }
            //         }
            //     },
            //     colors: [chartColor],
            //     labels: ['AQI'],
            //     legend: {
            //         show: true,
            //         floating: true,
            //         fontSize: '16px',
            //         position: 'top',
            //         horizontalAlign: 'center',
            //         offsetY: 10,
            //         labels: { color: '#000000' },
            //         markers: { size: 0 },
            //         formatter: function (seriesName, opts) {
            //             return seriesName;
            //         },
            //         itemMargin: { vertical: 3 }
            //     },
            //     responsive: [{
            //         breakpoint: 480,
            //         options: {
            //             legend: { show: false }
            //         }
            //     }]
            // };
            // // Create a new chart instance with the updated options
            // aqiCharts = new ApexCharts(document.querySelector("#chartdiv4"), options);
            // aqiCharts.render();
            options = (cov_2f40l1qxdw.s[1179]++, {
              series: [formattedValue],
              chart: {
                height: "100%",
                type: 'radialBar',
                events: {
                  rendered: function rendered(chartContext, config) {
                    cov_2f40l1qxdw.f[108]++;
                    // Locate the text element after render
                    var totalValue = (cov_2f40l1qxdw.s[1180]++, config.globals.seriesTotals.reduce(function (a, b) {
                      cov_2f40l1qxdw.f[109]++;
                      cov_2f40l1qxdw.s[1181]++;
                      return a + b;
                    }, 0));
                    var totalTextElement = (cov_2f40l1qxdw.s[1182]++, document.querySelector("#chartdiv4 .apexcharts-text.apexcharts-datalabel-label"));

                    // Apply color based on condition
                    cov_2f40l1qxdw.s[1183]++;
                    if (totalTextElement) {
                      cov_2f40l1qxdw.b[105][0]++;
                      cov_2f40l1qxdw.s[1184]++;
                      totalTextElement.style.fill = totalValue > 50 ? (cov_2f40l1qxdw.b[106][0]++, 'green') : (cov_2f40l1qxdw.b[106][1]++, 'red');
                    } else {
                      cov_2f40l1qxdw.b[105][1]++;
                    }
                  }
                },
                offsetY: -20
              },
              plotOptions: {
                radialBar: {
                  offsetY: 20,
                  startAngle: 0,
                  endAngle: 360,
                  hollow: {
                    margin: 5,
                    size: '65%',
                    background: 'transparent'
                  },
                  dataLabels: {
                    name: {
                      show: true
                    },
                    value: {
                      show: true
                    },
                    total: {
                      show: true,
                      label: 'AQI',
                      fontSize: '30px',
                      fontWeight: 'bold',
                      color: '#000000',
                      formatter: function formatter(w) {
                        cov_2f40l1qxdw.f[110]++;
                        var totalValue = (cov_2f40l1qxdw.s[1185]++, w.globals.seriesTotals.reduce(function (a, b) {
                          cov_2f40l1qxdw.f[111]++;
                          cov_2f40l1qxdw.s[1186]++;
                          return a + b;
                        }, 0));
                        // Add "Good" or "Bad" to label with a unique identifier
                        cov_2f40l1qxdw.s[1187]++;
                        return totalValue + (totalValue > 50 ? (cov_2f40l1qxdw.b[107][0]++, " Good") : (cov_2f40l1qxdw.b[107][1]++, " Bad"));
                      }
                    }
                  },
                  track: {
                    background: '#2F5AD0'
                  }
                }
              },
              colors: ["#FF6600"],
              labels: ['AQI'],
              legend: {
                show: true,
                floating: true,
                fontSize: '16px',
                position: 'top',
                horizontalAlign: 'center',
                offsetY: 10,
                labels: {
                  useSeriesColors: true
                },
                markers: {
                  size: 0
                },
                formatter: function formatter(seriesName, opts) {
                  cov_2f40l1qxdw.f[112]++;
                  cov_2f40l1qxdw.s[1188]++;
                  return seriesName;
                },
                itemMargin: {
                  vertical: 3
                }
              },
              responsive: [{
                breakpoint: 480,
                options: {
                  legend: {
                    show: false
                  }
                }
              }]
            }); // Create and render the chart
            cov_2f40l1qxdw.s[1189]++;
            aqiCharts = new ApexCharts(document.querySelector("#chartdiv4"), options);
            cov_2f40l1qxdw.s[1190]++;
            aqiCharts.render();
          case 21:
          case "end":
            return _context73.stop();
        }
      }, _callee65);
    }));
    return _createPieChart.apply(this, arguments);
  }
  var chartInterval; // Interval ID

  // Start the interval to periodically update the chart
  function startInterval() {
    cov_2f40l1qxdw.f[113]++;
    cov_2f40l1qxdw.s[1191]++;
    stopInterval();
    cov_2f40l1qxdw.s[1192]++;
    chartInterval = setInterval(function () {
      cov_2f40l1qxdw.f[114]++;
      cov_2f40l1qxdw.s[1193]++;
      return replaceIndoorChart(createPieChart);
    }, 5000);
    cov_2f40l1qxdw.s[1194]++;
    console.log("Chart update interval started");
  }

  // Stop the interval
  function stopInterval() {
    cov_2f40l1qxdw.f[115]++;
    cov_2f40l1qxdw.s[1195]++;
    if (chartInterval) {
      cov_2f40l1qxdw.b[108][0]++;
      cov_2f40l1qxdw.s[1196]++;
      clearInterval(chartInterval);
      cov_2f40l1qxdw.s[1197]++;
      chartInterval = null;
      cov_2f40l1qxdw.s[1198]++;
      console.log("Chart update interval stopped");
    } else {
      cov_2f40l1qxdw.b[108][1]++;
    }
  }
  cov_2f40l1qxdw.s[1199]++;
  (function () {
    var _initialize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {
      return _regeneratorRuntime().wrap(function _callee19$(_context19) {
        while (1) switch (_context19.prev = _context19.next) {
          case 0:
            cov_2f40l1qxdw.f[116]++;
            cov_2f40l1qxdw.s[1200]++;
            _context19.next = 4;
            return createPieChart();
          case 4:
            cov_2f40l1qxdw.s[1201]++;
            // Create the chart initially
            startInterval(); // Start the interval to update the chart
          case 6:
          case "end":
            return _context19.stop();
        }
      }, _callee19);
    }));
    function initialize() {
      return _initialize.apply(this, arguments);
    }
    return initialize;
  })()();
  var aqiCharts1;
  var aqiCharts2;
  function aqiDonut1() {
    return _aqiDonut.apply(this, arguments);
  } // $('#aqiFloor1').on("click", async function () {
  //     console.log("aqiFloor1 clicked");
  //     // Show .aqiSeparate and hide .aqiAvg
  //     $(".aqiSeparate").show();
  //     console.log($(".aqiSeparate").html());
  //     $(".aqiAvg").hide();
  //     $("#aqiFloor2").show();
  //     $(".aqiBtn").hide();
  //     // Log visibility statuses immediately after changes
  //     console.log("Is .aqiSeparate visible?", $(".aqiSeparate").is(":visible"));
  //     console.log("Is .aqiAvg visible?", $(".aqiAvg").is(":visible"));
  //     console.log("Is #aqiFloor2 visible?", $("#aqiFloor2").is(":visible"));
  //     // Hide the clicked button
  //     $(this).hide();
  //     // Render the chart
  //     await aqiDonut1();  // Assuming this function will render the charts you need in .aqiSeparate
  // });
  // $('#aqiFloor2').on("click", async function () {
  //     console.log("aqiFloor2 clicked");
  //     // Hide .aqiSeparate and show .aqiAvg
  //     $(".aqiSeparate").empty();
  //     $(".aqiSeparate").hide();
  //     console.log($(".aqiSeparate").html());// Explicitly hide .aqiSeparate
  //     console.log("Is .aqiSeparate visible after hide?", $(".aqiSeparate").is(":visible"));
  //     $(".aqiAvg").show();
  //     console.log($(".aqiAvg").html());
  //     $("#aqiFloor1").show();
  //     $(".aqiBtn").show();
  //     // Log visibility statuses after the changes
  //     console.log("Is .aqiSeparate visible?", $(".aqiSeparate").is(":visible"));
  //     console.log("Is .aqiAvg visible?", $(".aqiAvg").is(":visible"));
  //     console.log("Is #aqiFloor1 visible?", $("#aqiFloor1").is(":visible"));
  //     // Hide the clicked button
  //     $(this).hide();
  //     $(".aqiSeparate").hide();  // Assuming this function renders a different chart for .aqiAvg
  //     $(".chart-area").hide(); // Hide the second chart container
  // });
  function _aqiDonut() {
    _aqiDonut = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee66() {
      var scopes, upsData, _i9, _scopes4, scope, response, text, parser, xmlDoc, ups, options, options1;
      return _regeneratorRuntime().wrap(function _callee66$(_context74) {
        while (1) switch (_context74.prev = _context74.next) {
          case 0:
            cov_2f40l1qxdw.f[117]++;
            cov_2f40l1qxdw.s[1202]++;
            // if (aqiCharts1 instanceof ApexCharts) {
            //     console.log("Destroying existing aqiCharts1");
            //     aqiCharts1.destroy(); // Dispose the existing chart if it exists
            // }
            // if (aqiCharts2 instanceof ApexCharts) {
            //     console.log("Destroying existing aqiCharts2");
            //     aqiCharts2.destroy(); // Dispose the existing chart if it exists
            // }
            if ((cov_2f40l1qxdw.b[110][0]++, aqiCharts1) && (cov_2f40l1qxdw.b[110][1]++, aqiCharts2)) {
              cov_2f40l1qxdw.b[109][0]++;
              cov_2f40l1qxdw.s[1203]++;
              if ((cov_2f40l1qxdw.b[112][0]++, aqiCharts1 instanceof ApexCharts) && (cov_2f40l1qxdw.b[112][1]++, aqiCharts2 instanceof ApexCharts)) {
                cov_2f40l1qxdw.b[111][0]++;
                cov_2f40l1qxdw.s[1204]++;
                aqiCharts1.destroy();
                cov_2f40l1qxdw.s[1205]++;
                aqiCharts2.destroy();
              } else {
                cov_2f40l1qxdw.b[111][1]++;
                cov_2f40l1qxdw.s[1206]++;
                aqiCharts.dispose(); // Dispose the existing am4charts instance
              }
            } else {
              cov_2f40l1qxdw.b[109][1]++;
            }
            // https://localhost/obix/config/Drivers/Barclays/IAQ/Floor_32/Floor_32_Avg/
            // https://localhost/obix/config/Drivers/Barclays/IAQ/Floor_33/Floor_33_Avg/
            scopes = (cov_2f40l1qxdw.s[1207]++, ['Floor_32/Floor_32_Avg', 'Floor_33/Floor_33_Avg']);
            upsData = (cov_2f40l1qxdw.s[1208]++, []); // Loop through each scope to fetch and process data
            cov_2f40l1qxdw.s[1209]++;
            _i9 = 0, _scopes4 = scopes;
          case 7:
            if (!(_i9 < _scopes4.length)) {
              _context74.next = 35;
              break;
            }
            scope = _scopes4[_i9];
            cov_2f40l1qxdw.s[1210]++;
            _context74.prev = 10;
            cov_2f40l1qxdw.s[1211]++;
            _context74.next = 14;
            return fetch(" ".concat(url, "/obix/config/Drivers/Barclays/IAQ/").concat(scope));
          case 14:
            response = _context74.sent;
            cov_2f40l1qxdw.s[1212]++;
            console.log("aqi response " + response);
            cov_2f40l1qxdw.s[1213]++;
            _context74.next = 20;
            return response.text();
          case 20:
            text = _context74.sent;
            // Parse the XML response
            parser = (cov_2f40l1qxdw.s[1214]++, new DOMParser());
            xmlDoc = (cov_2f40l1qxdw.s[1215]++, parser.parseFromString(text, "application/xml")); // Extract values for ups, hvac, and rtltg
            ups = (cov_2f40l1qxdw.s[1216]++, parseFloat(xmlDoc.querySelector('real[name="out"]').getAttribute('display').split(' ')[0]));
            cov_2f40l1qxdw.s[1217]++;
            upsData.push(ups);
            _context74.next = 32;
            break;
          case 28:
            _context74.prev = 28;
            _context74.t0 = _context74["catch"](10);
            cov_2f40l1qxdw.s[1218]++;
            console.error("Error fetching data for ".concat(scope, ":"), _context74.t0);
          case 32:
            _i9++;
            _context74.next = 7;
            break;
          case 35:
            options = (cov_2f40l1qxdw.s[1219]++, {
              series: [upsData[0]],
              chart: {
                height: 225,
                // Adjusted height
                type: 'radialBar',
                offsetY: 40
              },
              plotOptions: {
                radialBar: {
                  hollow: {
                    margin: 5,
                    size: '70%'
                  },
                  dataLabels: {
                    name: {
                      show: false,
                      color: '#000'
                    },
                    value: {
                      show: true,
                      color: '#000',
                      offsetY: 10,
                      fontSize: '20px',
                      formatter: function formatter(val) {
                        cov_2f40l1qxdw.f[118]++;
                        cov_2f40l1qxdw.s[1220]++;
                        return parseInt(val); // Remove the % symbol by returning only the value
                      }
                    }
                  },
                  track: {
                    background: '#494949',
                    strokeWidth: '100%',
                    margin: 0
                  },
                  offsetY: 30
                }
              },
              fill: {
                type: 'solid',
                // Changed to solid
                colors: ['#FCE22A'] // Solid red color
              },
              colors: ["#FCE22A"],
              labels: ['Floor 32'],
              legend: {
                show: true,
                floating: true,
                fontSize: '16px',
                position: 'top',
                horizontalAlign: 'center',
                offsetY: 10,
                labels: {
                  useSeriesColors: true
                },
                markers: {
                  size: 0
                },
                formatter: function formatter(seriesName, opts) {
                  cov_2f40l1qxdw.f[119]++;
                  cov_2f40l1qxdw.s[1221]++;
                  return seriesName;
                },
                itemMargin: {
                  vertical: 3
                }
              }
            });
            cov_2f40l1qxdw.s[1222]++;
            aqiCharts1 = new ApexCharts(document.querySelector("#completionRateChart"), options);
            cov_2f40l1qxdw.s[1223]++;
            _context74.next = 41;
            return aqiCharts1.render();
          case 41:
            options1 = (cov_2f40l1qxdw.s[1224]++, {
              series: [upsData[1]],
              chart: {
                height: 225,
                // Adjusted height
                type: 'radialBar',
                offsetY: 40
              },
              plotOptions: {
                radialBar: {
                  hollow: {
                    margin: 5,
                    size: '70%'
                  },
                  dataLabels: {
                    name: {
                      show: false,
                      color: '#000'
                    },
                    value: {
                      show: true,
                      color: '#000',
                      offsetY: 10,
                      fontSize: '20px',
                      formatter: function formatter(val) {
                        cov_2f40l1qxdw.f[120]++;
                        cov_2f40l1qxdw.s[1225]++;
                        return parseInt(val); // Remove the % symbol by returning only the value
                      }
                    }
                  },
                  track: {
                    background: '#494949',
                    strokeWidth: '100%',
                    margin: 0
                  },
                  offsetY: 30
                }
              },
              fill: {
                type: 'solid',
                // Changed to solid
                colors: ['#77E4C8'] // Solid red color
              },
              colors: ["#77E4C8"],
              labels: ['Floor 33'],
              legend: {
                show: true,
                floating: true,
                fontSize: '16px',
                position: 'top',
                horizontalAlign: 'center',
                offsetY: 10,
                labels: {
                  useSeriesColors: true
                },
                markers: {
                  size: 0
                },
                formatter: function formatter(seriesName, opts) {
                  cov_2f40l1qxdw.f[121]++;
                  cov_2f40l1qxdw.s[1226]++;
                  return seriesName;
                },
                itemMargin: {
                  vertical: 3
                }
              }
            });
            cov_2f40l1qxdw.s[1227]++;
            aqiCharts2 = new ApexCharts(document.querySelector("#bounceRateChart"), options1);
            cov_2f40l1qxdw.s[1228]++;
            _context74.next = 47;
            return aqiCharts2.render();
          case 47:
          case "end":
            return _context74.stop();
        }
      }, _callee66, null, [[10, 28]]);
    }));
    return _aqiDonut.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[1229]++;
  $('#aqiFloor1').on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {
    return _regeneratorRuntime().wrap(function _callee20$(_context20) {
      while (1) switch (_context20.prev = _context20.next) {
        case 0:
          cov_2f40l1qxdw.f[122]++;
          cov_2f40l1qxdw.s[1230]++;
          console.log("aqiFloor1 clicked");
          cov_2f40l1qxdw.s[1231]++;
          $(".aqiSeparate").show();
          cov_2f40l1qxdw.s[1232]++;
          $(".aqiAvg").hide();
          cov_2f40l1qxdw.s[1233]++;
          $("#aqiFloor2").show();
          cov_2f40l1qxdw.s[1234]++;
          $(".aqiBtn").hide();
          //$(this).hide();
          //stopInterval();
          //chartInterval = setInterval(() => aqiDonut1, 1000);
          cov_2f40l1qxdw.s[1235]++;
          _context20.next = 14;
          return aqiDonut1();
        case 14:
          cov_2f40l1qxdw.s[1236]++;
          setInterval(aqiDonut1, 3000);
          // await aqiDonut2();
        case 16:
        case "end":
          return _context20.stop();
      }
    }, _callee20);
  })));
  cov_2f40l1qxdw.s[1237]++;
  $('#aqiFloor2').on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {
    return _regeneratorRuntime().wrap(function _callee21$(_context21) {
      while (1) switch (_context21.prev = _context21.next) {
        case 0:
          cov_2f40l1qxdw.f[123]++;
          cov_2f40l1qxdw.s[1238]++;
          console.log("aqiFloor2 clicked");
          cov_2f40l1qxdw.s[1239]++;
          $(".aqiSeparate").hide();
          cov_2f40l1qxdw.s[1240]++;
          $(".aqiAvg").show();
          cov_2f40l1qxdw.s[1241]++;
          $("#aqiFloor1").show();
          cov_2f40l1qxdw.s[1242]++;
          $(".aqiBtn").show();
          //$(this).hide();
        case 11:
        case "end":
          return _context21.stop();
      }
    }, _callee21);
  })));
  function createBarChart() {
    return _createBarChart2.apply(this, arguments);
  }
  function _createBarChart2() {
    _createBarChart2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee68() {
      return _regeneratorRuntime().wrap(function _callee68$(_context77) {
        while (1) switch (_context77.prev = _context77.next) {
          case 0:
            cov_2f40l1qxdw.f[124]++;
            cov_2f40l1qxdw.s[1243]++;
            // am4core.ready(async function () {

            //     const startDateValue = document.getElementById("startDateIAQ").value;
            //     const endDateValue = document.getElementById("endDateIAQ").value;
            //     let waterValues = [];
            //     // const url = "https://localhost";

            //     // Fetch data asynchronously for each scope

            //         const urlToFetch = `${url}/obix/histories/SqlServerDatabase/domestic/~historyQuery?start=${startDateValue}T23:59:59.000+05:30&end=${endDateValue}T23:59:59.000+05:30`;
            //         console.log(urlToFetch);
            //         try {
            //             const response = await fetch(urlToFetch);
            //             console.log(response);

            //         const text = await response.text();

            //         // Parse the XML data
            //             const parser = new DOMParser();
            //             const xmlDoc = parser.parseFromString(text, "text/xml");
            //             const objs = xmlDoc.getElementsByTagName("obj");

            //             for (let i = 0; i < objs.length; i++) {
            //                 const obj = objs[i];
            //                 const abstime = obj.getElementsByTagName("abstime")[0];
            //                 const real = obj.getElementsByTagName("real")[0];

            //                 if (abstime && real) {
            //                     const dateText = abstime.getAttribute("val");
            //                     const valueText = real.getAttribute("val");

            //                     if (valueText && dateText) {
            //                         const value = parseFloat(valueText).toFixed(2);
            //                         const date = new Date(dateText);
            //                         const formattedDate = date.toLocaleDateString("en-US", {
            //                             month: "short",
            //                             day: "numeric"
            //                         });
            //                         const dateStr = date.toDateString();  // Use toDateString to compare without time

            //                         const existingEntry = waterValues.find(entry => entry.date.toDateString() === dateStr);

            //                         if (existingEntry) {
            //                             // Update the existing entry's value
            //                             existingEntry.value = parseFloat(value);
            //                         } else {
            //                             // Add a new entry with date and value
            //                             waterValues.push({
            //                                 date: date,
            //                                 value: parseFloat(value)
            //                             });
            //                         }
            //                     }
            //                 }
            //             }
            //         } catch (error) {
            //             console.error(`Error fetching data for `);
            //         }

            //     // Themes begin
            //     am4core.useTheme(am4themes_animated);
            //     // Themes end

            //     // Create chart instance
            //     aqiCharts = am4core.create("chartdiv4", am4charts.XYChart);
            //     aqiCharts.paddingRight = 20;

            //     // Add data
            //     aqiCharts.data = waterValues;
            //     console.log(aqiCharts.data);
            //     waterValues.forEach(item => {
            //         item.date = new Date(item.date).getTime();  // Convert to timestamp
            //         console.log("item date (timestamp): " + item.date);

            //         // Convert timestamp back to a readable date
            //         const formattedDate = new Date(item.date).toLocaleDateString("en-US", {
            //             // year: "numeric",
            //             month: "short",
            //             day: "numeric"
            //         });
            //         item.date = formattedDate;
            //         console.log("Formatted item date: " + formattedDate);
            //     });

            //     // Create axes
            //     var categoryAxis = aqiCharts.xAxes.push(new am4charts.CategoryAxis());
            //     categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
            //     categoryAxis.renderer.minGridDistance = 80;
            //     // categoryAxis.renderer.grid.template.location = 2;
            //     // categoryAxis.startLocation = 1;
            //     // categoryAxis.endLocation = 1.5;
            //     categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
            //     categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels

            //     var valueAxis = aqiCharts.yAxes.push(new am4charts.ValueAxis());
            //     valueAxis.baseValue = 0;

            //     // Function to create series
            //     function createSeries(valueField, name, color) {
            //         var series = aqiCharts.series.push(new am4charts.ColumnSeries());
            //         series.dataFields.valueY = valueField;
            //         series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
            //         series.name = name;
            //         series.strokeWidth = 2;
            //         series.tensionX = 0.77;
            //         series.stroke = color;

            //         // Bullet to display tooltips
            //         var bullet = series.bullets.push(new am4charts.Bullet());
            //         bullet.tooltipText = "{valueY}";

            //         bullet.adapter.add("fill", function (_fill, target) {
            //             // If the value is negative, color the bullet red, else use the series color
            //             if (target.dataItem.valueY < 0) {
            //                 return am4core.color("#FF6600"); // Red for negative values
            //             }
            //             return series.stroke; // Use the series stroke color (the color passed to createSeries)
            //         });

            //         return series;
            //     }
            //     aqiCharts.legend = new am4charts.Legend();
            //     aqiCharts.legend.position = "top";
            //     aqiCharts.legend.paddingBottom = 10;
            //     aqiCharts.legend.labels.template.maxWidth = 95;
            //     // Create three series with different data fields and colors
            //     createSeries("value", "Power", "#FF6600");

            //     // Add scrollbar
            //     // var scrollbarX = new am4charts.XYChartScrollbar();
            //     // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
            //     // chart.scrollbarX = scrollbarX;
            //     // scrollbarX.height = 30;
            //     aqiCharts.scrollbarX = new am4core.Scrollbar();
            //     aqiCharts.scrollbarX.marginBottom = 20;

            //     aqiCharts.cursor = new am4charts.XYCursor();
            //     aqiCharts.logo.disabled = true;

            // });

            //     am4core.ready(async function () {
            //         const startDateValue = document.getElementById("startDateIAQ").value;
            //         const endDateValue = document.getElementById("endDateIAQ").value;
            //         const isValid = await validateDateRange(startDateValue, endDateValue);
            // if (!isValid) {
            //     // If the date range is invalid, stop execution
            //     return;
            // }
            //         let waterValues = [];

            //         // Fetch data asynchronously
            //         const urlToFetch = `${url}/obix/histories/Barclays_Sup/IAQ$2fA_IAQ_Daily/~historyQuery?start=${startDateValue}T23:59:59.000+05:30&end=${endDateValue}T23:59:59.000+05:30`;
            //         console.log(urlToFetch);
            //         try {
            //             const response = await fetch(urlToFetch);
            //             console.log(response);

            //             const text = await response.text();
            //             const parser = new DOMParser();
            //             const xmlDoc = parser.parseFromString(text, "text/xml");
            //             const objs = xmlDoc.getElementsByTagName("obj");

            //             for (let i = 0; i < objs.length; i++) {
            //                 const obj = objs[i];
            //                 const abstime = obj.getElementsByTagName("abstime")[0];
            //                 const real = obj.getElementsByTagName("real")[0];

            //                 if (abstime && real) {
            //                     const dateText = abstime.getAttribute("val");
            //                     const valueText = real.getAttribute("val");

            //                     if (valueText && dateText) {
            //                         const value = parseFloat(valueText).toFixed(2);
            //                         const date = new Date(dateText);
            //                         const formattedDate = date.toLocaleDateString("en-US", {
            //                             month: "short",
            //                             day: "numeric"
            //                         });
            //                         const dateStr = date.toDateString();  // Use toDateString to compare without time

            //                         const existingEntry = waterValues.find(entry => entry.date.toDateString() === dateStr);

            //                         if (existingEntry) {
            //                             // Update the existing entry's value
            //                             existingEntry.value = parseFloat(value);
            //                         } else {
            //                             // Add a new entry with date and value
            //                             waterValues.push({
            //                                 date: date,
            //                                 value: parseFloat(value)
            //                             });
            //                         }
            //                     }
            //                 }
            //             }
            //         } catch (error) {
            //             console.error(`Error fetching data: ${error}`);
            //         }

            //         // Create chart instance
            //         am4core.useTheme(am4themes_animated);
            //         aqiCharts = am4core.create("chartdiv4", am4charts.XYChart);
            //         aqiCharts.logo.disabled = true;
            //         // Add scrollbar
            //         aqiCharts.scrollbarX = new am4core.Scrollbar();
            //         aqiCharts.scrollbarX.marginBottom = 20;

            //         aqiCharts.cursor = new am4charts.XYCursor();
            //         aqiCharts.paddingRight = 20;

            //         // Add data to chart
            //         aqiCharts.data = waterValues;
            //         waterValues.forEach(item => {
            //             item.date = new Date(item.date).getTime();  // Convert to timestamp

            //             const formattedDate = new Date(item.date).toLocaleDateString("en-US", {
            //                 month: "short",
            //                 day: "numeric"
            //             });
            //             item.date = formattedDate;
            //         });

            //         // Create axes
            //         var categoryAxis = aqiCharts.xAxes.push(new am4charts.CategoryAxis());
            //         categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
            //         categoryAxis.renderer.minGridDistance = 80;
            //         categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
            //         categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels

            //         var valueAxis = aqiCharts.yAxes.push(new am4charts.ValueAxis());
            //         valueAxis.baseValue = 0;

            //         // Function to create series with the color #FF6600
            //         function createSeries(valueField, name, color) {
            //             var series = aqiCharts.series.push(new am4charts.ColumnSeries());
            //             series.dataFields.valueY = valueField;
            //             series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
            //             series.name = name;
            //             series.strokeWidth = 2;
            //             series.tensionX = 0.77;
            //             series.columns.template.fill = am4core.color(color); // Apply color to the column fill
            //             series.columns.template.stroke = am4core.color(color);
            //             series.columns.template.tooltipText = "{categoryX}: [bold]{valueY}[/]";

            //             // Bullet to display tooltips
            //             var bullet = series.bullets.push(new am4charts.Bullet());

            //             bullet.adapter.add("fill", function (fill, target) {
            //                 // If the value is negative, color the bullet with #FF6600, else use the series color
            //                 if (target.dataItem.valueY < 0) {
            //                     return am4core.color("#FF6600"); // Color the bullet with #FF6600
            //                 }
            //                 return series.stroke; // Use the series stroke color (the color passed to createSeries)
            //             });

            //             return series;
            //         }

            //         // Add legend and series
            //         aqiCharts.legend = new am4charts.Legend();
            //         aqiCharts.legend.position = "top";
            //         aqiCharts.legend.paddingBottom = 10;
            //         aqiCharts.legend.labels.template.maxWidth = 95;
            //         createSeries("value", "AQI", "#FF6600");  // Apply color to series

            //     });

            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee67() {
              var startDateValue, endDateValue, isValid, waterValues, urlToFetch, response, text, parser, xmlDoc, objs, _loop9, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee67$(_context76) {
                while (1) switch (_context76.prev = _context76.next) {
                  case 0:
                    createSeries = function _createSeries9(valueField, name, color) {
                      cov_2f40l1qxdw.f[128]++;
                      var series = (cov_2f40l1qxdw.s[1296]++, aqiCharts.series.push(new am4charts.ColumnSeries()));
                      cov_2f40l1qxdw.s[1297]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[1298]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[1299]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[1300]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[1301]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[1302]++;
                      series.columns.template.fill = am4core.color(color); // Apply color to the column fill
                      cov_2f40l1qxdw.s[1303]++;
                      series.columns.template.stroke = am4core.color(color);
                      cov_2f40l1qxdw.s[1304]++;
                      series.columns.template.tooltipText = "{categoryX}: [bold]{valueY}[/]";

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[1305]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[1306]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[129]++;
                        cov_2f40l1qxdw.s[1307]++;
                        // If the value is negative, color the bullet with #FF6600, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[119][0]++;
                          cov_2f40l1qxdw.s[1308]++;
                          return am4core.color("#FF6600"); // Color the bullet with #FF6600
                        } else {
                          cov_2f40l1qxdw.b[119][1]++;
                        }
                        cov_2f40l1qxdw.s[1309]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[1310]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[125]++;
                    startDateValue = (cov_2f40l1qxdw.s[1244]++, document.getElementById("startDateIAQ").value);
                    endDateValue = (cov_2f40l1qxdw.s[1245]++, document.getElementById("endDateIAQ").value);
                    cov_2f40l1qxdw.s[1246]++;
                    _context76.next = 7;
                    return validateDateRange(startDateValue, endDateValue);
                  case 7:
                    isValid = _context76.sent;
                    cov_2f40l1qxdw.s[1247]++;
                    if (isValid) {
                      _context76.next = 15;
                      break;
                    }
                    cov_2f40l1qxdw.b[113][0]++;
                    cov_2f40l1qxdw.s[1248]++;
                    return _context76.abrupt("return");
                  case 15:
                    cov_2f40l1qxdw.b[113][1]++;
                  case 16:
                    waterValues = (cov_2f40l1qxdw.s[1249]++, []); // Fetch data asynchronously
                    urlToFetch = (cov_2f40l1qxdw.s[1250]++, "".concat(url, "/obix/histories/Barclays_Sup/IAQ$2fA_IAQ_Daily/~historyQuery?start=").concat(startDateValue, "T23:59:59.000+05:30&end=").concat(endDateValue, "T23:59:59.000+05:30"));
                    cov_2f40l1qxdw.s[1251]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[1252]++;
                    _context76.prev = 21;
                    cov_2f40l1qxdw.s[1253]++;
                    _context76.next = 25;
                    return fetch(urlToFetch);
                  case 25:
                    response = _context76.sent;
                    cov_2f40l1qxdw.s[1254]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[1255]++;
                    _context76.next = 31;
                    return response.text();
                  case 31:
                    text = _context76.sent;
                    parser = (cov_2f40l1qxdw.s[1256]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[1257]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[1258]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[1259]++;
                    _loop9 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop9() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate9, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop9$(_context75) {
                        while (1) switch (_context75.prev = _context75.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[1260]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[1261]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[1262]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[1263]++;
                            if ((cov_2f40l1qxdw.b[115][0]++, abstime) && (cov_2f40l1qxdw.b[115][1]++, real)) {
                              cov_2f40l1qxdw.b[114][0]++;
                              dateText = (cov_2f40l1qxdw.s[1264]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[1265]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[1266]++;
                              if ((cov_2f40l1qxdw.b[117][0]++, valueText) && (cov_2f40l1qxdw.b[117][1]++, dateText)) {
                                cov_2f40l1qxdw.b[116][0]++;
                                value = (cov_2f40l1qxdw.s[1267]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[1268]++, new Date(dateText));
                                _formattedDate9 = (cov_2f40l1qxdw.s[1269]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[1270]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[1271]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[126]++;
                                  cov_2f40l1qxdw.s[1272]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[1273]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[118][0]++;
                                  cov_2f40l1qxdw.s[1274]++;
                                  // Update the existing entry's value
                                  existingEntry.value = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[118][1]++;
                                  cov_2f40l1qxdw.s[1275]++;
                                  // Add a new entry with date and value
                                  waterValues.push({
                                    date: date,
                                    value: parseFloat(value)
                                  });
                                }
                              } else {
                                cov_2f40l1qxdw.b[116][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[114][1]++;
                            }
                          case 5:
                          case "end":
                            return _context75.stop();
                        }
                      }, _loop9);
                    });
                    i = 0;
                  case 38:
                    if (!(i < objs.length)) {
                      _context76.next = 43;
                      break;
                    }
                    return _context76.delegateYield(_loop9(), "t0", 40);
                  case 40:
                    i++;
                    _context76.next = 38;
                    break;
                  case 43:
                    _context76.next = 49;
                    break;
                  case 45:
                    _context76.prev = 45;
                    _context76.t1 = _context76["catch"](21);
                    cov_2f40l1qxdw.s[1276]++;
                    console.error("Error fetching data: ".concat(_context76.t1));
                  case 49:
                    cov_2f40l1qxdw.s[1277]++;
                    // Create chart instance
                    am4core.useTheme(am4themes_animated);
                    cov_2f40l1qxdw.s[1278]++;
                    aqiCharts = am4core.create("chartdiv4", am4charts.XYChart);
                    cov_2f40l1qxdw.s[1279]++;
                    aqiCharts.logo.disabled = true;
                    // Add scrollbar
                    cov_2f40l1qxdw.s[1280]++;
                    aqiCharts.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[1281]++;
                    aqiCharts.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[1282]++;
                    aqiCharts.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[1283]++;
                    aqiCharts.paddingRight = 20;

                    // Add data to chart
                    cov_2f40l1qxdw.s[1284]++;
                    aqiCharts.data = waterValues;
                    cov_2f40l1qxdw.s[1285]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[127]++;
                      cov_2f40l1qxdw.s[1286]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp

                      var formattedDate = (cov_2f40l1qxdw.s[1287]++, new Date(item.date).toLocaleDateString("en-US", {
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[1288]++;
                      item.date = formattedDate;
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[1289]++, aqiCharts.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[1290]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[1291]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    cov_2f40l1qxdw.s[1292]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[1293]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[1294]++, aqiCharts.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[1295]++;
                    valueAxis.baseValue = 0;

                    // Function to create series with the color #FF6600
                    // Add legend and series
                    cov_2f40l1qxdw.s[1311]++;
                    aqiCharts.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[1312]++;
                    aqiCharts.legend.position = "top";
                    cov_2f40l1qxdw.s[1313]++;
                    aqiCharts.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[1314]++;
                    aqiCharts.legend.labels.template.maxWidth = 95;
                    cov_2f40l1qxdw.s[1315]++;
                    createSeries("value", "AQI", "#FF6600"); // Apply color to series
                  case 89:
                  case "end":
                    return _context76.stop();
                }
              }, _callee67, null, [[21, 45]]);
            })));
          case 3:
          case "end":
            return _context77.stop();
        }
      }, _callee68);
    }));
    return _createBarChart2.apply(this, arguments);
  }
  function aqiBarChart() {
    return _aqiBarChart.apply(this, arguments);
  }
  function _aqiBarChart() {
    _aqiBarChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee69() {
      var months, last12Months, chartData, _iterator7, _step7, month, _url2, response, text, parser, xml, list, abstime, realValue, abstimeDate, formattedAbstime, existingStyle, options;
      return _regeneratorRuntime().wrap(function _callee69$(_context78) {
        while (1) switch (_context78.prev = _context78.next) {
          case 0:
            cov_2f40l1qxdw.f[130]++;
            cov_2f40l1qxdw.s[1316]++;
            _context78.prev = 2;
            // Get the last 12 months
            months = (cov_2f40l1qxdw.s[1317]++, getLast12Months()); // Array of month names for the x-axis (e.g., ["Jan 2023", "Feb 2023", ...])
            last12Months = (cov_2f40l1qxdw.s[1318]++, getLast12Months1()); // Array of objects with `startDate` for the URLs
            cov_2f40l1qxdw.s[1319]++;
            console.log("Last 12 Months (from getLast12Months1):", last12Months);
            chartData = (cov_2f40l1qxdw.s[1320]++, []); // Loop through each month to fetch data
            cov_2f40l1qxdw.s[1321]++;
            _iterator7 = _createForOfIteratorHelper(last12Months);
            _context78.prev = 10;
            _iterator7.s();
          case 12:
            if ((_step7 = _iterator7.n()).done) {
              _context78.next = 54;
              break;
            }
            month = _step7.value;
            _url2 = (cov_2f40l1qxdw.s[1322]++, "".concat(_url2, "/obix/histories/Barclays_Sup/IAQ_Yearly/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1"));
            cov_2f40l1qxdw.s[1323]++;
            _context78.prev = 16;
            cov_2f40l1qxdw.s[1324]++;
            _context78.next = 20;
            return fetch(_url2);
          case 20:
            response = _context78.sent;
            cov_2f40l1qxdw.s[1325]++;
            if (response.ok) {
              _context78.next = 32;
              break;
            }
            cov_2f40l1qxdw.b[120][0]++;
            cov_2f40l1qxdw.s[1326]++;
            console.error("Error fetching data for ".concat(month.startDate, ": HTTP ").concat(response.status));
            cov_2f40l1qxdw.s[1327]++;
            chartData.push(0); // Add 0 for missing data
            cov_2f40l1qxdw.s[1328]++;
            return _context78.abrupt("continue", 52);
          case 32:
            cov_2f40l1qxdw.b[120][1]++;
          case 33:
            cov_2f40l1qxdw.s[1329]++;
            _context78.next = 36;
            return response.text();
          case 36:
            text = _context78.sent;
            parser = (cov_2f40l1qxdw.s[1330]++, new DOMParser());
            xml = (cov_2f40l1qxdw.s[1331]++, parser.parseFromString(text, "application/xml")); // Parse the data
            list = (cov_2f40l1qxdw.s[1332]++, xml.getElementsByTagName("list")[0]);
            abstime = (cov_2f40l1qxdw.s[1333]++, list.getElementsByTagName("abstime")[0]);
            realValue = (cov_2f40l1qxdw.s[1334]++, list.getElementsByTagName("real")[0]);
            cov_2f40l1qxdw.s[1335]++;
            if ((cov_2f40l1qxdw.b[122][0]++, abstime) && (cov_2f40l1qxdw.b[122][1]++, realValue)) {
              cov_2f40l1qxdw.b[121][0]++;
              abstimeDate = (cov_2f40l1qxdw.s[1336]++, new Date(abstime));
              formattedAbstime = (cov_2f40l1qxdw.s[1337]++, "".concat(abstimeDate.getFullYear(), "-").concat(String(abstimeDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(abstimeDate.getDate()).padStart(2, '0')));
              cov_2f40l1qxdw.s[1338]++;
              if (formattedAbstime === month.startDate) {
                cov_2f40l1qxdw.b[123][0]++;
                cov_2f40l1qxdw.s[1339]++;
                chartData.push(parseFloat(realValue).toFixed(2));
              } else {
                cov_2f40l1qxdw.b[123][1]++;
                cov_2f40l1qxdw.s[1340]++;
                chartData.push(0); // Add 0 if no matching date
              }
            } else {
              cov_2f40l1qxdw.b[121][1]++;
              cov_2f40l1qxdw.s[1341]++;
              chartData.push(0); // Add 0 for missing values
            }
            _context78.next = 52;
            break;
          case 46:
            _context78.prev = 46;
            _context78.t0 = _context78["catch"](16);
            cov_2f40l1qxdw.s[1342]++;
            console.error("Error processing data for ".concat(month.startDate, ":"), _context78.t0);
            cov_2f40l1qxdw.s[1343]++;
            chartData.push(0); // Add 0 in case of errors
          case 52:
            _context78.next = 12;
            break;
          case 54:
            _context78.next = 59;
            break;
          case 56:
            _context78.prev = 56;
            _context78.t1 = _context78["catch"](10);
            _iterator7.e(_context78.t1);
          case 59:
            _context78.prev = 59;
            _iterator7.f();
            return _context78.finish(59);
          case 62:
            existingStyle = (cov_2f40l1qxdw.s[1344]++, document.getElementById('chartdiv4-styles'));
            cov_2f40l1qxdw.s[1345]++;
            if (existingStyle) {
              cov_2f40l1qxdw.b[124][0]++;
              cov_2f40l1qxdw.s[1346]++;
              existingStyle.remove();
            } else {
              cov_2f40l1qxdw.b[124][1]++;
            }
            // Configure the bar chart options
            options = (cov_2f40l1qxdw.s[1347]++, {
              series: [{
                name: 'Occupancy Efficiency',
                data: chartData // Data for the chart
              }],
              chart: {
                type: 'bar',
                height: '100%',
                toolbar: {
                  show: false
                }
              },
              plotOptions: {
                bar: {
                  horizontal: false,
                  columnWidth: '55%',
                  endingShape: 'rounded'
                }
              },
              colors: ["#FF6600"],
              dataLabels: {
                enabled: false
              },
              stroke: {
                show: true,
                width: 0,
                colors: ['transparent']
              },
              xaxis: {
                categories: months // Use month names as x-axis categories
              },
              grid: {
                show: true // Disable grid lines
              },
              tooltip: {
                y: {
                  formatter: function formatter(val) {
                    cov_2f40l1qxdw.f[131]++;
                    cov_2f40l1qxdw.s[1348]++;
                    return "".concat(val); // Customize tooltip value
                  }
                }
              },
              legend: {
                position: 'top',
                horizontalAlign: 'center',
                labels: {
                  colors: ['#000000'] // Customize legend label color
                }
              }
            });
            cov_2f40l1qxdw.s[1349]++;
            console.log("Creating bar chart...");
            cov_2f40l1qxdw.s[1350]++;
            aqiCharts = new ApexCharts(document.querySelector("#chartdiv4"), options);
            cov_2f40l1qxdw.s[1351]++;
            aqiCharts.render();
            _context78.next = 78;
            break;
          case 74:
            _context78.prev = 74;
            _context78.t2 = _context78["catch"](2);
            cov_2f40l1qxdw.s[1352]++;
            console.error("Error creating bar chart:", _context78.t2);
          case 78:
          case "end":
            return _context78.stop();
        }
      }, _callee69, null, [[2, 74], [10, 56, 59, 62], [16, 46]]);
    }));
    return _aqiBarChart.apply(this, arguments);
  }
  function lineChartMonthlyAqi() {
    return _lineChartMonthlyAqi.apply(this, arguments);
  } // $("#startDateIAQ, #endDateIAQ").on("change", async function () {
  //       // await createBarChart();
  //       st
  //       await replaceIndoorChart(createBarChart);
  //   });
  //   $("#sav_daily_iaq").on("click", async function () {
  //       clearDateInputsAqi();
  //       await replaceIndoorChart(createPieChart);
  //   });
  //   $("#sav_monthly_iaq").on("click", async function () {
  //       clearDateInputsAqi();
  //       await replaceIndoorChart(lineChartMonthlyAqi);
  //   });
  //   $("#sav_yearly_iaq").on("click", async function () {
  //       clearDateInputsAqi();
  //       // await aqiBarChart();
  //       await replaceIndoorChart(aqiBarChart);
  //   });
  function _lineChartMonthlyAqi() {
    _lineChartMonthlyAqi = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee71() {
      return _regeneratorRuntime().wrap(function _callee71$(_context81) {
        while (1) switch (_context81.prev = _context81.next) {
          case 0:
            cov_2f40l1qxdw.f[132]++;
            cov_2f40l1qxdw.s[1353]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee70() {
              var today, currentMonth, startDate, endDate, startISO, endISO, waterValues, urlToFetch, response, text, parser, xmlDoc, objs, _loop10, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee70$(_context80) {
                while (1) switch (_context80.prev = _context80.next) {
                  case 0:
                    createSeries = function _createSeries10(valueField, name, color) {
                      cov_2f40l1qxdw.f[136]++;
                      var series = (cov_2f40l1qxdw.s[1407]++, aqiCharts.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[1408]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[1409]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[1410]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[1411]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[1412]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[1413]++;
                      series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[1414]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[1415]++;
                      bullet.tooltipText = "{categoryX}:{valueY}";
                      cov_2f40l1qxdw.s[1416]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[137]++;
                        cov_2f40l1qxdw.s[1417]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[130][0]++;
                          cov_2f40l1qxdw.s[1418]++;
                          return am4core.color("#FF6600"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[130][1]++;
                        }
                        cov_2f40l1qxdw.s[1419]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[1420]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[133]++;
                    today = (cov_2f40l1qxdw.s[1354]++, new Date());
                    currentMonth = (cov_2f40l1qxdw.s[1355]++, today.getMonth()); // Set startDate and endDate to the previous month
                    startDate = (cov_2f40l1qxdw.s[1356]++, new Date(today.getFullYear(), currentMonth - 1, 1));
                    endDate = (cov_2f40l1qxdw.s[1357]++, new Date(today.getFullYear(), currentMonth, 0));
                    startISO = (cov_2f40l1qxdw.s[1358]++, "".concat(startDate.getFullYear(), "-").concat(String(startDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(startDate.getDate()).padStart(2, '0')));
                    endISO = (cov_2f40l1qxdw.s[1359]++, "".concat(endDate.getFullYear(), "-").concat(String(endDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(endDate.getDate()).padStart(2, '0')));
                    waterValues = (cov_2f40l1qxdw.s[1360]++, []); // const url = "https://localhost";
                    // Fetch data asynchronously for each scope
                    urlToFetch = (cov_2f40l1qxdw.s[1361]++, "".concat(url, "/obix/histories/Barclays_Sup/IAQ_Daily/~historyQuery?start=").concat(startISO, "T23:59:59.000+05:30&end=").concat(endISO, "T23:59:59.000+05:30"));
                    cov_2f40l1qxdw.s[1362]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[1363]++;
                    _context80.prev = 13;
                    cov_2f40l1qxdw.s[1364]++;
                    _context80.next = 17;
                    return fetch(urlToFetch);
                  case 17:
                    response = _context80.sent;
                    cov_2f40l1qxdw.s[1365]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[1366]++;
                    _context80.next = 23;
                    return response.text();
                  case 23:
                    text = _context80.sent;
                    // Parse the XML data
                    parser = (cov_2f40l1qxdw.s[1367]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[1368]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[1369]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[1370]++;
                    _loop10 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop10() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate10, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop10$(_context79) {
                        while (1) switch (_context79.prev = _context79.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[1371]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[1372]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[1373]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[1374]++;
                            if ((cov_2f40l1qxdw.b[126][0]++, abstime) && (cov_2f40l1qxdw.b[126][1]++, real)) {
                              cov_2f40l1qxdw.b[125][0]++;
                              dateText = (cov_2f40l1qxdw.s[1375]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[1376]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[1377]++;
                              if ((cov_2f40l1qxdw.b[128][0]++, valueText) && (cov_2f40l1qxdw.b[128][1]++, dateText)) {
                                cov_2f40l1qxdw.b[127][0]++;
                                value = (cov_2f40l1qxdw.s[1378]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[1379]++, new Date(dateText));
                                _formattedDate10 = (cov_2f40l1qxdw.s[1380]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[1381]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[1382]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[134]++;
                                  cov_2f40l1qxdw.s[1383]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[1384]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[129][0]++;
                                  cov_2f40l1qxdw.s[1385]++;
                                  // Update the existing entry's value
                                  existingEntry.value = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[129][1]++;
                                  cov_2f40l1qxdw.s[1386]++;
                                  // Add a new entry with date and value
                                  waterValues.push({
                                    date: date,
                                    value: parseFloat(value)
                                  });
                                }
                              } else {
                                cov_2f40l1qxdw.b[127][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[125][1]++;
                            }
                          case 5:
                          case "end":
                            return _context79.stop();
                        }
                      }, _loop10);
                    });
                    i = 0;
                  case 30:
                    if (!(i < objs.length)) {
                      _context80.next = 35;
                      break;
                    }
                    return _context80.delegateYield(_loop10(), "t0", 32);
                  case 32:
                    i++;
                    _context80.next = 30;
                    break;
                  case 35:
                    _context80.next = 41;
                    break;
                  case 37:
                    _context80.prev = 37;
                    _context80.t1 = _context80["catch"](13);
                    cov_2f40l1qxdw.s[1387]++;
                    console.error("Error fetching data for ");
                  case 41:
                    cov_2f40l1qxdw.s[1388]++;
                    checkDataAvailability(waterValues, "chartdiv4");
                    // Themes begin
                    cov_2f40l1qxdw.s[1389]++;
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    cov_2f40l1qxdw.s[1390]++;
                    aqiCharts = am4core.create("chartdiv4", am4charts.XYChart);
                    cov_2f40l1qxdw.s[1391]++;
                    aqiCharts.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[1392]++;
                    aqiCharts.data = waterValues;
                    cov_2f40l1qxdw.s[1393]++;
                    console.log(aqiCharts.data);
                    cov_2f40l1qxdw.s[1394]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[135]++;
                      cov_2f40l1qxdw.s[1395]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[1396]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[1397]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[1398]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[1399]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[1400]++, aqiCharts.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[1401]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[1402]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[1403]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[1404]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[1405]++, aqiCharts.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[1406]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[1421]++;
                    aqiCharts.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[1422]++;
                    aqiCharts.legend.position = "top";
                    cov_2f40l1qxdw.s[1423]++;
                    aqiCharts.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[1424]++;
                    aqiCharts.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[1425]++;
                    createSeries("value", "AQI", am4core.color("#FF6600"));

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[1426]++;
                    aqiCharts.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[1427]++;
                    aqiCharts.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[1428]++;
                    aqiCharts.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[1429]++;
                    aqiCharts.logo.disabled = true;
                  case 85:
                  case "end":
                    return _context80.stop();
                }
              }, _callee70, null, [[13, 37]]);
            })));
          case 3:
          case "end":
            return _context81.stop();
        }
      }, _callee71);
    }));
    return _lineChartMonthlyAqi.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[1430]++;
  $("#startDateIAQ, #endDateIAQ").on("change", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {
    return _regeneratorRuntime().wrap(function _callee22$(_context22) {
      while (1) switch (_context22.prev = _context22.next) {
        case 0:
          cov_2f40l1qxdw.f[138]++;
          cov_2f40l1qxdw.s[1431]++;
          // await createBarChart();
          stopInterval();
          cov_2f40l1qxdw.s[1432]++;
          _context22.next = 6;
          return replaceIndoorChart(createBarChart);
        case 6:
        case "end":
          return _context22.stop();
      }
    }, _callee22);
  })));
  cov_2f40l1qxdw.s[1433]++;
  $("#sav_daily_iaq").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {
    return _regeneratorRuntime().wrap(function _callee23$(_context23) {
      while (1) switch (_context23.prev = _context23.next) {
        case 0:
          cov_2f40l1qxdw.f[139]++;
          cov_2f40l1qxdw.s[1434]++;
          clearDateInputsAqi();
          cov_2f40l1qxdw.s[1435]++;
          chartInterval = setInterval(function () {
            cov_2f40l1qxdw.f[140]++;
            cov_2f40l1qxdw.s[1436]++;
            return replaceIndoorChart(createPieChart);
          }, 1000);
        case 5:
        case "end":
          return _context23.stop();
      }
    }, _callee23);
  })));
  cov_2f40l1qxdw.s[1437]++;
  $("#sav_monthly_iaq").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {
    return _regeneratorRuntime().wrap(function _callee24$(_context24) {
      while (1) switch (_context24.prev = _context24.next) {
        case 0:
          cov_2f40l1qxdw.f[141]++;
          cov_2f40l1qxdw.s[1438]++;
          clearDateInputsAqi();
          cov_2f40l1qxdw.s[1439]++;
          stopInterval();
          cov_2f40l1qxdw.s[1440]++;
          _context24.next = 8;
          return replaceIndoorChart(lineChartMonthlyAqi);
        case 8:
        case "end":
          return _context24.stop();
      }
    }, _callee24);
  })));
  cov_2f40l1qxdw.s[1441]++;
  $("#sav_yearly_iaq").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {
    return _regeneratorRuntime().wrap(function _callee25$(_context25) {
      while (1) switch (_context25.prev = _context25.next) {
        case 0:
          cov_2f40l1qxdw.f[142]++;
          cov_2f40l1qxdw.s[1442]++;
          clearDateInputsAqi();
          // await aqiBarChart();
          cov_2f40l1qxdw.s[1443]++;
          stopInterval();
          cov_2f40l1qxdw.s[1444]++;
          _context25.next = 8;
          return replaceIndoorChart(aqiBarChart);
        case 8:
        case "end":
          return _context25.stop();
      }
    }, _callee25);
  })));
  /* Indoor Air Quality end */

  /* EPI Index start */
  //var epiChart; // Global reference to the current chart

  // Function to replace the current chart with a new one
  function replaceEpiChart(_x6) {
    return _replaceEpiChart.apply(this, arguments);
  }
  function _replaceEpiChart() {
    _replaceEpiChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee72(newChartFunction) {
      return _regeneratorRuntime().wrap(function _callee72$(_context82) {
        while (1) switch (_context82.prev = _context82.next) {
          case 0:
            cov_2f40l1qxdw.f[143]++;
            cov_2f40l1qxdw.s[1445]++;
            // Check if there is an existing chart
            if (epiChart) {
              cov_2f40l1qxdw.b[131][0]++;
              cov_2f40l1qxdw.s[1446]++;
              // Check if epiChart is an instance of ApexCharts
              if (epiChart instanceof ApexCharts) {
                cov_2f40l1qxdw.b[132][0]++;
                cov_2f40l1qxdw.s[1447]++;
                console.log("ApexCharts instance destroyed");
                cov_2f40l1qxdw.s[1448]++;
                epiChart.destroy(); // Destroy the existing ApexCharts instance
              } else {
                cov_2f40l1qxdw.b[132][1]++;
                cov_2f40l1qxdw.s[1449]++;
                console.log("am4charts.XYChart instance destroyed");
                cov_2f40l1qxdw.s[1450]++;
                epiChart.dispose(); // Dispose the existing am4charts.XYChart instance
              }
            } else {
              cov_2f40l1qxdw.b[131][1]++;
            }

            // Create the new chart by calling the passed chart function
            cov_2f40l1qxdw.s[1451]++;
            _context82.next = 6;
            return newChartFunction();
          case 6:
          case "end":
            return _context82.stop();
        }
      }, _callee72);
    }));
    return _replaceEpiChart.apply(this, arguments);
  }
  var epiChart; // Declare the variable globally

  // async function epiDonutChart() {
  //     try {
  //         const response = await fetch(`${url}/obix/config/Drivers/Barclays/EPI/`);
  //         const text = await response.text();

  //         // Parse the XML response
  //         const parser = new DOMParser();
  //         const xmlDoc = parser.parseFromString(text, "application/xml");

  //         // Extract values for ups, hvac, and rt&ltg
  //         const ups = parseFloat(xmlDoc.querySelector('ref[name="EPI_HVAC"]').getAttribute('display').split(' ')[0]);
  //         const hvac = parseFloat(xmlDoc.querySelector('ref[name="EPI_UPS"]').getAttribute('display').split(' ')[0]);
  //         const rtltg = parseFloat(xmlDoc.querySelector('ref[name="EPI_RP_LTG"]').getAttribute('display').split(' ')[0]);
  //         const ups1 = parseFloat(xmlDoc.querySelector('ref[name="HVAC"]').getAttribute('display').split(' ')[0]);
  //         const hvac1 = parseFloat(xmlDoc.querySelector('ref[name="UPS"]').getAttribute('display').split(' ')[0]);
  //         const rtltg1 = parseFloat(xmlDoc.querySelector('ref[name="RP_LTG"]').getAttribute('display').split(' ')[0]);

  //         const seriesData = [hvac, ups, rtltg];
  //         const seriesData1 = [hvac1, ups1, rtltg1];
  //         const totalValue = seriesData1.reduce((a, b) => a + b, 0); // Calculate the total value

  //         // Define chart styles
  //         const style = document.createElement('style');
  //         style.innerHTML = `
  //         #chartdiv5 .apexcharts-text {
  //             fill: #000000;
  //             font-weight: bold;
  //         }
  //     `;
  //     style.id = 'chartdiv5-styles';
  //     document.head.appendChild(style);

  //         // Chart configuration
  // const options = {
  //     series: seriesData,
  //     chart: {
  //         type: 'donut',
  //         height: "100%",
  //         animations: {
  //             enabled: false // Disable all animations, including rotation
  //         },
  //         offsetY: -20
  //     },
  //     labels: ['HVAC', 'UPS', 'RP & LTG'],
  //     tooltip: {
  //     y: {
  //         formatter: function (_, { seriesIndex }) {
  //             return seriesData1[seriesIndex]; // Show raw values on hover
  //         }
  //         }
  //     },
  //     colors: ['#FFB200', '#667BC6', '#D1E9F6'],
  //     legend: {
  //         show: true,
  //         position: 'top',
  //         horizontalAlign: 'center',
  //         labels: {
  //             colors: ['#000000', '#000000', '#000000'], // Legend label colors
  //         },
  //         offsetY: 10
  //     },
  //     plotOptions: {
  //         pie: {
  //             donut: {
  //                 size: '50%',
  //                 labels: {
  //                     show: true,
  //                     name: {
  //                         show: true,
  //                         fontSize: '30px',
  //                         fontWeight: 'bold',
  //                         color: '#000000',
  //                         formatter: function () {
  //                             return 'EPI';
  //                         }
  //                     },
  //                     value: {
  //                         show: true,
  //                         fontSize: '30px',
  //                         fontWeight: 'bold',
  //                         color: '#000000',
  //                         formatter: function () {
  //                             return totalValue;
  //                         }
  //                     },
  //                     total: {
  //                         show: true,
  //                         label: 'EPI',
  //                         fontSize: '30px',
  //                         fontWeight: 'bold',
  //                         color: '#000000',
  //                         formatter: function () {
  //                             return totalValue;
  //                         }
  //                     }
  //                 }
  //             }
  //         }
  //     },
  //     responsive: [{
  //         breakpoint: 480,
  //         options: {
  //             chart: {
  //                 width: 200
  //             },
  //             legend: {
  //                 position: 'top'
  //             }
  //         }
  //     }],
  //     stroke: {
  //         show: false
  //     }
  // };

  // // Initialize the chart and store the instance in epiChart
  // epiChart = new ApexCharts(document.querySelector("#chartdiv5"), options);
  // epiChart.render();
  //     } catch (error) {
  //         console.error("Error fetching data:", error);
  //     }
  // }

  // async function epiDonutChart() {
  //     try {
  // const waters = ['HVAC', 'UPS', 'RP_LTG'];
  // let waterValues = [];

  // // Fetch data asynchronously for each scope
  // const fetchDataPromises = waters.map(async (scope) => {
  //     const urlToFetch = `${url}/obix/config/Drivers/Barclays/EPI/${scope}/`;
  //     console.log(`Fetching data from: ${urlToFetch}`);
  //     try {
  //         const response = await fetch(urlToFetch);
  //         if (!response.ok) {
  //             console.error(`Error fetching data for ${scope}`);
  //             return;
  //         }

  //         const text = await response.text();
  //         console.log(`Fetched text for ${scope}: ${text.slice(0, 100)}...`);

  //         // Parse the XML data
  //         const parser = new DOMParser();
  //         const xmlDoc = parser.parseFromString(text, "text/xml");

  //         let scopeElement = null;

  //         // Extract values based on scope
  //         if (scope === 'HVAC') {
  //             scopeElement = xmlDoc.querySelector('ref[name="HVAC_OP_PANEL"]');
  //         } else if (scope === 'UPS') {
  //             scopeElement = xmlDoc.querySelector('ref[name="UPS_OP_PANEL"]');
  //         } else if (scope === 'RP_LTG') {
  //             scopeElement = xmlDoc.querySelector('ref[name="RP_OP_PANEL"]');
  //         }

  //         if (scopeElement) {
  //             const value = parseFloat(scopeElement.getAttribute('display').split(' ')[0]);
  //             console.log(`EPI values for ${scope}: ${value}`);
  //             waterValues.push(value); // Add value
  //         }

  //     } catch (fetchError) {
  //         console.error(`Error fetching data for ${scope}:`, fetchError);
  //     }
  // });

  // // Wait for all data to be fetched
  // await Promise.all(fetchDataPromises);

  // // Check if we have valid data for all 3 scopes
  // if (waterValues.length !== 3) {
  //     console.error("Error: Missing data for some components");
  //     return;
  // }

  // console.log("Final Water Values: ", waterValues);

  //         // Fetch the total value (outValue)
  //         const response = await fetch(`${url}/obix/config/Drivers/Barclays/EPI/TotalEPI/`);
  //         const text = await response.text();
  //         const parser = new DOMParser();
  //         const xmlDoc = parser.parseFromString(text, "text/xml");
  //         const outElement = xmlDoc.querySelector('real[name="out"]');
  //         const outValue = parseFloat(outElement.getAttribute('val')).toFixed(2);

  //         // Normalize waterValues as percentages of outValue
  // //         const normalizedValues = waterValues.map(value => {
  // //     const normalizedValue = ((value / outValue) * 100).toFixed(2); // Calculate and format to 2 decimal places
  // //     return parseFloat(normalizedValue); // Convert the string back to a number
  // // });

  // // console.log("Normalized Values:", normalizedValues);

  // //         // Define chart styles and render
  // //         const style = document.createElement('style');
  // //         style.innerHTML = `
  // //             #chartdiv5 .apexcharts-text {
  // //                 fill: #000000;
  // //                 font-weight: bold;
  // //             }
  // //         `;
  // //         style.id = 'chartdiv5-styles';
  // //         document.head.appendChild(style);

  // //         // Chart configuration
  // //         const options = {
  // //             series: normalizedValues, // Use normalized values as percentages
  // //             chart: {
  // //                 type: 'donut',
  // //                 height: "100%",
  // //                 animations: {
  // //                     enabled: false // Disable all animations, including rotation
  // //                 },
  // //                 offsetY: -20
  // //             },
  // //             labels: ['HVAC', 'UPS', 'RP & LTG'],
  // //             tooltip: {
  // //                 y: {
  // //                     formatter: function (value) {
  // //                         return value.toFixed(2) + '%'; // Format the tooltip values as percentages
  // //                     }
  // //                 }
  // //             },
  // //             colors: ['#FFB200', '#667BC6', '#D1E9F6'],
  // //             legend: {
  // //                 show: true,
  // //                 position: 'top',
  // //                 horizontalAlign: 'center',
  // //                 labels: {
  // //                     colors: ['#000000', '#000000', '#000000'], // Legend label colors
  // //                 },
  // //                 offsetY: 10
  // //             },
  // //             plotOptions: {
  // //                 pie: {
  // //                     donut: {
  // //                         size: '50%',
  // //                         labels: {
  // //                             show: true,
  // //                             name: {
  // //                                 show: true,
  // //                                 fontSize: '30px',
  // //                                 fontWeight: 'bold',
  // //                                 color: '#000000',
  // //                                 formatter: function () {
  // //                                     return 'EPI';
  // //                                 }
  // //                             },
  // //                             value: {
  // //                                 show: true,
  // //                                 fontSize: '30px',
  // //                                 fontWeight: 'bold',
  // //                                 color: '#000000',
  // //                                 // formatter: function () {
  // //                                 //     return normalizedValues.reduce((a, b) => parseFloat(a) + parseFloat(b), 0).toFixed(2) + '%';
  // //                                 // }
  // //                             },
  // //                             total: {
  // //                                 show: true,
  // //                                 label: 'EPI',
  // //                                 fontSize: '30px',
  // //                                 fontWeight: 'bold',
  // //                                 color: '#000000',
  // //                                 formatter: function () {
  // //                                     return waterValues.reduce((a, b) => parseFloat(a) + parseFloat(b), 0).toFixed(2);
  // //                                 }
  // //                             }
  // //                         }
  // //                     }
  // //                 }
  // //             },
  // //             responsive: [{
  // //                 breakpoint: 480,
  // //                 options: {
  // //                     chart: {
  // //                         width: 200
  // //                     },
  // //                     legend: {
  // //                         position: 'top'
  // //                     }
  // //                 }
  // //             }],
  // //             stroke: {
  // //                 show: false
  // //             }
  // //         };

  // //         // Initialize and render the chart
  // //         const epiChart = new ApexCharts(document.querySelector("#chartdiv5"), options);
  // //         epiChart.render();
  //         // Normalized values as percentages

  // // Normalized values calculation
  // const normalizedValues = waterValues.map(value => {
  //     const normalizedValue = ((value / outValue) * 100).toFixed(2); // Calculate and format to 2 decimal places
  //     return parseFloat(normalizedValue); // Convert the string back to a number
  // });

  // console.log("Normalized Values:", normalizedValues);

  // // Define chart styles and render
  // const style = document.createElement('style');
  // style.innerHTML = `
  //     #chartdiv5 .apexcharts-text {
  //         fill: #000000;
  //         font-weight: bold;
  //     }
  // `;
  // style.id = 'chartdiv5-styles';
  // document.head.appendChild(style);

  // // Chart configuration
  // const options = {
  //     series: normalizedValues, // Use normalized values as percentages
  //     chart: {
  //         type: 'donut',
  //         height: "100%",
  //         animations: {
  //             enabled: false // Disable all animations, including rotation
  //         },
  //         offsetY: -20
  //     },
  //     labels: ['HVAC', 'UPS', 'RP & LTG'],
  //     tooltip: {
  //         y: {
  //             formatter: function (value) {
  //                 return value + '%'; // Show exact percentages from series without recalculation
  //             }
  //         }
  //     },
  //     colors: ['#FFB200', '#667BC6', '#D1E9F6'],
  //     legend: {
  //         show: true,
  //         position: 'top',
  //         horizontalAlign: 'center',
  //         labels: {
  //             colors: ['#000000', '#000000', '#000000'], // Legend label colors
  //         },
  //         offsetY: 10,
  //         formatter: function (seriesName, opts) {
  //             // Use the exact percentage values from series in the legend
  //             return seriesName + ': ' + normalizedValues[opts.seriesIndex];
  //         }
  //     },
  //     plotOptions: {
  // pie: {
  //     donut: {
  //         size: '50%',
  //         labels: {
  //             show: true,
  //             name: {
  //                 show: true,
  //                 fontSize: '30px',
  //                 fontWeight: 'bold',
  //                 color: '#000000',
  //                 formatter: function () {
  //                     return 'EPI';
  //                 }
  //             },
  //             value: {
  //                 show: true,
  //                 fontSize: '30px',
  //                 fontWeight: 'bold',
  //                 color: '#000000',
  //                 formatter: function (opts) {
  //                     return normalizedValues[opts.seriesIndex];
  //                 }
  //             },
  //             total: {
  //                 show: true,
  //                 label: 'EPI',
  //                 fontSize: '30px',
  //                 fontWeight: 'bold',
  //                 color: '#000000',
  //                 formatter: function () {
  //                     return waterValues.reduce((a, b) => parseFloat(a) + parseFloat(b), 0).toFixed(2);
  //                 }
  //             }
  //         }
  //     }
  // }
  //     },
  //     responsive: [{
  //         breakpoint: 480,
  //         options: {
  //             chart: {
  //                 width: 200
  //             },
  //             legend: {
  //                 position: 'top'
  //             }
  //         }
  //     }],
  //     stroke: {
  //         show: false
  //     }
  // };

  // // Render chart
  // const chart = new ApexCharts(document.querySelector("#chartdiv5"), options);
  // chart.render();

  //     } catch (error) {
  //         console.error("Error fetching data:", error);
  //     }
  // }
  function epiDonutChart() {
    return _epiDonutChart.apply(this, arguments);
  } // async function epiDonutChart() {
  //     try {
  //         const response = await fetch(`${url}/obix/config/Drivers/Barclays/EPI/`);
  //         const text = await response.text();
  //         // Parse the XML response
  //         const parser = new DOMParser();
  //         const xmlDoc = parser.parseFromString(text, "application/xml");
  //         // Extract values for ups, hvac, and rtltg
  //         const ups = parseFloat(xmlDoc.querySelector('ref[name="EPI_HVAC"]').getAttribute('display').split(' ')[0]);
  //         const hvac = parseFloat(xmlDoc.querySelector('ref[name="EPI_UPS"]').getAttribute('display').split(' ')[0]);
  //         const rtltg = parseFloat(xmlDoc.querySelector('ref[name="EPI_RP_LTG"]').getAttribute('display').split(' ')[0]);
  //         const ups1 = parseFloat(xmlDoc.querySelector('ref[name="HVAC"]').getAttribute('display').split(' ')[0]);
  //         const hvac1 = parseFloat(xmlDoc.querySelector('ref[name="UPS"]').getAttribute('display').split(' ')[0]);
  //         const rtltg1 = parseFloat(xmlDoc.querySelector('ref[name="RP_LTG"]').getAttribute('display').split(' ')[0]);
  //         const seriesData = [hvac, ups, rtltg]; // Already in percentages
  //         const seriesData1 = [hvac1, ups1, rtltg1]; // Raw values
  //         // Define chart styles
  //         const style = document.createElement('style');
  //         style.innerHTML = `
  //             #chartdiv5 .apexcharts-text {
  //                 fill: #000000;
  //                 font-weight: bold;
  //             }
  //         `;
  //         style.id = 'chartdiv5-styles';
  //         document.head.appendChild(style);
  //         // Chart configuration
  //         const options = {
  //             series: seriesData,
  //             chart: {
  //                 type: 'donut',
  //                 height: "100%",
  //                 animations: {
  //                     enabled: false // Disable all animations, including rotation
  //                 },
  //                 offsetY: -20
  //             },
  //             labels: ['HVAC', 'UPS', 'RP & LTG'],
  // tooltip: {
  //     y: {
  //         formatter: function (_, { seriesIndex }) {
  //             return seriesData1[seriesIndex]; // Show raw values on hover
  //         }
  //     }
  // },
  //             colors: ['#FFB200', '#667BC6', '#D1E9F6'],
  //             legend: {
  //                 show: true,
  //                 position: 'top',
  //                 horizontalAlign: 'center',
  //                 labels: {
  //                     colors: ['#000000', '#000000', '#000000'], // Legend label colors
  //                 },
  //                 offsetY: 10
  //             },
  //             plotOptions: {
  //                 pie: {
  //                     donut: {
  //                         size: '50%',
  //                         labels: {
  //                             show: true,
  //                             name: {
  //                                 show: true,
  //                                 fontSize: '30px',
  //                                 fontWeight: 'bold',
  //                                 color: '#000000',
  //                                 formatter: function () {
  //                                     return 'EPI';
  //                                 }
  //                             },
  //                             value: {
  //                                 show: true,
  //                                 fontSize: '30px',
  //                                 fontWeight: 'bold',
  //                                 color: '#000000',
  //                                 formatter: function () {
  //                                     return ''; // You can leave this blank if not needed
  //                                 }
  //                             },
  //                             total: {
  //                                 show: true,
  //                                 label: 'EPI',
  //                                 fontSize: '30px',
  //                                 fontWeight: 'bold',
  //                                 color: '#000000',
  //                                 formatter: function () {
  //                                     return ''; // You can leave this blank if not needed
  //                                 }
  //                             }
  //                         }
  //                     }
  //                 }
  //             },
  //             responsive: [{
  //                 breakpoint: 480,
  //                 options: {
  //                     chart: {
  //                         width: 200
  //                     },
  //                     legend: {
  //                         position: 'top'
  //                     }
  //                 }
  //             }],
  //             stroke: {
  //                 show: false
  //             }
  //         };
  //         // Initialize the chart and store the instance in epiChart
  //         epiChart = new ApexCharts(document.querySelector("#chartdiv5"), options);
  //         epiChart.render();
  //     } catch (error) {
  //         console.error("Error fetching data:", error);
  //     }
  // }
  function _epiDonutChart() {
    _epiDonutChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee74() {
      var waters, waterValues, fetchDataPromises, totalResponse, totalText, totalXml, totalElement, outValue, customTotal, percentages, chart, pieSeries, label;
      return _regeneratorRuntime().wrap(function _callee74$(_context84) {
        while (1) switch (_context84.prev = _context84.next) {
          case 0:
            cov_2f40l1qxdw.f[144]++;
            //     try {
            //         // const waters = ['HVAC', 'UPS', 'RP_LTG'];
            //         // let waterValues = [];
            //         // // Fetch data asynchronously for each scope
            //         // const fetchDataPromises = waters.map(async (scope) => {
            //         //     const urlToFetch = `${url}/obix/config/Drivers/Barclays/EPI/${scope}/`;
            //         //     console.log(`Fetching data from: ${urlToFetch}`);
            //         //     try {
            //         //         const response = await fetch(urlToFetch);
            //         //         if (!response.ok) {
            //         //             console.error(`Error fetching data for ${scope}`);
            //         //             return;
            //         //         }
            //         //         const text = await response.text();
            //         //         console.log(`Fetched text for ${scope}: ${text.slice(0, 100)}...`);
            //         //         // Parse the XML data
            //         //         const parser = new DOMParser();
            //         //         const xmlDoc = parser.parseFromString(text, "text/xml");
            //         //         let scopeElement = null;
            //         //         // Extract values based on scope
            //         //         if (scope === 'HVAC') {
            //         //             scopeElement = xmlDoc.querySelector('ref[name="HVAC_OP_PANEL"]');
            //         //         } else if (scope === 'UPS') {
            //         //             scopeElement = xmlDoc.querySelector('ref[name="UPS_OP_PANEL"]');
            //         //         } else if (scope === 'RP_LTG') {
            //         //             scopeElement = xmlDoc.querySelector('ref[name="RP_OP_PANEL"]');
            //         //         }
            //         //         if (scopeElement) {
            //         //             const value = parseFloat(scopeElement.getAttribute('display').split(' ')[0]);
            //         //             console.log(`EPI values for ${scope}: ${value}`);
            //         //             waterValues.push(value); // Add value
            //         //         }
            //         //     } catch (fetchError) {
            //         //         console.error(`Error fetching data for ${scope}:`, fetchError);
            //         //     }
            //         // });
            //         // // Wait for all data to be fetched
            //         // await Promise.all(fetchDataPromises);
            //         // // Check if we have valid data for all 3 scopes
            //         // if (waterValues.length !== 3) {
            //         //     console.error("Error: Missing data for some components");
            //         //     return;
            //         // }
            //         // console.log("Final Water Values: ", waterValues);
            //         // Fetch total value
            //         // const totalResponse = await fetch(`${url}/obix/config/Drivers/Barclays/EPI/TotalEPI/`);
            //         // const totalText = await totalResponse.text();
            //         // const totalXml = new DOMParser().parseFromString(totalText, "text/xml");
            //         // const totalElement = totalXml.querySelector('real[name="out"]');
            //         // const outValue = parseFloat(totalElement.getAttribute('val')).toFixed(2);
            //         // console.log("out " + outValue);
            //         // if (!outValue || outValue == 0) {
            //         //     console.error("Error: Invalid or zero total value");
            //         //     return;
            //         // }
            //         // const customTotal = parseFloat(outValue); // Custom total from your external source
            //         // // Calculate percentages directly relative to the custom total
            //         // const customPercentages = waterValues.map(value => 
            //         //     parseFloat(((value / customTotal) * 100).toFixed(2))
            //         // );
            //         // Extract calculated percentages
            //         // const [percentage1, percentage2, percentage3] = customPercentages;
            //         // console.log(`Custom Percentages: ${percentage1}%, ${percentage2}%, ${percentage3}%`);
            // // Example chart configuration
            // const options = {
            //     series: waterValues,  // Use raw values for series
            //     chart: {
            //         type: 'donut',
            //         height: "100%"
            //     },
            //     plotOptions: {
            //         radialBar: {
            //             offsetY: 20,
            //             startAngle: 0,
            //             endAngle: 360,
            //             hollow: {
            //                 margin: 5,
            //                 size: '65%',
            //                 background: 'transparent',
            //             },
            //             dataLabels: {
            //                 name: { show: true },
            //                 value: {
            //                     show: true,
            //                     formatter: function (value) {
            //                         // Calculate percentage based on custom total for each slice
            //                         const percentage = ((value / customTotal) * 100).toFixed(2);
            //                         return percentage + "%";  // Display percentage on slices
            //                     }
            //                 },
            //                 total: {
            //                     show: true,
            //                     label: 'Total',
            //                     fontSize: '30px',
            //                     fontWeight: 'bold',
            //                     color: '#000000',
            //                     formatter: function () {
            //                         return customTotal;  // Show custom total at the center
            //                     }
            //                 }
            //             }
            //         }
            //     },
            //     colors: ["#FF6600", "#28A745", "#007BFF"],  // Colors for slices
            //     labels: ['HVAC', 'UPS', 'RP_LTG'],  // Labels for each slice
            //     legend: {
            //         show: true,
            //         floating: true,
            //         fontSize: '16px',
            //         position: 'top',
            //         horizontalAlign: 'center',
            //         offsetY: 10,
            //         labels: { useSeriesColors: true },
            //         markers: { size: 0 },
            //         formatter: function (seriesName, opts) {
            //             return seriesName;
            //         },
            //         itemMargin: { vertical: 3 }
            //     },
            //     responsive: [{
            //         breakpoint: 480,
            //         options: {
            //             legend: { show: false }
            //         }
            //     }]
            // };
            // // Re-create the chart with raw values and custom total
            // const chart = new ApexCharts(document.querySelector("#chartdiv5"), options);
            // chart.render();
            //     } catch (error) {
            //         console.error("Error in epiDonutChart:", error);
            //     }
            // const waterValues = [10, 20, 30];
            //         const customTotal = 80;  // Custom total value
            waters = (cov_2f40l1qxdw.s[1452]++, ['HVAC', 'UPS', 'RP_LTG']);
            waterValues = (cov_2f40l1qxdw.s[1453]++, []); // Fetch data asynchronously for each scope
            fetchDataPromises = (cov_2f40l1qxdw.s[1454]++, waters.map(/*#__PURE__*/function () {
              var _ref43 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee73(scope) {
                var urlToFetch, response, text, parser, xmlDoc, scopeElement, value;
                return _regeneratorRuntime().wrap(function _callee73$(_context83) {
                  while (1) switch (_context83.prev = _context83.next) {
                    case 0:
                      cov_2f40l1qxdw.f[145]++;
                      urlToFetch = (cov_2f40l1qxdw.s[1455]++, "".concat(url, "/obix/config/Drivers/Barclays/EPI/").concat(scope, "/"));
                      cov_2f40l1qxdw.s[1456]++;
                      console.log("Fetching data from: ".concat(urlToFetch));
                      cov_2f40l1qxdw.s[1457]++;
                      _context83.prev = 5;
                      cov_2f40l1qxdw.s[1458]++;
                      _context83.next = 9;
                      return fetch(urlToFetch);
                    case 9:
                      response = _context83.sent;
                      cov_2f40l1qxdw.s[1459]++;
                      if (response.ok) {
                        _context83.next = 19;
                        break;
                      }
                      cov_2f40l1qxdw.b[133][0]++;
                      cov_2f40l1qxdw.s[1460]++;
                      console.error("Error fetching data for ".concat(scope));
                      cov_2f40l1qxdw.s[1461]++;
                      return _context83.abrupt("return");
                    case 19:
                      cov_2f40l1qxdw.b[133][1]++;
                    case 20:
                      cov_2f40l1qxdw.s[1462]++;
                      _context83.next = 23;
                      return response.text();
                    case 23:
                      text = _context83.sent;
                      cov_2f40l1qxdw.s[1463]++;
                      console.log("Fetched text for ".concat(scope, ": ").concat(text.slice(0, 100), "..."));

                      // Parse the XML data
                      parser = (cov_2f40l1qxdw.s[1464]++, new DOMParser());
                      xmlDoc = (cov_2f40l1qxdw.s[1465]++, parser.parseFromString(text, "text/xml"));
                      scopeElement = (cov_2f40l1qxdw.s[1466]++, null); // Extract values based on scope
                      cov_2f40l1qxdw.s[1467]++;
                      if (scope === 'HVAC') {
                        cov_2f40l1qxdw.b[134][0]++;
                        cov_2f40l1qxdw.s[1468]++;
                        scopeElement = xmlDoc.querySelector('ref[name="HVAC_OP_PANEL"]');
                      } else {
                        cov_2f40l1qxdw.b[134][1]++;
                        cov_2f40l1qxdw.s[1469]++;
                        if (scope === 'UPS') {
                          cov_2f40l1qxdw.b[135][0]++;
                          cov_2f40l1qxdw.s[1470]++;
                          scopeElement = xmlDoc.querySelector('ref[name="UPS_OP_PANEL"]');
                        } else {
                          cov_2f40l1qxdw.b[135][1]++;
                          cov_2f40l1qxdw.s[1471]++;
                          if (scope === 'RP_LTG') {
                            cov_2f40l1qxdw.b[136][0]++;
                            cov_2f40l1qxdw.s[1472]++;
                            scopeElement = xmlDoc.querySelector('ref[name="RP_OP_PANEL"]');
                          } else {
                            cov_2f40l1qxdw.b[136][1]++;
                          }
                        }
                      }
                      cov_2f40l1qxdw.s[1473]++;
                      if (scopeElement) {
                        cov_2f40l1qxdw.b[137][0]++;
                        value = (cov_2f40l1qxdw.s[1474]++, parseFloat(scopeElement.getAttribute('display').split(' ')[0]));
                        cov_2f40l1qxdw.s[1475]++;
                        console.log("EPI values for ".concat(scope, ": ").concat(value));
                        cov_2f40l1qxdw.s[1476]++;
                        waterValues.push(value); // Add value
                      } else {
                        cov_2f40l1qxdw.b[137][1]++;
                      }
                      _context83.next = 39;
                      break;
                    case 35:
                      _context83.prev = 35;
                      _context83.t0 = _context83["catch"](5);
                      cov_2f40l1qxdw.s[1477]++;
                      console.error("Error fetching data for ".concat(scope, ":"), _context83.t0);
                    case 39:
                    case "end":
                      return _context83.stop();
                  }
                }, _callee73, null, [[5, 35]]);
              }));
              return function (_x13) {
                return _ref43.apply(this, arguments);
              };
            }())); // Wait for all data to be fetched
            cov_2f40l1qxdw.s[1478]++;
            _context84.next = 7;
            return Promise.all(fetchDataPromises);
          case 7:
            cov_2f40l1qxdw.s[1479]++;
            if (!(waterValues.length !== 3)) {
              _context84.next = 16;
              break;
            }
            cov_2f40l1qxdw.b[138][0]++;
            cov_2f40l1qxdw.s[1480]++;
            console.error("Error: Missing data for some components");
            cov_2f40l1qxdw.s[1481]++;
            return _context84.abrupt("return");
          case 16:
            cov_2f40l1qxdw.b[138][1]++;
          case 17:
            cov_2f40l1qxdw.s[1482]++;
            console.log("Final Water Values: ", waterValues);

            // Fetch total value
            cov_2f40l1qxdw.s[1483]++;
            _context84.next = 22;
            return fetch("".concat(url, "/obix/config/Drivers/Barclays/EPI/TotalEPI/"));
          case 22:
            totalResponse = _context84.sent;
            cov_2f40l1qxdw.s[1484]++;
            _context84.next = 26;
            return totalResponse.text();
          case 26:
            totalText = _context84.sent;
            totalXml = (cov_2f40l1qxdw.s[1485]++, new DOMParser().parseFromString(totalText, "text/xml"));
            totalElement = (cov_2f40l1qxdw.s[1486]++, totalXml.querySelector('real[name="out"]'));
            outValue = (cov_2f40l1qxdw.s[1487]++, parseFloat(totalElement.getAttribute('val')).toFixed(2));
            cov_2f40l1qxdw.s[1488]++;
            console.log("out " + outValue);
            cov_2f40l1qxdw.s[1489]++;
            if (!((cov_2f40l1qxdw.b[140][0]++, !outValue) || (cov_2f40l1qxdw.b[140][1]++, outValue == 0))) {
              _context84.next = 41;
              break;
            }
            cov_2f40l1qxdw.b[139][0]++;
            cov_2f40l1qxdw.s[1490]++;
            console.error("Error: Invalid or zero total value");
            cov_2f40l1qxdw.s[1491]++;
            return _context84.abrupt("return");
          case 41:
            cov_2f40l1qxdw.b[139][1]++;
          case 42:
            customTotal = (cov_2f40l1qxdw.s[1492]++, parseFloat(outValue)); // Custom total from your external source
            // Calculate percentages based on customTotal
            percentages = (cov_2f40l1qxdw.s[1493]++, waterValues.map(function (value) {
              cov_2f40l1qxdw.f[146]++;
              var percentage = (cov_2f40l1qxdw.s[1494]++, (value / customTotal * 100).toFixed(2)); // Calculate percentage
              cov_2f40l1qxdw.s[1495]++;
              console.log("For value ".concat(value, ", the percentage is: ").concat(percentage, "%"));
              cov_2f40l1qxdw.s[1496]++;
              return parseFloat(percentage); // Store as float
            }));
            cov_2f40l1qxdw.s[1497]++;
            console.log("Calculated Percentages:", percentages); // Output the calculated percentages

            // AMCharts setup
            cov_2f40l1qxdw.s[1498]++;
            am4core.useTheme(am4themes_animated);
            chart = (cov_2f40l1qxdw.s[1499]++, am4core.create("chartdiv5", am4charts.PieChart)); // Add data with percentages calculated
            cov_2f40l1qxdw.s[1500]++;
            chart.data = [{
              category: 'HVAC',
              value: percentages[0]
            }, {
              category: 'UPS',
              value: percentages[1]
            }, {
              category: 'RP_LTG',
              value: percentages[2]
            }];

            // Create pie series
            pieSeries = (cov_2f40l1qxdw.s[1501]++, chart.series.push(new am4charts.PieSeries()));
            cov_2f40l1qxdw.s[1502]++;
            pieSeries.dataFields.value = "value";
            cov_2f40l1qxdw.s[1503]++;
            pieSeries.dataFields.category = "category";

            // Set the radius for the donut chart
            cov_2f40l1qxdw.s[1504]++;
            pieSeries.slices.template.radius = am4core.percent(50);
            cov_2f40l1qxdw.s[1505]++;
            pieSeries.innerRadius = am4core.percent(40);

            // Customize the appearance of the slices
            cov_2f40l1qxdw.s[1506]++;
            pieSeries.slices.template.stroke = am4core.color("#fff");
            cov_2f40l1qxdw.s[1507]++;
            pieSeries.slices.template.strokeWidth = 2;
            cov_2f40l1qxdw.s[1508]++;
            pieSeries.slices.template.strokeOpacity = 1;

            // Display percentage on slices
            cov_2f40l1qxdw.s[1509]++;
            pieSeries.labels.template.text = "{value}%";

            // Set the chart center label for total value
            cov_2f40l1qxdw.s[1510]++;
            pieSeries.ticks.template.disabled = true; // Remove ticks

            // Display center label with the custom total
            cov_2f40l1qxdw.s[1511]++;
            chart.innerRadius = am4core.percent(50);
            label = (cov_2f40l1qxdw.s[1512]++, chart.seriesContainer.createChild(am4core.Label));
            cov_2f40l1qxdw.s[1513]++;
            label.text = customTotal.toString();
            cov_2f40l1qxdw.s[1514]++;
            label.horizontalCenter = "middle";
            cov_2f40l1qxdw.s[1515]++;
            label.verticalCenter = "middle";
            cov_2f40l1qxdw.s[1516]++;
            label.fontSize = 30;
            cov_2f40l1qxdw.s[1517]++;
            label.fontWeight = "bold";

            // Add legend
            cov_2f40l1qxdw.s[1518]++;
            chart.legend = new am4charts.Legend();
            cov_2f40l1qxdw.s[1519]++;
            chart.legend.position = "top";
          case 87:
          case "end":
            return _context84.stop();
        }
      }, _callee74);
    }));
    return _epiDonutChart.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[1520]++;
  replaceEpiChart(epiDonutChart);
  function epiLine() {
    return _epiLine.apply(this, arguments);
  }
  function _epiLine() {
    _epiLine = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee76() {
      return _regeneratorRuntime().wrap(function _callee76$(_context87) {
        while (1) switch (_context87.prev = _context87.next) {
          case 0:
            cov_2f40l1qxdw.f[147]++;
            cov_2f40l1qxdw.s[1521]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee75() {
              var startDateValue, endDateValue, isValid, waters, waterValues, _i10, _waters5, scope, urlToFetch, response, text, parser, xmlDoc, objs, _loop11, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee75$(_context86) {
                while (1) switch (_context86.prev = _context86.next) {
                  case 0:
                    createSeries = function _createSeries11(valueField, name, color) {
                      cov_2f40l1qxdw.f[151]++;
                      var series = (cov_2f40l1qxdw.s[1577]++, epiChart.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[1578]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[1579]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[1580]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[1581]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[1582]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[1583]++;
                      series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[1584]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[1585]++;
                      bullet.tooltipText = "{valueY}";
                      cov_2f40l1qxdw.s[1586]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[152]++;
                        cov_2f40l1qxdw.s[1587]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[148][0]++;
                          cov_2f40l1qxdw.s[1588]++;
                          return am4core.color("#FF0000"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[148][1]++;
                        }
                        cov_2f40l1qxdw.s[1589]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[1590]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[148]++;
                    startDateValue = (cov_2f40l1qxdw.s[1522]++, document.getElementById("startDateEPI").value);
                    endDateValue = (cov_2f40l1qxdw.s[1523]++, document.getElementById("endDateEPI").value);
                    cov_2f40l1qxdw.s[1524]++;
                    _context86.next = 7;
                    return validateDateRange(startDateValue, endDateValue);
                  case 7:
                    isValid = _context86.sent;
                    cov_2f40l1qxdw.s[1525]++;
                    if (isValid) {
                      _context86.next = 15;
                      break;
                    }
                    cov_2f40l1qxdw.b[141][0]++;
                    cov_2f40l1qxdw.s[1526]++;
                    return _context86.abrupt("return");
                  case 15:
                    cov_2f40l1qxdw.b[141][1]++;
                  case 16:
                    waters = (cov_2f40l1qxdw.s[1527]++, ['HVAC', 'UPS', 'RP_LTG']);
                    waterValues = (cov_2f40l1qxdw.s[1528]++, []); // const url = "https://localhost";
                    // Fetch data asynchronously for each scope
                    cov_2f40l1qxdw.s[1529]++;
                    _i10 = 0, _waters5 = waters;
                  case 20:
                    if (!(_i10 < _waters5.length)) {
                      _context86.next = 67;
                      break;
                    }
                    scope = _waters5[_i10];
                    urlToFetch = (cov_2f40l1qxdw.s[1530]++, "".concat(url, "/obix/histories/Barclays_Sup/EPI_").concat(scope, "_Daily/~historyQuery?start=").concat(startDateValue, "T23:58:00.000+05:30&end=").concat(endDateValue, "T23:58:00.000+05:30"));
                    cov_2f40l1qxdw.s[1531]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[1532]++;
                    _context86.prev = 26;
                    cov_2f40l1qxdw.s[1533]++;
                    _context86.next = 30;
                    return fetch(urlToFetch);
                  case 30:
                    response = _context86.sent;
                    cov_2f40l1qxdw.s[1534]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[1535]++;
                    if (response.ok) {
                      _context86.next = 42;
                      break;
                    }
                    cov_2f40l1qxdw.b[142][0]++;
                    cov_2f40l1qxdw.s[1536]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(response.status, " - ").concat(response.statusText));
                    cov_2f40l1qxdw.s[1537]++;
                    return _context86.abrupt("continue", 64);
                  case 42:
                    cov_2f40l1qxdw.b[142][1]++;
                  case 43:
                    cov_2f40l1qxdw.s[1538]++;
                    _context86.next = 46;
                    return response.text();
                  case 46:
                    text = _context86.sent;
                    // Parse the XML data
                    parser = (cov_2f40l1qxdw.s[1539]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[1540]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[1541]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[1542]++;
                    _loop11 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop11() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate11, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop11$(_context85) {
                        while (1) switch (_context85.prev = _context85.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[1543]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[1544]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[1545]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[1546]++;
                            if ((cov_2f40l1qxdw.b[144][0]++, abstime) && (cov_2f40l1qxdw.b[144][1]++, real)) {
                              cov_2f40l1qxdw.b[143][0]++;
                              dateText = (cov_2f40l1qxdw.s[1547]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[1548]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[1549]++;
                              if ((cov_2f40l1qxdw.b[146][0]++, valueText) && (cov_2f40l1qxdw.b[146][1]++, dateText)) {
                                cov_2f40l1qxdw.b[145][0]++;
                                value = (cov_2f40l1qxdw.s[1550]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[1551]++, new Date(dateText));
                                _formattedDate11 = (cov_2f40l1qxdw.s[1552]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[1553]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[1554]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[149]++;
                                  cov_2f40l1qxdw.s[1555]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[1556]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[147][0]++;
                                  cov_2f40l1qxdw.s[1557]++;
                                  existingEntry[scope] = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[147][1]++;
                                  cov_2f40l1qxdw.s[1558]++;
                                  waterValues.push(_defineProperty({
                                    date: date
                                  }, scope, parseFloat(value)));
                                }
                              } else {
                                cov_2f40l1qxdw.b[145][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[143][1]++;
                            }
                          case 5:
                          case "end":
                            return _context85.stop();
                        }
                      }, _loop11);
                    });
                    i = 0;
                  case 53:
                    if (!(i < objs.length)) {
                      _context86.next = 58;
                      break;
                    }
                    return _context86.delegateYield(_loop11(), "t0", 55);
                  case 55:
                    i++;
                    _context86.next = 53;
                    break;
                  case 58:
                    _context86.next = 64;
                    break;
                  case 60:
                    _context86.prev = 60;
                    _context86.t1 = _context86["catch"](26);
                    cov_2f40l1qxdw.s[1559]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(_context86.t1.message));
                  case 64:
                    _i10++;
                    _context86.next = 20;
                    break;
                  case 67:
                    cov_2f40l1qxdw.s[1560]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    cov_2f40l1qxdw.s[1561]++;
                    epiChart = am4core.create("chartdiv5", am4charts.XYChart);
                    cov_2f40l1qxdw.s[1562]++;
                    epiChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[1563]++;
                    epiChart.data = waterValues;
                    cov_2f40l1qxdw.s[1564]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[150]++;
                      cov_2f40l1qxdw.s[1565]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[1566]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[1567]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[1568]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[1569]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[1570]++, epiChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[1571]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[1572]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[1573]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[1574]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[1575]++, epiChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[1576]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[1591]++;
                    epiChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[1592]++;
                    epiChart.legend.position = "top";
                    cov_2f40l1qxdw.s[1593]++;
                    epiChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[1594]++;
                    epiChart.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[1595]++;
                    createSeries("HVAC", "HVAC", am4core.color("#FFB200"));
                    cov_2f40l1qxdw.s[1596]++;
                    createSeries("UPS", "UPS", am4core.color("#667BC6"));
                    cov_2f40l1qxdw.s[1597]++;
                    createSeries("RP_LTG", "RT & LTG", am4core.color("#D1E9F6"));

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[1598]++;
                    epiChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[1599]++;
                    epiChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[1600]++;
                    epiChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[1601]++;
                    epiChart.logo.disabled = true;
                  case 111:
                  case "end":
                    return _context86.stop();
                }
              }, _callee75, null, [[26, 60]]);
            })));
          case 3:
          case "end":
            return _context87.stop();
        }
      }, _callee76);
    }));
    return _epiLine.apply(this, arguments);
  }
  function epiBarChart() {
    return _epiBarChart.apply(this, arguments);
  }
  function _epiBarChart() {
    _epiBarChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee77() {
      var scopeData, last12MonthsData, _iterator8, _step8, month, scopeUrls, i, response, text, parser, xml, records, _iterator9, _step9, record, abstime, realValue, abstimeDate, formattedAbstime, existingStyle, options;
      return _regeneratorRuntime().wrap(function _callee77$(_context88) {
        while (1) switch (_context88.prev = _context88.next) {
          case 0:
            cov_2f40l1qxdw.f[153]++;
            scopeData = (cov_2f40l1qxdw.s[1602]++, [[], [], []]); // Scope 1, Scope 2, Scope 3
            last12MonthsData = (cov_2f40l1qxdw.s[1603]++, getLast12Months1());
            cov_2f40l1qxdw.s[1604]++;
            console.log("bar " + last12MonthsData);
            cov_2f40l1qxdw.s[1605]++;
            _iterator8 = _createForOfIteratorHelper(last12MonthsData);
            _context88.prev = 7;
            _iterator8.s();
          case 9:
            if ((_step8 = _iterator8.n()).done) {
              _context88.next = 52;
              break;
            }
            month = _step8.value;
            scopeUrls = (cov_2f40l1qxdw.s[1606]++, ["".concat(url, "/obix/histories/Barclays_Sup/EPI_HVAC_Yearly/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1"), "".concat(url, "/obix/histories/Barclays_Sup/EPI_UPS_Yearly/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1"), "".concat(url, "/obix/histories/Barclays_Sup/EPI_RP_LTG_Yearly/~historyQuery?start=").concat(month.startDate, "T23:59:59.000+05:30&limit=1")]);
            cov_2f40l1qxdw.s[1607]++;
            i = 0;
          case 14:
            if (!(i < scopeUrls.length)) {
              _context88.next = 50;
              break;
            }
            cov_2f40l1qxdw.s[1608]++;
            _context88.prev = 16;
            cov_2f40l1qxdw.s[1609]++;
            _context88.next = 20;
            return fetch(scopeUrls[i]);
          case 20:
            response = _context88.sent;
            cov_2f40l1qxdw.s[1610]++;
            if (response.ok) {
              _context88.next = 28;
              break;
            }
            cov_2f40l1qxdw.b[149][0]++;
            cov_2f40l1qxdw.s[1611]++;
            throw new Error("HTTP error! Status: ".concat(response.status));
          case 28:
            cov_2f40l1qxdw.b[149][1]++;
          case 29:
            cov_2f40l1qxdw.s[1612]++;
            _context88.next = 32;
            return response.text();
          case 32:
            text = _context88.sent;
            parser = (cov_2f40l1qxdw.s[1613]++, new DOMParser());
            xml = (cov_2f40l1qxdw.s[1614]++, parser.parseFromString(text, "application/xml"));
            records = (cov_2f40l1qxdw.s[1615]++, xml.getElementsByTagName("list"));
            cov_2f40l1qxdw.s[1616]++;
            _iterator9 = _createForOfIteratorHelper(records);
            try {
              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
                record = _step9.value;
                // Fetch `abstime` and `real` values
                abstime = (cov_2f40l1qxdw.s[1617]++, record.getElementsByTagName("abstime")[0]);
                realValue = (cov_2f40l1qxdw.s[1618]++, record.getElementsByTagName("real")[0]); // Match the `abstime` with the corresponding `month.startDate`
                cov_2f40l1qxdw.s[1619]++;
                if ((cov_2f40l1qxdw.b[151][0]++, abstime) && (cov_2f40l1qxdw.b[151][1]++, realValue)) {
                  cov_2f40l1qxdw.b[150][0]++;
                  abstimeDate = (cov_2f40l1qxdw.s[1620]++, new Date(abstime));
                  formattedAbstime = (cov_2f40l1qxdw.s[1621]++, "".concat(abstimeDate.getFullYear(), "-").concat(String(abstimeDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(abstimeDate.getDate()).padStart(2, '0')));
                  cov_2f40l1qxdw.s[1622]++;
                  if (formattedAbstime === month.startDate) {
                    cov_2f40l1qxdw.b[152][0]++;
                    cov_2f40l1qxdw.s[1623]++;
                    scopeData[i].push(parseFloat(realValue).toFixed(2));
                  } else {
                    cov_2f40l1qxdw.b[152][1]++;
                  }
                } else {
                  cov_2f40l1qxdw.b[150][1]++;
                }
              }
            } catch (err) {
              _iterator9.e(err);
            } finally {
              _iterator9.f();
            }
            _context88.next = 47;
            break;
          case 41:
            _context88.prev = 41;
            _context88.t0 = _context88["catch"](16);
            cov_2f40l1qxdw.s[1624]++;
            console.error("Error fetching data for scope ".concat(i + 1, ":"), _context88.t0);
            cov_2f40l1qxdw.s[1625]++;
            scopeData[i].push(null); // Push null to maintain alignment
          case 47:
            i++;
            _context88.next = 14;
            break;
          case 50:
            _context88.next = 9;
            break;
          case 52:
            _context88.next = 57;
            break;
          case 54:
            _context88.prev = 54;
            _context88.t1 = _context88["catch"](7);
            _iterator8.e(_context88.t1);
          case 57:
            _context88.prev = 57;
            _iterator8.f();
            return _context88.finish(57);
          case 60:
            existingStyle = (cov_2f40l1qxdw.s[1626]++, document.getElementById('chartdiv5-styles'));
            cov_2f40l1qxdw.s[1627]++;
            if (existingStyle) {
              cov_2f40l1qxdw.b[153][0]++;
              cov_2f40l1qxdw.s[1628]++;
              existingStyle.remove();
            } else {
              cov_2f40l1qxdw.b[153][1]++;
            }
            // Prepare options for the new ApexCharts bar chart
            options = (cov_2f40l1qxdw.s[1629]++, {
              series: [{
                name: 'HVAC',
                data: scopeData[0]
              }, {
                name: 'UPS',
                data: scopeData[1]
              }, {
                name: 'RT & LTG',
                data: scopeData[2]
              }],
              chart: {
                type: 'bar',
                height: '100%',
                stacked: false,
                toolbar: {
                  show: false // Hide the toolbar with export options
                }
              },
              plotOptions: {
                bar: {
                  horizontal: false,
                  // Vertical bars
                  columnWidth: '80%',
                  // Increase the width of the bars
                  endingShape: 'rounded',
                  groupedPadding: 0
                }
              },
              colors: ["#FFB200", "#667BC6", "#D1E9F6"],
              // Colors for HVAC, UPS, RT & LTG
              dataLabels: {
                enabled: false // Disable the values on top of the bars
              },
              xaxis: {
                categories: getLast12Months()
              },
              // yaxis: {
              //     title: {
              //         text: 'Emissions (in metric tons)', // Y-axis title for emissions
              //     }
              // },
              grid: {
                show: true
              },
              tooltip: {
                y: {
                  formatter: function formatter(val) {
                    cov_2f40l1qxdw.f[154]++;
                    cov_2f40l1qxdw.s[1630]++;
                    return val; // Customize tooltip text
                  }
                }
              },
              legend: {
                position: 'top',
                horizontalAlign: 'center',
                labels: {
                  colors: ['#000000']
                }
              },
              stroke: {
                show: true,
                width: 2,
                colors: ['transparent'] // Show the borders between columns
              },
              fill: {
                opacity: 1 // Ensure the bars are fully filled
              }
            }); // Create and render the new ApexCharts instance
            cov_2f40l1qxdw.s[1631]++;
            epiChart = new ApexCharts(document.querySelector("#chartdiv5"), options);
            cov_2f40l1qxdw.s[1632]++;
            _context88.next = 69;
            return epiChart.render();
          case 69:
          case "end":
            return _context88.stop();
        }
      }, _callee77, null, [[7, 54, 57, 60], [16, 41]]);
    }));
    return _epiBarChart.apply(this, arguments);
  }
  function lineChartMonthlyEpi() {
    return _lineChartMonthlyEpi.apply(this, arguments);
  }
  function _lineChartMonthlyEpi() {
    _lineChartMonthlyEpi = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee79() {
      return _regeneratorRuntime().wrap(function _callee79$(_context91) {
        while (1) switch (_context91.prev = _context91.next) {
          case 0:
            cov_2f40l1qxdw.f[155]++;
            cov_2f40l1qxdw.s[1633]++;
            am4core.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee78() {
              var today, currentMonth, startDate, endDate, startISO, endISO, waters, waterValues, _i11, _waters6, scope, urlToFetch, response, text, parser, xmlDoc, objs, _loop12, i, categoryAxis, valueAxis, createSeries;
              return _regeneratorRuntime().wrap(function _callee78$(_context90) {
                while (1) switch (_context90.prev = _context90.next) {
                  case 0:
                    createSeries = function _createSeries12(valueField, name, color) {
                      cov_2f40l1qxdw.f[159]++;
                      var series = (cov_2f40l1qxdw.s[1690]++, epiChart.series.push(new am4charts.LineSeries()));
                      cov_2f40l1qxdw.s[1691]++;
                      series.dataFields.valueY = valueField;
                      cov_2f40l1qxdw.s[1692]++;
                      series.dataFields.categoryX = "date"; // Use 'date' instead of 'year'
                      cov_2f40l1qxdw.s[1693]++;
                      series.name = name;
                      cov_2f40l1qxdw.s[1694]++;
                      series.strokeWidth = 2;
                      cov_2f40l1qxdw.s[1695]++;
                      series.tensionX = 0.77;
                      cov_2f40l1qxdw.s[1696]++;
                      series.stroke = color;

                      // Bullet to display tooltips
                      var bullet = (cov_2f40l1qxdw.s[1697]++, series.bullets.push(new am4charts.Bullet()));
                      cov_2f40l1qxdw.s[1698]++;
                      bullet.tooltipText = "{valueY}";
                      cov_2f40l1qxdw.s[1699]++;
                      bullet.adapter.add("fill", function (fill, target) {
                        cov_2f40l1qxdw.f[160]++;
                        cov_2f40l1qxdw.s[1700]++;
                        // If the value is negative, color the bullet red, else use the series color
                        if (target.dataItem.valueY < 0) {
                          cov_2f40l1qxdw.b[160][0]++;
                          cov_2f40l1qxdw.s[1701]++;
                          return am4core.color("#FF0000"); // Red for negative values
                        } else {
                          cov_2f40l1qxdw.b[160][1]++;
                        }
                        cov_2f40l1qxdw.s[1702]++;
                        return series.stroke; // Use the series stroke color (the color passed to createSeries)
                      });
                      cov_2f40l1qxdw.s[1703]++;
                      return series;
                    };
                    cov_2f40l1qxdw.f[156]++;
                    today = (cov_2f40l1qxdw.s[1634]++, new Date());
                    currentMonth = (cov_2f40l1qxdw.s[1635]++, today.getMonth());
                    startDate = (cov_2f40l1qxdw.s[1636]++, new Date(today.getFullYear(), currentMonth - 1, 1));
                    endDate = (cov_2f40l1qxdw.s[1637]++, new Date(today.getFullYear(), currentMonth, 0));
                    startISO = (cov_2f40l1qxdw.s[1638]++, "".concat(startDate.getFullYear(), "-").concat(String(startDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(startDate.getDate()).padStart(2, '0')));
                    endISO = (cov_2f40l1qxdw.s[1639]++, "".concat(endDate.getFullYear(), "-").concat(String(endDate.getMonth() + 1).padStart(2, '0'), "-").concat(String(endDate.getDate()).padStart(2, '0')));
                    waters = (cov_2f40l1qxdw.s[1640]++, ['HVAC', 'UPS', 'RP_LTG']);
                    waterValues = (cov_2f40l1qxdw.s[1641]++, []); // Fetch data asynchronously for each scope
                    cov_2f40l1qxdw.s[1642]++;
                    _i11 = 0, _waters6 = waters;
                  case 12:
                    if (!(_i11 < _waters6.length)) {
                      _context90.next = 59;
                      break;
                    }
                    scope = _waters6[_i11];
                    urlToFetch = (cov_2f40l1qxdw.s[1643]++, "".concat(url, "/obix/histories/Barclays_Sup/EPI_").concat(scope, "_Daily/~historyQuery?start=").concat(startISO, "T23:59:59.000+05:30&end=").concat(endISO, "T23:59:59.000+05:30"));
                    cov_2f40l1qxdw.s[1644]++;
                    console.log(urlToFetch);
                    cov_2f40l1qxdw.s[1645]++;
                    _context90.prev = 18;
                    cov_2f40l1qxdw.s[1646]++;
                    _context90.next = 22;
                    return fetch(urlToFetch);
                  case 22:
                    response = _context90.sent;
                    cov_2f40l1qxdw.s[1647]++;
                    console.log(response);
                    cov_2f40l1qxdw.s[1648]++;
                    if (response.ok) {
                      _context90.next = 34;
                      break;
                    }
                    cov_2f40l1qxdw.b[154][0]++;
                    cov_2f40l1qxdw.s[1649]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(response.status, " - ").concat(response.statusText));
                    cov_2f40l1qxdw.s[1650]++;
                    return _context90.abrupt("continue", 56);
                  case 34:
                    cov_2f40l1qxdw.b[154][1]++;
                  case 35:
                    cov_2f40l1qxdw.s[1651]++;
                    _context90.next = 38;
                    return response.text();
                  case 38:
                    text = _context90.sent;
                    parser = (cov_2f40l1qxdw.s[1652]++, new DOMParser());
                    xmlDoc = (cov_2f40l1qxdw.s[1653]++, parser.parseFromString(text, "text/xml"));
                    objs = (cov_2f40l1qxdw.s[1654]++, xmlDoc.getElementsByTagName("obj"));
                    cov_2f40l1qxdw.s[1655]++;
                    _loop12 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop12() {
                      var obj, abstime, real, dateText, valueText, value, date, _formattedDate12, dateStr, existingEntry;
                      return _regeneratorRuntime().wrap(function _loop12$(_context89) {
                        while (1) switch (_context89.prev = _context89.next) {
                          case 0:
                            obj = (cov_2f40l1qxdw.s[1656]++, objs[i]);
                            abstime = (cov_2f40l1qxdw.s[1657]++, obj.getElementsByTagName("abstime")[0]);
                            real = (cov_2f40l1qxdw.s[1658]++, obj.getElementsByTagName("real")[0]);
                            cov_2f40l1qxdw.s[1659]++;
                            if ((cov_2f40l1qxdw.b[156][0]++, abstime) && (cov_2f40l1qxdw.b[156][1]++, real)) {
                              cov_2f40l1qxdw.b[155][0]++;
                              dateText = (cov_2f40l1qxdw.s[1660]++, abstime.getAttribute("val"));
                              valueText = (cov_2f40l1qxdw.s[1661]++, real.getAttribute("val"));
                              cov_2f40l1qxdw.s[1662]++;
                              if ((cov_2f40l1qxdw.b[158][0]++, valueText) && (cov_2f40l1qxdw.b[158][1]++, dateText)) {
                                cov_2f40l1qxdw.b[157][0]++;
                                value = (cov_2f40l1qxdw.s[1663]++, parseFloat(valueText).toFixed(2));
                                date = (cov_2f40l1qxdw.s[1664]++, new Date(dateText));
                                _formattedDate12 = (cov_2f40l1qxdw.s[1665]++, date.toLocaleDateString("en-US", {
                                  month: "short",
                                  day: "numeric"
                                }));
                                dateStr = (cov_2f40l1qxdw.s[1666]++, date.toDateString()); // Use toDateString to compare without time
                                existingEntry = (cov_2f40l1qxdw.s[1667]++, waterValues.find(function (entry) {
                                  cov_2f40l1qxdw.f[157]++;
                                  cov_2f40l1qxdw.s[1668]++;
                                  return entry.date.toDateString() === dateStr;
                                }));
                                cov_2f40l1qxdw.s[1669]++;
                                if (existingEntry) {
                                  cov_2f40l1qxdw.b[159][0]++;
                                  cov_2f40l1qxdw.s[1670]++;
                                  existingEntry[scope] = parseFloat(value);
                                } else {
                                  cov_2f40l1qxdw.b[159][1]++;
                                  cov_2f40l1qxdw.s[1671]++;
                                  waterValues.push(_defineProperty({
                                    date: date
                                  }, scope, parseFloat(value)));
                                }
                              } else {
                                cov_2f40l1qxdw.b[157][1]++;
                              }
                            } else {
                              cov_2f40l1qxdw.b[155][1]++;
                            }
                          case 5:
                          case "end":
                            return _context89.stop();
                        }
                      }, _loop12);
                    });
                    i = 0;
                  case 45:
                    if (!(i < objs.length)) {
                      _context90.next = 50;
                      break;
                    }
                    return _context90.delegateYield(_loop12(), "t0", 47);
                  case 47:
                    i++;
                    _context90.next = 45;
                    break;
                  case 50:
                    _context90.next = 56;
                    break;
                  case 52:
                    _context90.prev = 52;
                    _context90.t1 = _context90["catch"](18);
                    cov_2f40l1qxdw.s[1672]++;
                    console.error("Error fetching data for ".concat(scope, ": ").concat(_context90.t1.message));
                  case 56:
                    _i11++;
                    _context90.next = 12;
                    break;
                  case 59:
                    cov_2f40l1qxdw.s[1673]++;
                    // Themes begin
                    am4core.useTheme(am4themes_animated);
                    // Themes end

                    // Create chart instance
                    cov_2f40l1qxdw.s[1674]++;
                    epiChart = am4core.create("chartdiv5", am4charts.XYChart);
                    cov_2f40l1qxdw.s[1675]++;
                    epiChart.paddingRight = 20;

                    // Add data
                    cov_2f40l1qxdw.s[1676]++;
                    epiChart.data = waterValues;
                    cov_2f40l1qxdw.s[1677]++;
                    waterValues.forEach(function (item) {
                      cov_2f40l1qxdw.f[158]++;
                      cov_2f40l1qxdw.s[1678]++;
                      item.date = new Date(item.date).getTime(); // Convert to timestamp
                      cov_2f40l1qxdw.s[1679]++;
                      console.log("item date (timestamp): " + item.date);

                      // Convert timestamp back to a readable date
                      var formattedDate = (cov_2f40l1qxdw.s[1680]++, new Date(item.date).toLocaleDateString("en-US", {
                        // year: "numeric",
                        month: "short",
                        day: "numeric"
                      }));
                      cov_2f40l1qxdw.s[1681]++;
                      item.date = formattedDate;
                      cov_2f40l1qxdw.s[1682]++;
                      console.log("Formatted item date: " + formattedDate);
                    });

                    // Create axes
                    categoryAxis = (cov_2f40l1qxdw.s[1683]++, epiChart.xAxes.push(new am4charts.CategoryAxis()));
                    cov_2f40l1qxdw.s[1684]++;
                    categoryAxis.dataFields.category = "date"; // Use 'date' instead of 'year'
                    cov_2f40l1qxdw.s[1685]++;
                    categoryAxis.renderer.minGridDistance = 80;
                    // categoryAxis.renderer.grid.template.location = 2;
                    // categoryAxis.startLocation = 1;
                    // categoryAxis.endLocation = 1.5;
                    cov_2f40l1qxdw.s[1686]++;
                    categoryAxis.renderer.labels.template.horizontalCenter = "middle"; // Center labels
                    cov_2f40l1qxdw.s[1687]++;
                    categoryAxis.renderer.labels.template.verticalCenter = "middle"; // Center labels
                    valueAxis = (cov_2f40l1qxdw.s[1688]++, epiChart.yAxes.push(new am4charts.ValueAxis()));
                    cov_2f40l1qxdw.s[1689]++;
                    valueAxis.baseValue = 0;

                    // Function to create series
                    cov_2f40l1qxdw.s[1704]++;
                    epiChart.legend = new am4charts.Legend();
                    cov_2f40l1qxdw.s[1705]++;
                    epiChart.legend.position = "top";
                    cov_2f40l1qxdw.s[1706]++;
                    epiChart.legend.paddingBottom = 10;
                    cov_2f40l1qxdw.s[1707]++;
                    epiChart.legend.labels.template.maxWidth = 95;
                    // Create three series with different data fields and colors
                    cov_2f40l1qxdw.s[1708]++;
                    createSeries("scope1date", "HVAC", am4core.color("#FFB200"));
                    cov_2f40l1qxdw.s[1709]++;
                    createSeries("scope2date", "UPS", am4core.color("#667BC6"));
                    cov_2f40l1qxdw.s[1710]++;
                    createSeries("scope3date", "RT & LTG", am4core.color("#D1E9F6"));

                    // Add scrollbar
                    // var scrollbarX = new am4charts.XYChartScrollbar();
                    // scrollbarX.series.push(chart.series.values[0]);  // Add the first series to the scrollbar
                    // chart.scrollbarX = scrollbarX;
                    // scrollbarX.height = 30;
                    cov_2f40l1qxdw.s[1711]++;
                    epiChart.scrollbarX = new am4core.Scrollbar();
                    cov_2f40l1qxdw.s[1712]++;
                    epiChart.scrollbarX.marginBottom = 20;
                    cov_2f40l1qxdw.s[1713]++;
                    epiChart.cursor = new am4charts.XYCursor();
                    cov_2f40l1qxdw.s[1714]++;
                    epiChart.logo.disabled = true;
                  case 103:
                  case "end":
                    return _context90.stop();
                }
              }, _callee78, null, [[18, 52]]);
            })));
          case 3:
          case "end":
            return _context91.stop();
        }
      }, _callee79);
    }));
    return _lineChartMonthlyEpi.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[1715]++;
  $("#startDateEPI, #endDateEPI").on("change", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {
    return _regeneratorRuntime().wrap(function _callee26$(_context26) {
      while (1) switch (_context26.prev = _context26.next) {
        case 0:
          cov_2f40l1qxdw.f[161]++;
          cov_2f40l1qxdw.s[1716]++;
          _context26.next = 4;
          return replaceEpiChart(epiLine);
        case 4:
        case "end":
          return _context26.stop();
      }
    }, _callee26);
  })));
  cov_2f40l1qxdw.s[1717]++;
  $("#sav_daily_epi").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {
    return _regeneratorRuntime().wrap(function _callee27$(_context27) {
      while (1) switch (_context27.prev = _context27.next) {
        case 0:
          cov_2f40l1qxdw.f[162]++;
          cov_2f40l1qxdw.s[1718]++;
          clearDateInputsEpi();
          cov_2f40l1qxdw.s[1719]++;
          _context27.next = 6;
          return replaceEpiChart(epiDonutChart);
        case 6:
        case "end":
          return _context27.stop();
      }
    }, _callee27);
  })));
  cov_2f40l1qxdw.s[1720]++;
  $("#sav_monthly_epi").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {
    return _regeneratorRuntime().wrap(function _callee28$(_context28) {
      while (1) switch (_context28.prev = _context28.next) {
        case 0:
          cov_2f40l1qxdw.f[163]++;
          cov_2f40l1qxdw.s[1721]++;
          clearDateInputsEpi();
          cov_2f40l1qxdw.s[1722]++;
          _context28.next = 6;
          return replaceEpiChart(lineChartMonthlyEpi);
        case 6:
        case "end":
          return _context28.stop();
      }
    }, _callee28);
  })));
  cov_2f40l1qxdw.s[1723]++;
  $("#sav_yearly_epi").on("click", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {
    return _regeneratorRuntime().wrap(function _callee29$(_context29) {
      while (1) switch (_context29.prev = _context29.next) {
        case 0:
          cov_2f40l1qxdw.f[164]++;
          cov_2f40l1qxdw.s[1724]++;
          _context29.next = 4;
          return replaceEpiChart(epiBarChart);
        case 4:
          cov_2f40l1qxdw.s[1725]++;
          clearDateInputsEpi();
        case 6:
        case "end":
          return _context29.stop();
      }
    }, _callee29);
  })));
  var epiChart1;
  function epiColumnChart() {
    return _epiColumnChart.apply(this, arguments);
  }
  function _epiColumnChart() {
    _epiColumnChart = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee80() {
      var scopes, hvacData, upsData, rtltgData, _i12, _scopes5, scope, response, text, parser, xmlDoc, ups, hvac, rtltg, options;
      return _regeneratorRuntime().wrap(function _callee80$(_context92) {
        while (1) switch (_context92.prev = _context92.next) {
          case 0:
            cov_2f40l1qxdw.f[165]++;
            scopes = (cov_2f40l1qxdw.s[1726]++, ['Floor1', 'Floor2']);
            hvacData = (cov_2f40l1qxdw.s[1727]++, []);
            upsData = (cov_2f40l1qxdw.s[1728]++, []);
            rtltgData = (cov_2f40l1qxdw.s[1729]++, []); // Loop through each scope to fetch and process data
            cov_2f40l1qxdw.s[1730]++;
            _i12 = 0, _scopes5 = scopes;
          case 7:
            if (!(_i12 < _scopes5.length)) {
              _context92.next = 39;
              break;
            }
            scope = _scopes5[_i12];
            cov_2f40l1qxdw.s[1731]++;
            _context92.prev = 10;
            cov_2f40l1qxdw.s[1732]++;
            _context92.next = 14;
            return fetch("".concat(url, "/obix/config/Barclays/EPI/").concat(scope));
          case 14:
            response = _context92.sent;
            cov_2f40l1qxdw.s[1733]++;
            _context92.next = 18;
            return response.text();
          case 18:
            text = _context92.sent;
            // Parse the XML response
            parser = (cov_2f40l1qxdw.s[1734]++, new DOMParser());
            xmlDoc = (cov_2f40l1qxdw.s[1735]++, parser.parseFromString(text, "application/xml")); // Extract values for ups, hvac, and rtltg
            ups = (cov_2f40l1qxdw.s[1736]++, parseFloat(xmlDoc.querySelector('ref[name="ups"]').getAttribute('display').split(' ')[0]));
            hvac = (cov_2f40l1qxdw.s[1737]++, parseFloat(xmlDoc.querySelector('ref[name="hvac"]').getAttribute('display').split(' ')[0]));
            rtltg = (cov_2f40l1qxdw.s[1738]++, parseFloat(xmlDoc.querySelector('ref[name="rt$26ltg"]').getAttribute('display').split(' ')[0])); // Store the data for each scope
            cov_2f40l1qxdw.s[1739]++;
            hvacData.push(hvac);
            cov_2f40l1qxdw.s[1740]++;
            upsData.push(ups);
            cov_2f40l1qxdw.s[1741]++;
            rtltgData.push(rtltg);
            _context92.next = 36;
            break;
          case 32:
            _context92.prev = 32;
            _context92.t0 = _context92["catch"](10);
            cov_2f40l1qxdw.s[1742]++;
            console.error("Error fetching data for ".concat(scope, ":"), _context92.t0);
          case 36:
            _i12++;
            _context92.next = 7;
            break;
          case 39:
            cov_2f40l1qxdw.s[1743]++;
            if (epiChart1 instanceof ApexCharts) {
              cov_2f40l1qxdw.b[161][0]++;
              cov_2f40l1qxdw.s[1744]++;
              console.log("Pie chart destroyed");
              cov_2f40l1qxdw.s[1745]++;
              epiChart1.destroy(); // Dispose the existing chart
            } else {
              cov_2f40l1qxdw.b[161][1]++;
            }
            options = (cov_2f40l1qxdw.s[1746]++, {
              series: [{
                name: 'HVAC',
                data: hvacData // Data for HVAC (Floor 1, Floor 2)
              }, {
                name: 'UPS',
                data: upsData // Data for UPS (Floor 1, Floor 2)
              }, {
                name: 'RT & LTG',
                data: rtltgData // Data for RT & LTG (Floor 1, Floor 2)
              }],
              chart: {
                height: 280,
                type: 'bar',
                toolbar: {
                  show: false // Disable the toolbar
                },
                offsetY: 30
              },
              plotOptions: {
                bar: {
                  borderRadius: 10,
                  dataLabels: {
                    position: 'top' // Show data labels on top
                  },
                  columnWidth: '45%',
                  // Set column width for comparison
                  endingShape: 'rounded' // Rounded edges for a smooth look
                }
              },
              dataLabels: {
                enabled: true,
                formatter: function formatter(val) {
                  cov_2f40l1qxdw.f[166]++;
                  cov_2f40l1qxdw.s[1747]++;
                  return val + "%"; // Show percentage symbol next to data
                },
                offsetY: -30,
                style: {
                  fontSize: '12px',
                  colors: ["#304758"]
                }
              },
              xaxis: {
                categories: ["Floor 1", "Floor 2"],
                // X-axis now has Floor 1 and Floor 2
                position: 'bottom',
                axisBorder: {
                  show: false // Hide bottom axis border
                },
                axisTicks: {
                  show: false // Hide ticks for a cleaner look
                },
                crosshairs: {
                  fill: {
                    type: 'gradient',
                    gradient: {
                      colorFrom: '#D8E3F0',
                      colorTo: '#BED1E6',
                      stops: [0, 100],
                      opacityFrom: 0.4,
                      opacityTo: 0.5
                    }
                  }
                },
                tooltip: {
                  enabled: true // Show tooltips on x-axis hover
                }
              },
              yaxis: {
                axisBorder: {
                  show: false // Hide y-axis border
                },
                axisTicks: {
                  show: false // Hide ticks on y-axis
                },
                labels: {
                  show: false,
                  // Hide y-axis labels for a cleaner look
                  formatter: function formatter(val) {
                    cov_2f40l1qxdw.f[167]++;
                    cov_2f40l1qxdw.s[1748]++;
                    return val; // Append percentage symbol to y-axis values
                  }
                }
              },
              legend: {
                position: 'top',
                // Place the legend on top
                horizontalAlign: 'center',
                // Center align the legend
                offsetY: 20
              },
              colors: ['#FFB200', '#667BC6', '#D1E9F6'],
              // Custom colors for HVAC, UPS, RT & LTG
              grid: {
                padding: {
                  left: 10,
                  right: 10
                }
              }
            }); // Select the div where the chart should render
            cov_2f40l1qxdw.s[1749]++;
            epiChart1 = new ApexCharts(document.querySelector("#epiBarChart"), options);
            cov_2f40l1qxdw.s[1750]++;
            _context92.next = 47;
            return epiChart1.render();
          case 47:
          case "end":
            return _context92.stop();
        }
      }, _callee80, null, [[10, 32]]);
    }));
    return _epiColumnChart.apply(this, arguments);
  }
  cov_2f40l1qxdw.s[1751]++;
  $('#epiFloor1').on("click", /*#__PURE__*/function () {
    var _ref29 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee30(event) {
      return _regeneratorRuntime().wrap(function _callee30$(_context30) {
        while (1) switch (_context30.prev = _context30.next) {
          case 0:
            cov_2f40l1qxdw.f[168]++;
            cov_2f40l1qxdw.s[1752]++;
            event.stopPropagation();
            cov_2f40l1qxdw.s[1753]++;
            console.log("epiFloor1 clicked");
            cov_2f40l1qxdw.s[1754]++;
            $(".epiBar").show();
            cov_2f40l1qxdw.s[1755]++;
            $(".epiDonut").hide();
            cov_2f40l1qxdw.s[1756]++;
            $("#epiFloor2").show();
            cov_2f40l1qxdw.s[1757]++;
            $(".epiBtn").hide();
            // $(this).hide();
            cov_2f40l1qxdw.s[1758]++;
            _context30.next = 16;
            return epiColumnChart();
          case 16:
          case "end":
            return _context30.stop();
        }
      }, _callee30);
    }));
    return function (_x7) {
      return _ref29.apply(this, arguments);
    };
  }());
  cov_2f40l1qxdw.s[1759]++;
  $('#epiFloor2').on("click", /*#__PURE__*/function () {
    var _ref30 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee31(event) {
      return _regeneratorRuntime().wrap(function _callee31$(_context31) {
        while (1) switch (_context31.prev = _context31.next) {
          case 0:
            cov_2f40l1qxdw.f[169]++;
            cov_2f40l1qxdw.s[1760]++;
            event.stopPropagation();
            cov_2f40l1qxdw.s[1761]++;
            console.log("epiFloor2 clicked");
            cov_2f40l1qxdw.s[1762]++;
            $(".epiBar").hide();
            cov_2f40l1qxdw.s[1763]++;
            $(".epiDonut").show();
            cov_2f40l1qxdw.s[1764]++;
            $("#epiFloor1").show();
            cov_2f40l1qxdw.s[1765]++;
            $(".epiBtn").show();
            // $(this).hide();
          case 13:
          case "end":
            return _context31.stop();
        }
      }, _callee31);
    }));
    return function (_x8) {
      return _ref30.apply(this, arguments);
    };
  }());

  /* EPI Index end */
  function getLast12Months() {
    cov_2f40l1qxdw.f[170]++;
    var months = (cov_2f40l1qxdw.s[1766]++, []);
    var currentDate = (cov_2f40l1qxdw.s[1767]++, new Date());
    // Generate the last 12 months
    cov_2f40l1qxdw.s[1768]++;
    for (var i = 1; i <= 12; i++) {
      var monthDate = (cov_2f40l1qxdw.s[1769]++, new Date(currentDate.getFullYear(), currentDate.getMonth() - i, 1));
      // Format as "Nov 2023"
      var formattedMonth = (cov_2f40l1qxdw.s[1770]++, monthDate.toLocaleString('default', {
        month: 'short',
        year: 'numeric'
      }));
      cov_2f40l1qxdw.s[1771]++;
      months.push(formattedMonth);
    }
    cov_2f40l1qxdw.s[1772]++;
    return months.reverse(); // Return the last 12 months
  }
  // function getLast12Months1() {
  //     const months = [];
  //     const now = new Date();

  //     for (let i = 11; i >= 0; i--) {
  //         const firstDayOfMonth = new Date(now.getFullYear(), now.getMonth() - i, 1);

  //         const monthName = firstDayOfMonth.toLocaleString('default', {
  //             month: 'short'
  //         }); // Get abbreviated month name (e.g., Jan, Feb)

  //         const year = firstDayOfMonth.getFullYear();

  //         months.push({
  //             startDate: `${firstDayOfMonth.getFullYear()}-${String(firstDayOfMonth.getMonth() + 1).padStart(2, '0')}-${String(firstDayOfMonth.getDate()).padStart(2, '0')}`,
  //             monthName: `${monthName} ${year}` // Add formatted month name
  //         });
  //     }
  //     //console.log("months " + months);
  //     return months;
  // }

  function getLast12Months1() {
    cov_2f40l1qxdw.f[171]++;
    var months = (cov_2f40l1qxdw.s[1773]++, []);
    var now = (cov_2f40l1qxdw.s[1774]++, new Date());
    cov_2f40l1qxdw.s[1775]++;
    for (var i = 0; i < 12; i++) {
      // Calculate the first day of the month for the current iteration
      var firstDayOfMonth = (cov_2f40l1qxdw.s[1776]++, new Date(now.getFullYear(), now.getMonth() - i, 1));

      // Push the formatted first day of the month (YYYY-MM-DD)
      cov_2f40l1qxdw.s[1777]++;
      months.push({
        startDate: "".concat(firstDayOfMonth.getFullYear(), "-").concat(String(firstDayOfMonth.getMonth() + 1).padStart(2, '0'), "-").concat(String(firstDayOfMonth.getDate()).padStart(2, '0'))
      });
    }
    cov_2f40l1qxdw.s[1778]++;
    return months;
  }
  // Example function to generate random data for each scope
  function getRandomData() {
    cov_2f40l1qxdw.f[172]++;
    cov_2f40l1qxdw.s[1779]++;
    return Array.from({
      length: 12
    }, function () {
      cov_2f40l1qxdw.f[173]++;
      cov_2f40l1qxdw.s[1780]++;
      return Math.floor(Math.random() * 100) + 20;
    }); // Random data for 12 months
  }
  function showAlert(_x9, _x10) {
    return _showAlert.apply(this, arguments);
  }
  function _showAlert() {
    _showAlert = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee81(message1, message2) {
      var modal;
      return _regeneratorRuntime().wrap(function _callee81$(_context93) {
        while (1) switch (_context93.prev = _context93.next) {
          case 0:
            cov_2f40l1qxdw.f[174]++;
            cov_2f40l1qxdw.s[1781]++;
            // Set the first message for modalMessage1 in red
            document.getElementById("modalMessage").style.color = "red";
            cov_2f40l1qxdw.s[1782]++;
            document.getElementById("modalMessage").innerText = message1; // Set the message for modalMessage1

            // Set the second message for modalMessage in green
            cov_2f40l1qxdw.s[1783]++;
            document.getElementById("modalMessage1").style.color = "green";
            cov_2f40l1qxdw.s[1784]++;
            document.getElementById("modalMessage1").innerText = message2; // Set the message for modalMessage

            // Show the modal
            modal = (cov_2f40l1qxdw.s[1785]++, new bootstrap.Modal(document.getElementById('staticBackdrop')));
            cov_2f40l1qxdw.s[1786]++;
            modal.show();
            // clearDateInputs();
            // clearDateInputsWater();
          case 12:
          case "end":
            return _context93.stop();
        }
      }, _callee81);
    }));
    return _showAlert.apply(this, arguments);
  }
  function validateDateRange(_x11, _x12) {
    return _validateDateRange.apply(this, arguments);
  } //     async function validateDateRange(startDate, endDate) {
  //     var today = new Date(); // Current date
  //     // Convert startDate and endDate to Date objects if they are not already
  //     startDate = new Date(startDate);
  //     endDate = new Date(endDate);
  //     // Normalize time components (set to 00:00:00) to ensure only the date is compared
  //     startDate.setHours(0, 0, 0, 0);
  //     endDate.setHours(0, 0, 0, 0);
  //     today.setHours(0, 0, 0, 0);
  //     // Check if the start date is after today's date
  //     if (startDate > today) {
  //         showAlert('Start date cannot be in the future.', 'Please select a valid start date.');
  //         return false;
  //     }
  //     // Check if the end date is after today's date
  //     if (endDate > today) {
  //         showAlert('End date cannot be in the future.', 'Please select a valid end date.');
  //         return false;
  //     }
  //     // Check if the start date and end date are the same
  //     if (startDate.getTime() === endDate.getTime()) {
  //         showAlert('Start Date And End Date Cannot Be The Same', 'Please select a valid date range.');
  //         return false;
  //     }
  //     // Calculate the difference in time
  //     var timeDiff = endDate - startDate;
  //     // Calculate the difference in days
  //     var dayDiff = timeDiff / (1000 * 3600 * 24);
  //     // Validate the number of selected days
  //     if (dayDiff > 31) {
  //         showAlert('You cannot select more than 31 days.', 'Please select a valid date range.');
  //         return false;
  //     }
  //     return true; // All validations passed
  // }
  function _validateDateRange() {
    _validateDateRange = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee82(startDate, endDate) {
      var today, limitDate, timeDiff, dayDiff;
      return _regeneratorRuntime().wrap(function _callee82$(_context94) {
        while (1) switch (_context94.prev = _context94.next) {
          case 0:
            cov_2f40l1qxdw.f[175]++;
            today = (cov_2f40l1qxdw.s[1787]++, new Date()); // Current date
            limitDate = (cov_2f40l1qxdw.s[1788]++, new Date('2024-08-31')); // Limit date (hardcoded)
            cov_2f40l1qxdw.s[1789]++;
            startDate = new Date(startDate);
            cov_2f40l1qxdw.s[1790]++;
            endDate = new Date(endDate);
            //resetCharts();

            // Check if the start date is after today's date
            cov_2f40l1qxdw.s[1791]++;
            if (!(startDate > today)) {
              _context94.next = 18;
              break;
            }
            cov_2f40l1qxdw.b[162][0]++;
            cov_2f40l1qxdw.s[1792]++;
            console.log(startDate);
            cov_2f40l1qxdw.s[1793]++;
            showAlert('Start date cannot be in the future.', 'Please select a valid start date.');
            cov_2f40l1qxdw.s[1794]++;
            return _context94.abrupt("return", false);
          case 18:
            cov_2f40l1qxdw.b[162][1]++;
          case 19:
            cov_2f40l1qxdw.s[1795]++;
            if (!(endDate > today)) {
              _context94.next = 30;
              break;
            }
            cov_2f40l1qxdw.b[163][0]++;
            cov_2f40l1qxdw.s[1796]++;
            console.log(endDate);
            cov_2f40l1qxdw.s[1797]++;
            showAlert('End date cannot be in the future.', 'Please select a valid end date.');
            cov_2f40l1qxdw.s[1798]++;
            return _context94.abrupt("return", false);
          case 30:
            cov_2f40l1qxdw.b[163][1]++;
          case 31:
            cov_2f40l1qxdw.s[1799]++;
            if (!(startDate < limitDate)) {
              _context94.next = 40;
              break;
            }
            cov_2f40l1qxdw.b[164][0]++;
            cov_2f40l1qxdw.s[1800]++;
            showAlert('Data for selected start date is not available.', 'Please select a date on or after August 31, 2024.');
            cov_2f40l1qxdw.s[1801]++;
            return _context94.abrupt("return", false);
          case 40:
            cov_2f40l1qxdw.b[164][1]++;
          case 41:
            cov_2f40l1qxdw.s[1802]++;
            if (!(endDate < limitDate)) {
              _context94.next = 50;
              break;
            }
            cov_2f40l1qxdw.b[165][0]++;
            cov_2f40l1qxdw.s[1803]++;
            showAlert('Data for selected end date is not available.', 'Please select a date on or after August 31, 2024.');
            cov_2f40l1qxdw.s[1804]++;
            return _context94.abrupt("return", false);
          case 50:
            cov_2f40l1qxdw.b[165][1]++;
          case 51:
            cov_2f40l1qxdw.s[1805]++;
            if (!(startDate >= endDate)) {
              _context94.next = 60;
              break;
            }
            cov_2f40l1qxdw.b[166][0]++;
            cov_2f40l1qxdw.s[1806]++;
            showAlert('Start Date And End Date Can Not Be Same', 'Please select a valid date range.');
            cov_2f40l1qxdw.s[1807]++;
            return _context94.abrupt("return", false);
          case 60:
            cov_2f40l1qxdw.b[166][1]++;
          case 61:
            // Calculate the difference in time
            timeDiff = (cov_2f40l1qxdw.s[1808]++, endDate - startDate); // Calculate the difference in days
            dayDiff = (cov_2f40l1qxdw.s[1809]++, timeDiff / (1000 * 3600 * 24)); // Validate the number of selected days
            cov_2f40l1qxdw.s[1810]++;
            if (!(dayDiff > 31)) {
              _context94.next = 72;
              break;
            }
            cov_2f40l1qxdw.b[167][0]++;
            cov_2f40l1qxdw.s[1811]++;
            showAlert('You cannot select more than 31 days.', 'Please select a valid date range.');
            cov_2f40l1qxdw.s[1812]++;
            return _context94.abrupt("return", false);
          case 72:
            cov_2f40l1qxdw.b[167][1]++;
          case 73:
            cov_2f40l1qxdw.s[1813]++;
            return _context94.abrupt("return", true);
          case 75:
          case "end":
            return _context94.stop();
        }
      }, _callee82);
    }));
    return _validateDateRange.apply(this, arguments);
  }
  function normalizeDate(date) {
    cov_2f40l1qxdw.f[176]++;
    var normalizedDate = (cov_2f40l1qxdw.s[1814]++, new Date(date));
    cov_2f40l1qxdw.s[1815]++;
    normalizedDate.setMilliseconds(0); // Remove milliseconds
    cov_2f40l1qxdw.s[1816]++;
    normalizedDate.setSeconds(0); // Ignore seconds as well
    cov_2f40l1qxdw.s[1817]++;
    return normalizedDate;
  }

  // Reusable function to check data availability and display message
  function checkDataAvailability(scopeValues, elementId) {
    cov_2f40l1qxdw.f[177]++;
    cov_2f40l1qxdw.s[1818]++;
    if ((cov_2f40l1qxdw.b[169][0]++, scopeValues.length === 0) || (cov_2f40l1qxdw.b[169][1]++, scopeValues.every(function (value) {
      cov_2f40l1qxdw.f[178]++;
      cov_2f40l1qxdw.s[1819]++;
      return value === 0;
    }))) {
      cov_2f40l1qxdw.b[168][0]++;
      cov_2f40l1qxdw.s[1820]++;
      // Show a message when no data is available or all values are 0
      document.querySelector("#".concat(elementId)).innerHTML = "<p style='text-align: center; display: flex; justify-content: center; align-items: center; height: 100%;'>No data available</p>";
      cov_2f40l1qxdw.s[1821]++;
      return; // Exit the function early if no data is available
    } else {
      cov_2f40l1qxdw.b[168][1]++;
    }
  }

  // Example usage for different elements
  var scopeValues1 = (cov_2f40l1qxdw.s[1822]++, [0, 0, 0]); // Example for scope 1
  var scopeValues2 = (cov_2f40l1qxdw.s[1823]++, [10, 0, 5]); // Example for scope 2
  cov_2f40l1qxdw.s[1824]++;
  checkDataAvailability(scopeValues, "chartdiv"); // Check and update #chartdiv
  // Check and update #otherElementId
  function clearDateInputs() {
    return _clearDateInputs.apply(this, arguments);
  }
  function _clearDateInputs() {
    _clearDateInputs = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee83() {
      return _regeneratorRuntime().wrap(function _callee83$(_context95) {
        while (1) switch (_context95.prev = _context95.next) {
          case 0:
            cov_2f40l1qxdw.f[179]++;
            cov_2f40l1qxdw.s[1825]++;
            $('#startDate').val(''); // Clear start date
            cov_2f40l1qxdw.s[1826]++;
            $('#endDate').val(''); // Clear end date
          case 5:
          case "end":
            return _context95.stop();
        }
      }, _callee83);
    }));
    return _clearDateInputs.apply(this, arguments);
  }
  function clearDateInputsWater() {
    return _clearDateInputsWater.apply(this, arguments);
  }
  function _clearDateInputsWater() {
    _clearDateInputsWater = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee84() {
      return _regeneratorRuntime().wrap(function _callee84$(_context96) {
        while (1) switch (_context96.prev = _context96.next) {
          case 0:
            cov_2f40l1qxdw.f[180]++;
            cov_2f40l1qxdw.s[1827]++;
            $('#startDateWater').val(''); // Clear start date
            cov_2f40l1qxdw.s[1828]++;
            $('#endDateWater').val(''); // Clear end date
          case 5:
          case "end":
            return _context96.stop();
        }
      }, _callee84);
    }));
    return _clearDateInputsWater.apply(this, arguments);
  }
  function clearDateInputsPower() {
    return _clearDateInputsPower.apply(this, arguments);
  }
  function _clearDateInputsPower() {
    _clearDateInputsPower = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee85() {
      return _regeneratorRuntime().wrap(function _callee85$(_context97) {
        while (1) switch (_context97.prev = _context97.next) {
          case 0:
            cov_2f40l1qxdw.f[181]++;
            cov_2f40l1qxdw.s[1829]++;
            $("#startDatePower").val('');
            cov_2f40l1qxdw.s[1830]++;
            $("#endDatePower").val('');
          case 5:
          case "end":
            return _context97.stop();
        }
      }, _callee85);
    }));
    return _clearDateInputsPower.apply(this, arguments);
  }
  function clearDateInputsOccupancy() {
    return _clearDateInputsOccupancy.apply(this, arguments);
  }
  function _clearDateInputsOccupancy() {
    _clearDateInputsOccupancy = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee86() {
      return _regeneratorRuntime().wrap(function _callee86$(_context98) {
        while (1) switch (_context98.prev = _context98.next) {
          case 0:
            cov_2f40l1qxdw.f[182]++;
            cov_2f40l1qxdw.s[1831]++;
            $("#startDateOccupancy").val('');
            cov_2f40l1qxdw.s[1832]++;
            $("#endDateOccupancy").val('');
          case 5:
          case "end":
            return _context98.stop();
        }
      }, _callee86);
    }));
    return _clearDateInputsOccupancy.apply(this, arguments);
  }
  function clearDateInputsAqi() {
    return _clearDateInputsAqi.apply(this, arguments);
  }
  function _clearDateInputsAqi() {
    _clearDateInputsAqi = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee87() {
      return _regeneratorRuntime().wrap(function _callee87$(_context99) {
        while (1) switch (_context99.prev = _context99.next) {
          case 0:
            cov_2f40l1qxdw.f[183]++;
            cov_2f40l1qxdw.s[1833]++;
            $("#startDateIAQ").val('');
            cov_2f40l1qxdw.s[1834]++;
            $("#endDateIAQ").val('');
          case 5:
          case "end":
            return _context99.stop();
        }
      }, _callee87);
    }));
    return _clearDateInputsAqi.apply(this, arguments);
  }
  function clearDateInputsEpi() {
    return _clearDateInputsEpi.apply(this, arguments);
  }
  function _clearDateInputsEpi() {
    _clearDateInputsEpi = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee88() {
      return _regeneratorRuntime().wrap(function _callee88$(_context100) {
        while (1) switch (_context100.prev = _context100.next) {
          case 0:
            cov_2f40l1qxdw.f[184]++;
            cov_2f40l1qxdw.s[1835]++;
            $("#startDateEPI").val('');
            cov_2f40l1qxdw.s[1836]++;
            $("#endDateEPI").val('');
          case 5:
          case "end":
            return _context100.stop();
        }
      }, _callee88);
    }));
    return _clearDateInputsEpi.apply(this, arguments);
  }
});
